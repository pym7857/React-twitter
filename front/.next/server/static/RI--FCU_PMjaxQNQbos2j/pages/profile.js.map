{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./node_modules/@babel/runtime-corejs2/helpers/getPrototypeOf.js","webpack:///external \"core-js/library/fn/object/get-prototype-of\"","webpack:///./node_modules/@babel/runtime-corejs2/helpers/classCallCheck.js","webpack:///./node_modules/@babel/runtime-corejs2/core-js/object/define-properties.js","webpack:///external \"next/router\"","webpack:///./node_modules/@babel/runtime-corejs2/core-js/json/stringify.js","webpack:///./node_modules/@babel/runtime-corejs2/core-js/object/get-prototype-of.js","webpack:///external \"styled-components\"","webpack:///external \"antd\"","webpack:///./node_modules/@babel/runtime-corejs2/core-js/object/freeze.js","webpack:///external \"core-js/library/fn/object/freeze\"","webpack:///external \"core-js/library/fn/get-iterator\"","webpack:///./node_modules/@babel/runtime-corejs2/helpers/assertThisInitialized.js","webpack:///./node_modules/@babel/runtime-corejs2/helpers/interopRequireDefault.js","webpack:///./reducers/user.js","webpack:///./node_modules/@babel/runtime-corejs2/helpers/inherits.js","webpack:///external \"react-slick\"","webpack:///./node_modules/@babel/runtime-corejs2/helpers/esm/asyncToGenerator.js","webpack:///external \"core-js/library/fn/array/is-array\"","webpack:///./node_modules/@babel/runtime-corejs2/core-js/object/create.js","webpack:///external \"immer\"","webpack:///./node_modules/@babel/runtime-corejs2/core-js/object/set-prototype-of.js","webpack:///external \"core-js/library/fn/object/define-property\"","webpack:///./containers/NicknameEditForm.js","webpack:///./components/FollowList.js","webpack:///./pages/profile.js","webpack:///./node_modules/@babel/runtime-corejs2/helpers/createClass.js","webpack:///external \"core-js/library/fn/object/set-prototype-of\"","webpack:///./node_modules/@babel/runtime-corejs2/core-js/symbol/iterator.js","webpack:///./node_modules/@babel/runtime-corejs2/core-js/get-iterator.js","webpack:///./node_modules/next/link.js","webpack:///./node_modules/@babel/runtime-corejs2/core-js/symbol.js","webpack:///./node_modules/@babel/runtime-corejs2/helpers/possibleConstructorReturn.js","webpack:///external \"core-js/library/fn/promise\"","webpack:///external \"url\"","webpack:///external \"react\"","webpack:///./node_modules/next/dist/client/link.js","webpack:///external \"regenerator-runtime\"","webpack:///./node_modules/@babel/runtime-corejs2/helpers/esm/arrayWithHoles.js","webpack:///./node_modules/@babel/runtime-corejs2/helpers/esm/iterableToArrayLimit.js","webpack:///./node_modules/@babel/runtime-corejs2/helpers/esm/nonIterableRest.js","webpack:///./node_modules/@babel/runtime-corejs2/helpers/esm/slicedToArray.js","webpack:///./node_modules/@babel/runtime-corejs2/core-js/promise.js","webpack:///external \"core-js/library/fn/json/stringify\"","webpack:///external \"core-js/library/fn/symbol/iterator\"","webpack:///external \"react-redux\"","webpack:///./node_modules/@babel/runtime-corejs2/core-js/object/define-property.js","webpack:///./node_modules/@babel/runtime-corejs2/helpers/typeof.js","webpack:///./node_modules/@babel/runtime-corejs2/regenerator/index.js","webpack:///external \"core-js/library/fn/object/define-properties\"","webpack:///external \"@ant-design/icons\"","webpack:///external \"core-js/library/fn/object/create\"","webpack:///./reducers/post.js","webpack:///./node_modules/@babel/runtime-corejs2/core-js/array/is-array.js","webpack:///external \"next-server/dist/lib/utils\"","webpack:///external \"prop-types\"","webpack:///./node_modules/@babel/runtime-corejs2/helpers/esm/taggedTemplateLiteral.js","webpack:///./components/ImagesZoom/style.js","webpack:///./components/ImagesZoom/index.js","webpack:///./components/PostImages.js","webpack:///./components/PostCardContent.js","webpack:///./containers/CommentForm.js","webpack:///./components/FollowButton.js","webpack:///./containers/PostCard.js","webpack:///./node_modules/@babel/runtime-corejs2/helpers/setPrototypeOf.js","webpack:///external \"core-js/library/fn/symbol\"","webpack:///external \"moment\""],"names":["initialState","isLoggingOut","isLogginIn","logInErrorReason","signedUp","isSignedUp","signUpErrorReason","me","followingList","followerList","userInfo","isEditingNickname","editNicknameErrorReason","hasMoreFollower","hasMoreFollowing","SIGN_UP_REQUEST","SIGN_UP_SUCCESS","SIGN_UP_FAILURE","LOG_IN_REQUEST","LOG_IN_SUCCESS","LOG_IN_FAILURE","LOG_OUT_REQUEST","LOG_OUT_SUCCESS","LOG_OUT_FAILURE","LOAD_USER_REQUEST","LOAD_USER_SUCCESS","LOAD_USER_FAILURE","LOAD_FOLLOWERS_REQUEST","LOAD_FOLLOWERS_SUCCESS","LOAD_FOLLOWERS_FAILURE","LOAD_FOLLOWINGS_REQUEST","LOAD_FOLLOWINGS_SUCCESS","LOAD_FOLLOWINGS_FAILURE","FOLLOW_USER_REQUEST","FOLLOW_USER_SUCCESS","FOLLOW_USER_FAILURE","UNFOLLOW_USER_REQUEST","UNFOLLOW_USER_SUCCESS","UNFOLLOW_USER_FAILURE","REMOVE_FOLLOWER_REQUEST","REMOVE_FOLLOWER_SUCCESS","REMOVE_FOLLOWER_FAILURE","EDIT_NICKNAME_REQUEST","EDIT_NICKNAME_SUCCESS","EDIT_NICKNAME_FAILURE","ADD_POST_TO_ME","REMOVE_POST_OF_ME","reducer","state","action","produce","draft","type","isLoggingIn","isLoggedIn","data","reason","isSigningUp","alert","error","isThisMe","Followings","unshift","id","index","findIndex","v","splice","index2","console","log","Posts","offset","forEach","f","push","length","userIndex1","Followers","userIndex2","nickname","postIndex","NicknameEditForm","useState","editedName","setEditedName","dispatch","useDispatch","useSelector","user","onChangeNickname","useCallback","e","target","value","onEditNickname","preventDefault","marginBottom","border","padding","FollowList","memo","header","hasMore","onClickMore","onClickStop","gutter","xs","md","width","item","maringTop","Profile","post","mainPosts","onUnfollow","userId","onRemoveFollower","loadMoreFollowings","loadMoreFollowers","map","c","createdAt","getInitialProps","context","store","getState","LOAD_USER_POSTS_REQUEST","imagePaths","isAddingPost","addPostErrorReason","postAdded","isAddingComment","addCommentErrorReason","commentAdded","addLikeErrorReason","hasMorePost","singlePost","LOAD_MAIN_POSTS_REQUEST","LOAD_MAIN_POSTS_SUCCESS","LOAD_MAIN_POSTS_FAILURE","LOAD_HASHTAG_POSTS_REQUEST","LOAD_HASHTAG_POSTS_SUCCESS","LOAD_HASHTAG_POSTS_FAILURE","LOAD_USER_POSTS_SUCCESS","LOAD_USER_POSTS_FAILURE","UPLOAD_IMAGES_REQUEST","UPLOAD_IMAGES_SUCCESS","UPLOAD_IMAGES_FAILURE","ADD_POST_REQUEST","ADD_POST_SUCCESS","ADD_POST_FAILURE","LIKE_POST_REQUEST","LIKE_POST_SUCCESS","LIKE_POST_FAILURE","UNLIKE_POST_REQUEST","UNLIKE_POST_SUCCESS","UNLIKE_POST_FAILURE","ADD_COMMENT_REQUEST","ADD_COMMENT_SUCCESS","ADD_COMMENT_FAILURE","LOAD_COMMENTS_REQUEST","LOAD_COMMENTS_SUCCESS","LOAD_COMMENTS_FAILURE","RETWEET_REQUEST","RETWEET_SUCCESS","RETWEET_FAILURE","REMOVE_POST_REQUEST","REMOVE_POST_SUCCESS","REMOVE_POST_FAILURE","REMOVE_IMAGE","LOAD_POST_REQUEST","LOAD_POST_SUCCESS","LOAD_POST_FAILURE","p","i","lastId","postId","Comments","comment","comments","Likers","likerIndex","Overlay","styled","div","Header","SlickWrapper","CloseBtn","CloseOutlined","Indicator","ImgWrapper","ImagesZoom","images","onClose","currentSlide","setCurrentSlide","backURL","slide","src","PostImages","showImagesZoom","setShowImagesZoom","onZoom","display","textAlign","verticalAlign","PostCardContent","postData","split","match","pathname","query","tag","slice","CommentForm","commentText","setCommentText","onSubmitComment","content","useEffect","onChangeCommentText","FollowButton","onFollow","User","find","moment","locale","CardWrapper","PostCard","commentFormOpened","setCommentFormOpened","myId","isLiked","onToggleComment","prev","onToggleLike","onRetweet","onRemovePost","Images","UserId","RetweetId","Retweet","float","format"],"mappings":"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ACA;;AAEA;AACA;AACA,CAAC;;AAED,YAAY,mBAAO,CAAC,MAAK;;AAEzB,2BAA2B,mBAAO,CAAC,MAAO;;AAE1C,mCAAmC,mBAAO,CAAC,MAAY;;AAEvD,4BAA4B,mBAAO,CAAC,MAAa;;AAEjD,cAAc,mBAAO,CAAC,MAA4B;;AAElD;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,uHAAuH;AACvH;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,yBAAyB;;AAEzB;;AAEA;AACA;AACA,OAAO;;;AAGP;AACA;AACA,OAAO;AACP;;AAEA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA,OAAO;AACP;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,gDAAgD;;AAEhD;;AAEA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;;AAEA;AACA;AACA,oCAAoC;;;AAGpC;AACA;AACA,OAAO;;;AAGP;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,QAAQ;AACR;;AAEA;AACA;AACA,OAAO;AACP;;;AAGA,UAAU,IAAwC;AAClD;AACA;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA,CAAC;;AAED,IAAI,KAAsC,EAAE,oBAuB3C;;AAED,uB;;;;;;;ACjPA,gD;;;;;;;;;;;;;;ACA0D;AAC3C;AACf,MAAM,kBAAc;AACpB,C;;;;;;ACHsD;AACvC;AACf;AACA;AACA;AACA;;AAEA;AACA,kBAAkB,sBAAY,UAAU,+BAA+B;AACvE;;AAEA;AACA;AACA,GAAG;AACH;AA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","file":"static\\RI--FCU_PMjaxQNQbos2j\\pages\\profile.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = require('../../../ssr-module-cache.js');\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tvar threw = true;\n \t\ttry {\n \t\t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n \t\t\tthrew = false;\n \t\t} finally {\n \t\t\tif(threw) delete installedModules[moduleId];\n \t\t}\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 2);\n","var _Object$getPrototypeOf = require(\"../core-js/object/get-prototype-of\");\n\nvar _Object$setPrototypeOf = require(\"../core-js/object/set-prototype-of\");\n\nfunction _getPrototypeOf(o) {\n  module.exports = _getPrototypeOf = _Object$setPrototypeOf ? _Object$getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || _Object$getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\n\nmodule.exports = _getPrototypeOf;","module.exports = require(\"core-js/library/fn/object/get-prototype-of\");","function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nmodule.exports = _classCallCheck;","module.exports = require(\"core-js/library/fn/object/define-properties\");","module.exports = require(\"next/router\");","module.exports = require(\"core-js/library/fn/json/stringify\");","module.exports = require(\"core-js/library/fn/object/get-prototype-of\");","module.exports = require(\"styled-components\");","module.exports = require(\"antd\");","module.exports = require(\"core-js/library/fn/object/freeze\");","module.exports = require(\"core-js/library/fn/object/freeze\");","module.exports = require(\"core-js/library/fn/get-iterator\");","function _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nmodule.exports = _assertThisInitialized;","function _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nmodule.exports = _interopRequireDefault;","import produce from 'immer';\r\n\r\n/* const dummyUser = {\r\n    nickname: '제로초',\r\n    Post: [],\r\n    followings: [],\r\n    followers: [],\r\n    id: 1,\r\n}; */\r\n\r\n/* redux state */\r\nexport const initialState = {\r\n    isLoggingOut: false,          // 로그아웃 시도 중\r\n    isLogginIn: false,            // 로그인 시도 중 \r\n    logInErrorReason: '',         // 로그인 에러 사유\r\n\r\n    signedUp: false,              // 회원가입 성공\r\n    isSignedUp: false,            // 회원가입 시도 중\r\n    signUpErrorReason: '',        // 회원가입 에러 사유\r\n\r\n    me: null,                     // 내 정보\r\n    followingList: [],            // '내'가 팔로잉 하고있는 사람들 목록 (프로필 페이지에서 쓰임)\r\n    followerList: [],             // '나'의 팔로워들 목록              (프로필 페이지에서 쓰임)\r\n    userInfo: null,               // 남의 정보 \r\n\r\n    isEditingNickname: false,     // 닉네임 변경 중 \r\n    editNicknameErrorReason: '',  // 닉네임 변경 실패 사유 \r\n\r\n    hasMoreFollower: false,       // 더보기 버튼을 존재시킬지\r\n    hasMoreFollowing: false,      // 더보기 버튼을 존재시킬지\r\n};\r\n\r\n/* Action의 이름 */\r\nexport const SIGN_UP_REQUEST = 'SIGN_UP_REQUEST';\r\nexport const SIGN_UP_SUCCESS = 'SIGN_UP_SUCCESS';\r\nexport const SIGN_UP_FAILURE = 'SIGN_UP_FAILURE';\r\n\r\nexport const LOG_IN_REQUEST = 'LOG_IN_REQUEST';\r\nexport const LOG_IN_SUCCESS = 'LOG_IN_SUCCESS';\r\nexport const LOG_IN_FAILURE = 'LOG_IN_FAILURE';\r\n\r\nexport const LOG_OUT_REQUEST = 'LOG_OUT_REQUEST';\r\nexport const LOG_OUT_SUCCESS = 'LOG_OUT_SUCCESS';\r\nexport const LOG_OUT_FAILURE = 'LOG_OUT_FAILURE';\r\n\r\nexport const LOAD_USER_REQUEST = 'LOAD_USER_REQUEST';               // 사용자 불러오기 \r\nexport const LOAD_USER_SUCCESS = 'LOAD_USER_SUCCESS';\r\nexport const LOAD_USER_FAILURE = 'LOAD_USER_FAILURE';\r\n\r\nexport const LOAD_FOLLOWERS_REQUEST = 'LOAD_FOLLOWERS_REQUEST';\r\nexport const LOAD_FOLLOWERS_SUCCESS = 'LOAD_FOLLOWERS_SUCCESS';\r\nexport const LOAD_FOLLOWERS_FAILURE = 'LOAD_FOLLOWERS_FAILURE';\r\n\r\nexport const LOAD_FOLLOWINGS_REQUEST = 'LOAD_FOLLOWINGS_REQUEST';\r\nexport const LOAD_FOLLOWINGS_SUCCESS = 'LOAD_FOLLOWINGS_SUCCESS';\r\nexport const LOAD_FOLLOWINGS_FAILURE = 'LOAD_FOLLOWINGS_FAILURE';\r\n\r\nexport const FOLLOW_USER_REQUEST = 'FOLLOW_USER_REQUEST';           // 팔로우 액션\r\nexport const FOLLOW_USER_SUCCESS = 'FOLLOW_USER_SUCCESS';\r\nexport const FOLLOW_USER_FAILURE = 'FOLLOW_USER_FAILURE';\r\n\r\nexport const UNFOLLOW_USER_REQUEST = 'UNFOLLOW_USER_REQUEST';       // 언팔 액션\r\nexport const UNFOLLOW_USER_SUCCESS = 'UNFOLLOW_USER_SUCCESS';\r\nexport const UNFOLLOW_USER_FAILURE = 'UNFOLLOW_USER_FAILURE';\r\n\r\nexport const REMOVE_FOLLOWER_REQUEST = 'REMOVE_FOLLOWER_REQUEST';   // 팔로워 제거 \r\nexport const REMOVE_FOLLOWER_SUCCESS = 'REMOVE_FOLLOWER_SUCCESS';\r\nexport const REMOVE_FOLLOWER_FAILURE = 'REMOVE_FOLLOWER_FAILURE';\r\n\r\nexport const EDIT_NICKNAME_REQUEST = 'EDIT_NICKNAME_REQUEST';\r\nexport const EDIT_NICKNAME_SUCCESS = 'EDIT_NICKNAME_SUCCESS';\r\nexport const EDIT_NICKNAME_FAILURE = 'EDIT_NICKNAME_FAILURE';\r\n\r\nexport const ADD_POST_TO_ME = 'ADD_POST_TO_ME';                    \r\nexport const REMOVE_POST_OF_ME = 'REMOVE_POST_OF_ME';\r\n\r\n/* 실제 Action */\r\n// ...\r\n\r\n/* Reducer */\r\nconst reducer = (state = initialState, action) => {\r\n    /* immer */\r\n    return produce(state, (draft) => {      // immer에게 불변성을 맡기고, 우리는 draft만 자유롭게 변경해주면 된다.\r\n      switch (action.type) {\r\n        case LOG_IN_REQUEST: {\r\n            draft.isLoggingIn = true;\r\n            draft.isLoggedIn = false;\r\n            draft.logInErrorReason = '';\r\n            break;\r\n            /* return {\r\n                ...state,\r\n                isLoggingIn: true,\r\n                isLoggedIn: false,\r\n                logInErrorReason: '',\r\n            }; */\r\n        }\r\n        case LOG_IN_SUCCESS: {\r\n            draft.isLoggingIn = false;\r\n            draft.me = action.data;\r\n            break;\r\n            /* return {\r\n                ...state,\r\n                isLoggingIn: false,\r\n                me: action.data,\r\n                isLoading: false,\r\n            }; */\r\n        }\r\n        case LOG_IN_FAILURE: {\r\n            draft.isLoggingIn = false;\r\n            draft.logInErrorReason = action.reason;   // saga에서 보낸 action.reason\r\n            draft.me = null;\r\n            break;\r\n            /* return {\r\n                ...state,\r\n                isLoggingIn: false,\r\n                logInErrorReason: action.error,\r\n                me: null,\r\n            }; */\r\n        }\r\n        case LOG_OUT_REQUEST: {\r\n            draft.isLoggingOut = true;\r\n            break;\r\n            /* return {\r\n              ...state,\r\n              isLoggingOut: true,\r\n            }; */\r\n        }\r\n        case LOG_OUT_SUCCESS: {\r\n            draft.isLoggingOut = false;\r\n            draft.me = null;\r\n            break;\r\n            /* return {\r\n              ...state,\r\n              isLoggingOut: false,\r\n              me: null,\r\n            }; */\r\n        }\r\n        case SIGN_UP_REQUEST: {\r\n            draft.isSigningUp = true;\r\n            draft.isSignedUp = false;\r\n            draft.signUpErrorReason = '';\r\n            break;\r\n            /* return {\r\n                ...state,\r\n                isSigningUp: true,\r\n                isSignedUp: false,\r\n                signUpErrorReason: '',\r\n            }; */\r\n        }\r\n        case SIGN_UP_SUCCESS: {\r\n            alert('회원가입 성공!'); \r\n            draft.isSigningUp = false;\r\n            draft.isSignedUp = true;\r\n            break;\r\n            /* return {\r\n                isSigningUp: false,\r\n                isSignedUp: true,\r\n            }; */\r\n        }\r\n        case SIGN_UP_FAILURE: {\r\n            draft.isSigningUp = false;\r\n            draft.signUpErrorReason = action.error;\r\n            break;\r\n            /* return {\r\n                isSigningUp: false,\r\n                signUpErrorReason: action.error,\r\n            }; */\r\n        }\r\n        case LOAD_USER_REQUEST: {\r\n            break;\r\n            /* return {\r\n              ...state,\r\n            }; */\r\n        }\r\n        case LOAD_USER_SUCCESS: {\r\n            if (action.isThisMe) {\r\n              draft.me = action.data;\r\n              break;\r\n            } else {\r\n              draft.userInfo = action.data;\r\n              break;\r\n            }\r\n            /* if (action.isThisMe) {    // (sagas/user.js)의 function*loadUser() 에서 put으로 넘겨준것이 바로, action.me\r\n                return {\r\n                    ...state,\r\n                    me: action.data,\r\n                  };\r\n            } else {\r\n                return {\r\n                    ...state,\r\n                    userInfo: action.data,\r\n                  };\r\n            } */\r\n        }\r\n        case LOAD_USER_FAILURE: {\r\n            break;\r\n            /* return {\r\n              ...state,\r\n            }; */\r\n        }\r\n        case FOLLOW_USER_REQUEST: {\r\n            break;\r\n            /* return {\r\n              ...state,\r\n            }; */\r\n        }\r\n        case FOLLOW_USER_SUCCESS: {\r\n            draft.me.Followings.unshift({ id: action.data });\r\n            break;\r\n            /* return {\r\n              ...state,\r\n              me: {\r\n                ...state.me,\r\n                Followings: [{ id: action.data }, ...state.me.Followings],\r\n              },\r\n            }; */\r\n        }\r\n        case FOLLOW_USER_FAILURE: {\r\n            break;\r\n            /* return {\r\n              ...state,\r\n            }; */\r\n        }\r\n        case UNFOLLOW_USER_REQUEST: {\r\n            break;\r\n            /* return {\r\n              ...state,\r\n            }; */\r\n        }\r\n        case UNFOLLOW_USER_SUCCESS: {\r\n            // me.Followings 배열 안에 상대방 id가 들었는지 찾기 \r\n            const index = draft.me.Followings.findIndex(v => v.id === action.data);\r\n            draft.me.Followings.splice(index, 1);\r\n\r\n            // followingList 배열 안에 상대방 id가 들었는지 찾기 (me.FollowingList가 아니다!!!!!!!!!!!)\r\n            const index2 = draft.followingList.findIndex(v => v.id === action.data);\r\n            draft.followingList.splice(index2, 1);\r\n            break;\r\n        }\r\n        case UNFOLLOW_USER_FAILURE: { \r\n            console.log('action.error=', action.error);\r\n            break;\r\n            /* return {\r\n              ...state,\r\n            }; */\r\n        }\r\n        case ADD_POST_TO_ME: {\r\n            draft.me.Posts.unshift({ id: action.data });\r\n            break;\r\n            /* return {\r\n              ...state,\r\n              me: {\r\n                ...state.me,\r\n                Posts: [{ id: action.data }, ...state.me.Posts],    // 작성한 게시글을, user정보안의 게시글 정보에 넣어주기 \r\n              },\r\n            }; */\r\n        }\r\n        case LOAD_FOLLOWERS_REQUEST: {\r\n            draft.followerList = !action.offset ? [] : draft.followerList;      // offset이 없는 경우, followerList = []\r\n                                                                                // 이렇게 해줘야 2번씩 로딩 안됨 \r\n            break;\r\n            /* return {\r\n              ...state,\r\n              //hasMoreFollower: action.offset ? state.hasMoreFollower : true,  // 처음화면 일때는, offset은 0 이므로, false취급을 받아서 true로 넘어간다.(=더보기 버튼을 보여준다.)                                                         \r\n                                                                                // (처음화면일때 offset이 0인것은, router.get('/:id/followers'... 에서 확인가능)      \r\n                                                                                // 여기 없어도 됨 (내 Q&A 답글)\r\n            }; */\r\n        }\r\n        case LOAD_FOLLOWERS_SUCCESS: {\r\n            action.data.forEach((f) => {\r\n              draft.followerList.push(f);\r\n            });\r\n            draft.hasMoreFollower = action.data.length === 3;\r\n            break;\r\n            /* return {\r\n              ...state,\r\n              followerList: state.followerList.concat(action.data), // 기존것을 덮어쓰지 말고, 기존것에 추가 \r\n              hasMoreFollower: action.data.length === 3,            // 방금 로드된 팔로워가 1명 또는 2명이라면, 더보기 버튼을 보여줄 필요가 없다.\r\n                                                                    // 방금 로드된 팔로워가 3명일때만, 더보기 버튼을 보여줄 필요가 있다.\r\n            }; */\r\n        }\r\n        case LOAD_FOLLOWERS_FAILURE: {\r\n            break;\r\n            /* return {\r\n              ...state,\r\n            }; */\r\n        }\r\n        /* 프로필 페이지에서 팔로잉 목록 불러오는 명령 */\r\n        case LOAD_FOLLOWINGS_REQUEST: {\r\n            draft.followingList = !action.offset ? [] : draft.followingList;      // offset이 없는 경우, followerList = []\r\n                                                                                  // 이렇게 해줘야 2번씩 로딩 안됨 \r\n            break;\r\n        }\r\n        case LOAD_FOLLOWINGS_SUCCESS: {\r\n            action.data.forEach((f) => {\r\n              draft.followingList.push(f);\r\n            });\r\n            draft.hasMoreFollowing = action.data.length === 3;\r\n            break;\r\n        }\r\n        case LOAD_FOLLOWINGS_FAILURE: {\r\n            break;\r\n            /* return {\r\n              ...state,\r\n            }; */\r\n        }\r\n        case REMOVE_FOLLOWER_REQUEST: {\r\n            break;\r\n            /* return {\r\n              ...state,\r\n            }; */\r\n        }\r\n        case REMOVE_FOLLOWER_SUCCESS: {\r\n            const userIndex1 = draft.Followers.findIndex(v => v.id === action.data);\r\n            draft.me.Followers.splice(userIndex1, 1);\r\n\r\n            // me.followerList가 아니다!!!!!!!!!!!!!!!!!! \r\n            const userIndex2 = draft.followerList.findIndex(v => v.id === action.data);\r\n            draft.followerList.splice(userIndex2, 1); \r\n            break;\r\n        }\r\n        case REMOVE_FOLLOWER_FAILURE: {\r\n            break;\r\n            /* return {\r\n              ...state,\r\n            }; */\r\n        }\r\n        case EDIT_NICKNAME_REQUEST: {\r\n            draft.isEditingNickname = true;\r\n            draft.editNicknameErrorReason = '';\r\n            break;\r\n            /* return {\r\n              ...state,\r\n              isEditingNickname: true,\r\n              editNicknameErrorReason: '',\r\n            }; */\r\n        }\r\n        case EDIT_NICKNAME_SUCCESS: {\r\n            draft.isEditingNickname = false;\r\n            draft.me.nickname = action.data;\r\n            break;\r\n            /* return {\r\n              ...state,\r\n              isEditingNickname: false,\r\n              me: {\r\n                ...state.me,\r\n                nickname: action.data,\r\n              },\r\n            }; */\r\n        }\r\n        case EDIT_NICKNAME_FAILURE: {\r\n            draft.isEditingNickname = false;\r\n            draft.editNicknameErrorReason = action.error;\r\n            break;\r\n            /* return {\r\n              ...state,\r\n              isEditingNickname: false,\r\n              editNicknameErrorReason: action.error,\r\n            }; */\r\n        }\r\n        case REMOVE_POST_OF_ME: {\r\n            const postIndex = draft.me.Posts.findIndex(v => v.id === action.data);\r\n            draft.me.Posts.splice(postIndex, 1);\r\n            break;\r\n            /* return {\r\n              ...state,\r\n              me: {\r\n                ...state.me,\r\n                Posts: state.me.Posts.filter(v => v.id != action.data),\r\n              }\r\n            }; */\r\n        }\r\n        default: {\r\n            break;\r\n            /* return {\r\n                ...state,\r\n            }; */\r\n        }\r\n      }\r\n    });\r\n};\r\nexport default reducer;\r\n\r\n\r\n/* switch (action.type) {\r\n  case LOG_IN_REQUEST: {\r\n      return {\r\n          ...state,\r\n          isLoggingIn: true,\r\n          isLoggedIn: false,\r\n          logInErrorReason: '',\r\n      };\r\n  }\r\n  case LOG_IN_SUCCESS: {\r\n      return {\r\n          ...state,\r\n          isLoggingIn: false,\r\n          me: action.data,\r\n          isLoading: false,\r\n      };\r\n  }\r\n  case LOG_IN_FAILURE: {\r\n      return {\r\n          ...state,\r\n          isLoggingIn: false,\r\n          logInErrorReason: action.error,\r\n          me: null,\r\n      };\r\n  }\r\n  case LOG_OUT_REQUEST: {\r\n      return {\r\n        ...state,\r\n        isLoggingOut: true,\r\n      };\r\n  }\r\n  case LOG_OUT_SUCCESS: {\r\n      return {\r\n        ...state,\r\n        isLoggingOut: false,\r\n        me: null,\r\n      };\r\n  }\r\n  case SIGN_UP_REQUEST: {\r\n      return {\r\n          ...state,\r\n          isSigningUp: true,\r\n          isSignedUp: false,\r\n          signUpErrorReason: '',\r\n      };\r\n  }\r\n  case SIGN_UP_SUCCESS: {\r\n      alert('회원가입 성공!'); \r\n      return {\r\n          isSigningUp: false,\r\n          isSignedUp: true,\r\n      };\r\n  }\r\n  case SIGN_UP_FAILURE: {\r\n      return {\r\n          isSigningUp: false,\r\n          signUpErrorReason: action.error,\r\n      };\r\n  }\r\n  case LOAD_USER_REQUEST: {\r\n      return {\r\n        ...state,\r\n      };\r\n  }\r\n  case LOAD_USER_SUCCESS: {\r\n      if (action.isThisMe) {    // (sagas/user.js)의 function*loadUser() 에서 put으로 넘겨준것이 바로, action.me\r\n          return {\r\n              ...state,\r\n              me: action.data,\r\n            };\r\n      } else {\r\n          return {\r\n              ...state,\r\n              userInfo: action.data,\r\n            };\r\n      }\r\n      \r\n  }\r\n  case LOAD_USER_FAILURE: {\r\n      return {\r\n        ...state,\r\n      };\r\n  }\r\n  case FOLLOW_USER_REQUEST: {\r\n      return {\r\n        ...state,\r\n      };\r\n  }\r\n  case FOLLOW_USER_SUCCESS: {\r\n      return {\r\n        ...state,\r\n        me: {\r\n          ...state.me,\r\n          Followings: [{ id: action.data }, ...state.me.Followings],\r\n        },\r\n      };\r\n  }\r\n  case FOLLOW_USER_FAILURE: {\r\n      return {\r\n        ...state,\r\n      };\r\n  }\r\n  case UNFOLLOW_USER_REQUEST: {\r\n      return {\r\n        ...state,\r\n      };\r\n  }\r\n  case UNFOLLOW_USER_SUCCESS: {\r\n      return {\r\n        ...state,\r\n        me: {\r\n          ...state.me,\r\n          Followings: state.me.Followings.filter(v => v.id !== action.data),\r\n        },\r\n        followingList: state.followingList.filter(v => v.id !== action.data),\r\n      };\r\n  }\r\n  case UNFOLLOW_USER_FAILURE: {\r\n      return {\r\n        ...state,\r\n      };\r\n  }\r\n  case ADD_POST_TO_ME: {\r\n      return {\r\n        ...state,\r\n        me: {\r\n          ...state.me,\r\n          Posts: [{ id: action.data }, ...state.me.Posts],    // 작성한 게시글을, user정보안의 게시글 정보에 넣어주기 \r\n        },\r\n      };\r\n  }\r\n  case LOAD_FOLLOWERS_REQUEST: {\r\n      return {\r\n        ...state,\r\n        //hasMoreFollower: action.offset ? state.hasMoreFollower : true,  // 처음화면 일때는, offset은 0 이므로, false취급을 받아서 true로 넘어간다.(=더보기 버튼을 보여준다.)                                                         \r\n                                                                          // (처음화면일때 offset이 0인것은, router.get('/:id/followers'... 에서 확인가능)      \r\n                                                                          // 여기 없어도 됨 (내 Q&A 답글)\r\n      };\r\n  }\r\n  case LOAD_FOLLOWERS_SUCCESS: {\r\n      return {\r\n        ...state,\r\n        followerList: state.followerList.concat(action.data), // 기존것을 덮어쓰지 말고, 기존것에 추가 \r\n        hasMoreFollower: action.data.length === 3,            // 방금 로드된 팔로워가 1명 또는 2명이라면, 더보기 버튼을 보여줄 필요가 없다.\r\n                                                              // 방금 로드된 팔로워가 3명일때만, 더보기 버튼을 보여줄 필요가 있다.\r\n      };\r\n  }\r\n  case LOAD_FOLLOWERS_FAILURE: {\r\n      return {\r\n        ...state,\r\n      };\r\n  }\r\n  case LOAD_FOLLOWINGS_REQUEST: {\r\n      return {\r\n        ...state,\r\n        //hasMoreFollowing: action.offset ? state.hasMoreFollowing : true,  // 처음화면 일때는, offset은 0 이므로, false취급을 받아서 true로 넘어간다.(=더보기 버튼을 보여준다.)                                                         \r\n                                                                            // (처음화면일때 offset이 0인것은, router.get('/:id/followings'... 에서 확인가능) \r\n                                                                            // 여기 없어도 됨 (내 Q&A 답글)      \r\n      };\r\n  }\r\n  case LOAD_FOLLOWINGS_SUCCESS: {\r\n      return {\r\n        ...state,\r\n        followingList: state.followingList.concat(action.data),   // 기존것을 덮어쓰지 말고, 기존것에 추가\r\n        hasMoreFollowing: action.data.length === 3,               // 방금 로드된 팔로워가 1명 또는 2명이라면, 더보기 버튼을 보여줄 필요가 없다.\r\n                                                                  // 방금 로드된 팔로워가 3명일때만(=limit은 3이었음), 더보기 버튼을 보여줄 필요가 있다. \r\n      };\r\n  }\r\n  case LOAD_FOLLOWINGS_FAILURE: {\r\n      return {\r\n        ...state,\r\n      };\r\n  }\r\n  case REMOVE_FOLLOWER_REQUEST: {\r\n      return {\r\n        ...state,\r\n      };\r\n  }\r\n  case REMOVE_FOLLOWER_SUCCESS: {\r\n      return {\r\n        ...state,\r\n        me: {\r\n          ...state.me,\r\n          Followers: state.me.Followers.filter(v => v.id !== action.data),\r\n        },\r\n        followerList: state.followerList.filter(v => v.id !== action.data),\r\n      };\r\n  }\r\n  case REMOVE_FOLLOWER_FAILURE: {\r\n      return {\r\n        ...state,\r\n      };\r\n  }\r\n  case EDIT_NICKNAME_REQUEST: {\r\n    return {\r\n      ...state,\r\n      isEditingNickname: true,\r\n      editNicknameErrorReason: '',\r\n    };\r\n  }\r\n  case EDIT_NICKNAME_SUCCESS: {\r\n    return {\r\n      ...state,\r\n      isEditingNickname: false,\r\n      me: {\r\n        ...state.me,\r\n        nickname: action.data,\r\n      },\r\n    };\r\n  }\r\n  case EDIT_NICKNAME_FAILURE: {\r\n    return {\r\n      ...state,\r\n      isEditingNickname: false,\r\n      editNicknameErrorReason: action.error,\r\n    };\r\n  }\r\n  case REMOVE_POST_OF_ME: {\r\n    //const index = draft.me.Posts.findIndex(v => v.id === action.data);\r\n    //draft.me.Posts.splice(index, 1);\r\n    //break;\r\n    return {\r\n      ...state,\r\n      me: {\r\n        ...state.me,\r\n        Posts: state.me.Posts.filter(v => v.id != action.data),\r\n      }\r\n    };\r\n  }\r\n  default: {\r\n      return {\r\n          ...state,\r\n      };\r\n  }\r\n} */","var _Object$create = require(\"../core-js/object/create\");\n\nvar setPrototypeOf = require(\"./setPrototypeOf\");\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = _Object$create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) setPrototypeOf(subClass, superClass);\n}\n\nmodule.exports = _inherits;","module.exports = require(\"react-slick\");","import _Promise from \"../../core-js/promise\";\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    _Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new _Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}","module.exports = require(\"core-js/library/fn/array/is-array\");","module.exports = require(\"core-js/library/fn/object/create\");","module.exports = require(\"immer\");","module.exports = require(\"core-js/library/fn/object/set-prototype-of\");","module.exports = require(\"core-js/library/fn/object/define-property\");","import React, { useState, useCallback } from 'react';\r\nimport { Button, Input, Form } from 'antd';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nimport { EDIT_NICKNAME_REQUEST } from '../reducers/user';\r\n\r\nconst NicknameEditForm = () => {\r\n    const [editedName, setEditedName] = useState('');\r\n\r\n    const dispatch = useDispatch();\r\n    const { me, isEditingNickname } = useSelector(state => state.user);\r\n\r\n    const onChangeNickname = useCallback((e) => {\r\n        setEditedName(e.target.value);\r\n    }, []);\r\n\r\n    const onEditNickname = useCallback((e) => {\r\n        e.preventDefault();\r\n        dispatch({\r\n            type: EDIT_NICKNAME_REQUEST,\r\n            data: editedName,\r\n        });\r\n    }, [editedName]);\r\n\r\n    return (\r\n        <Form style={{ marginBottom: '20px', border: '1px solid #d9d9d9', padding: '20px' }} onSubmit={onEditNickname}>\r\n            <Input addonBefore=\"닉네임\" value={editedName || (me && me.nickname)} onChange={onChangeNickname}/>\r\n            <Button type=\"primary\" htmlType=\"submit\" loading={isEditingNickname}>수정</Button>\r\n        </Form>\r\n    );\r\n};\r\n\r\nexport default NicknameEditForm;","import React, { memo } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Button, Card, List } from 'antd';\r\nimport { StopOutlined } from '@ant-design/icons';\r\n\r\nconst FollowList = memo( ({ header, hasMore, onClickMore, data, onClickStop }) => {\r\n    return (\r\n        <List \r\n            style={{ marginBottom: '20px' }}\r\n            grid={{ gutter: 4, xs: 2, md: 3 }}\r\n            size=\"small\"\r\n            header={<div>{header}</div>}\r\n            loadMore={hasMore && <Button style={{ width: '100%' }} onClick={onClickMore}>더 보기</Button>}\r\n            bordered\r\n            dataSource={data}\r\n            renderItem={item => (\r\n                <List.Item style={{ maringTop: '20px' }}>\r\n                    <Card actions={[<StopOutlined key=\"stop\" onClick={onClickStop(item.id)}/>]}>\r\n                        <Card.Meta description={item.nickname} />\r\n                    </Card>\r\n                </List.Item>\r\n            )}\r\n        />\r\n    );\r\n});\r\n\r\nFollowList.propTypes = {\r\n    header: PropTypes.string.isRequired,\r\n    hasMore: PropTypes.bool.isRequired,\r\n    onClickMore: PropTypes.func.isRequired,\r\n    data: PropTypes.array.isRequired,\r\n    onClickStop: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default FollowList;","import React, { useCallback } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nimport {\r\n    LOAD_FOLLOWINGS_REQUEST,\r\n    LOAD_FOLLOWERS_REQUEST,\r\n    REMOVE_FOLLOWER_REQUEST,\r\n    UNFOLLOW_USER_REQUEST,\r\n} from '../reducers/user';\r\nimport { LOAD_USER_POSTS_REQUEST } from '../reducers/post';\r\nimport PostCard from '../containers/PostCard';\r\nimport NicknameEditForm from '../containers/NicknameEditForm';\r\nimport FollowList from '../components/FollowList';\r\n\r\nconst Profile = () => {\r\n    const dispatch = useDispatch();\r\n    const { followingList, followerList, hasMoreFollower, hasMoreFollowing } = useSelector(state => state.user);\r\n    const { mainPosts } = useSelector(state => state.post);\r\n    \r\n    /* useEffect(() => {\r\n        if (me) {\r\n            dispatch({\r\n                type: LOAD_FOLLOWERS_REQUEST,\r\n                data: me.id,\r\n            });\r\n            dispatch({\r\n                type: LOAD_FOLLOWINGS_REQUEST,\r\n                data: me.id,\r\n            });\r\n            dispatch({\r\n                type: LOAD_USER_POSTS_REQUEST,      // 내가 쓴 게시글들 가져오기 요청 \r\n                data: me.id,\r\n            });\r\n        }\r\n    }, [me && me.id]); */\r\n\r\n    const onUnfollow = useCallback(userId => () => {\r\n        dispatch({\r\n            type: UNFOLLOW_USER_REQUEST,\r\n            data: userId,\r\n        });\r\n    }, []);\r\n\r\n    const onRemoveFollower = useCallback(userId => () => {\r\n        dispatch({\r\n            type: REMOVE_FOLLOWER_REQUEST,\r\n            data: userId,\r\n        });\r\n    }, []);\r\n\r\n    /* [팔로윙] 더보기 버튼 눌렀을때 */\r\n    const loadMoreFollowings = useCallback(() => {\r\n        dispatch({\r\n            type: LOAD_FOLLOWINGS_REQUEST,\r\n            offset: followingList.length,\r\n        })\r\n    }, [followingList.length]);\r\n\r\n    /* [팔로워] 더보기 버튼 눌렀을때 */\r\n    const loadMoreFollowers = useCallback(() => {\r\n        dispatch({\r\n            type: LOAD_FOLLOWERS_REQUEST,\r\n            offset: followerList.length,\r\n        })\r\n    }, [followerList.length]);\r\n\r\n    return (\r\n        <div>\r\n            {/* 닉네임 수정폼 */}\r\n            <NicknameEditForm />\r\n\r\n            {/* 팔로잉 목록 */}\r\n            <FollowList \r\n                header=\"팔로잉 목록\"\r\n                hasMore={hasMoreFollowing}\r\n                onClickMore={loadMoreFollowings}\r\n                data={followingList}\r\n                onClickStop={onUnfollow}\r\n            />\r\n\r\n            {/* 팔로워 목록 */}\r\n            <FollowList \r\n                header=\"팔로워 목록\"\r\n                hasMore={hasMoreFollower}\r\n                onClickMore={loadMoreFollowers}\r\n                data={followerList}\r\n                onClickStop={onRemoveFollower}\r\n            />\r\n\r\n            {/* '내가 쓴' 게시글 목록 */}\r\n            <div>\r\n                {mainPosts.map(c => (\r\n                    <PostCard key={+c.createdAt} post={c} />\r\n                ))}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nProfile.getInitialProps = async (context) => {\r\n    const state = context.store.getState();\r\n    /* 이 직전에 (_app.js)LOAD_USER_REQUEST */\r\n    context.store.dispatch({\r\n        type: LOAD_FOLLOWERS_REQUEST,              // 첫 화면일때, 팔로워 로드 request\r\n        data: state.user.me && state.user.me.id,\r\n    });\r\n    context.store.dispatch({\r\n        type: LOAD_FOLLOWINGS_REQUEST,             // 첫 화면일때, 팔로잉 로드 request\r\n        data: state.user.me && state.user.me.id,\r\n    });\r\n    context.store.dispatch({\r\n        type: LOAD_USER_POSTS_REQUEST,             // 첫 화면일때, 게시글 로드 request\r\n        data: state.user.me && state.user.me.id,\r\n    });\r\n\r\n    /* 여기서 LOAD_USER_SUCCESS 되서, me가 생김 */\r\n};\r\n\r\nexport default Profile;","var _Object$defineProperty = require(\"../core-js/object/define-property\");\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n\n    _Object$defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nmodule.exports = _createClass;","module.exports = require(\"core-js/library/fn/object/set-prototype-of\");","module.exports = require(\"core-js/library/fn/symbol/iterator\");","module.exports = require(\"core-js/library/fn/get-iterator\");","module.exports = require('./dist/client/link')\n","module.exports = require(\"core-js/library/fn/symbol\");","var _typeof = require(\"../helpers/typeof\");\n\nvar assertThisInitialized = require(\"./assertThisInitialized\");\n\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n\n  return assertThisInitialized(self);\n}\n\nmodule.exports = _possibleConstructorReturn;","module.exports = require(\"core-js/library/fn/promise\");","module.exports = require(\"url\");","module.exports = require(\"react\");","\"use strict\";\n/* global __NEXT_DATA__ */\n\nvar _interopRequireDefault = require(\"@babel/runtime-corejs2/helpers/interopRequireDefault\");\n\nvar _stringify = _interopRequireDefault(require(\"@babel/runtime-corejs2/core-js/json/stringify\"));\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime-corejs2/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime-corejs2/helpers/createClass\"));\n\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime-corejs2/helpers/possibleConstructorReturn\"));\n\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime-corejs2/helpers/getPrototypeOf\"));\n\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime-corejs2/helpers/inherits\"));\n\nvar __importStar = void 0 && (void 0).__importStar || function (mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) {\n    if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\n  }\n  result[\"default\"] = mod;\n  return result;\n};\n\nvar __importDefault = void 0 && (void 0).__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar url_1 = require(\"url\");\n\nvar react_1 = __importStar(require(\"react\"));\n\nvar prop_types_1 = __importDefault(require(\"prop-types\"));\n\nvar router_1 = __importStar(require(\"next/router\"));\n\nvar utils_1 = require(\"next-server/dist/lib/utils\");\n\nfunction isLocal(href) {\n  var url = url_1.parse(href, false, true);\n  var origin = url_1.parse(utils_1.getLocationOrigin(), false, true);\n  return !url.host || url.protocol === origin.protocol && url.host === origin.host;\n}\n\nfunction memoizedFormatUrl(formatFunc) {\n  var lastHref = null;\n  var lastAs = null;\n  var lastResult = null;\n  return function (href, as) {\n    if (href === lastHref && as === lastAs) {\n      return lastResult;\n    }\n\n    var result = formatFunc(href, as);\n    lastHref = href;\n    lastAs = as;\n    lastResult = result;\n    return result;\n  };\n}\n\nfunction formatUrl(url) {\n  return url && typeof url === 'object' ? utils_1.formatWithValidation(url) : url;\n}\n\nvar Link =\n/*#__PURE__*/\nfunction (_react_1$Component) {\n  (0, _inherits2.default)(Link, _react_1$Component);\n\n  function Link() {\n    var _this;\n\n    (0, _classCallCheck2.default)(this, Link);\n    _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(Link).apply(this, arguments)); // The function is memoized so that no extra lifecycles are needed\n    // as per https://reactjs.org/blog/2018/06/07/you-probably-dont-need-derived-state.html\n\n    _this.formatUrls = memoizedFormatUrl(function (href, asHref) {\n      return {\n        href: formatUrl(href),\n        as: formatUrl(asHref, true)\n      };\n    });\n\n    _this.linkClicked = function (e) {\n      var _e$currentTarget = e.currentTarget,\n          nodeName = _e$currentTarget.nodeName,\n          target = _e$currentTarget.target;\n\n      if (nodeName === 'A' && (target && target !== '_self' || e.metaKey || e.ctrlKey || e.shiftKey || e.nativeEvent && e.nativeEvent.which === 2)) {\n        // ignore click for new tab / new window behavior\n        return;\n      }\n\n      var _this$formatUrls = _this.formatUrls(_this.props.href, _this.props.as),\n          href = _this$formatUrls.href,\n          as = _this$formatUrls.as;\n\n      if (!isLocal(href)) {\n        // ignore click if it's outside our scope\n        return;\n      }\n\n      var pathname = window.location.pathname;\n      href = url_1.resolve(pathname, href);\n      as = as ? url_1.resolve(pathname, as) : href;\n      e.preventDefault(); //  avoid scroll for urls with anchor refs\n\n      var scroll = _this.props.scroll;\n\n      if (scroll == null) {\n        scroll = as.indexOf('#') < 0;\n      } // replace state instead of push if prop is present\n\n\n      router_1.default[_this.props.replace ? 'replace' : 'push'](href, as, {\n        shallow: _this.props.shallow\n      }).then(function (success) {\n        if (!success) return;\n\n        if (scroll) {\n          window.scrollTo(0, 0);\n          document.body.focus();\n        }\n      }).catch(function (err) {\n        if (_this.props.onError) _this.props.onError(err);\n      });\n    };\n\n    return _this;\n  }\n\n  (0, _createClass2.default)(Link, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.prefetch();\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps) {\n      if ((0, _stringify.default)(this.props.href) !== (0, _stringify.default)(prevProps.href)) {\n        this.prefetch();\n      }\n    }\n  }, {\n    key: \"prefetch\",\n    value: function prefetch() {\n      if (!this.props.prefetch) return;\n      if (typeof window === 'undefined') return; // Prefetch the JSON page if asked (only in the client)\n\n      var pathname = window.location.pathname;\n\n      var _this$formatUrls2 = this.formatUrls(this.props.href, this.props.as),\n          parsedHref = _this$formatUrls2.href;\n\n      var href = url_1.resolve(pathname, parsedHref);\n      router_1.default.prefetch(href);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var children = this.props.children;\n\n      var _this$formatUrls3 = this.formatUrls(this.props.href, this.props.as),\n          href = _this$formatUrls3.href,\n          as = _this$formatUrls3.as; // Deprecated. Warning shown by propType check. If the childen provided is a string (<Link>example</Link>) we wrap it in an <a> tag\n\n\n      if (typeof children === 'string') {\n        children = react_1.default.createElement(\"a\", null, children);\n      } // This will return the first child, if multiple are provided it will throw an error\n\n\n      var child = react_1.Children.only(children);\n      var props = {\n        onClick: function onClick(e) {\n          if (child.props && typeof child.props.onClick === 'function') {\n            child.props.onClick(e);\n          }\n\n          if (!e.defaultPrevented) {\n            _this2.linkClicked(e);\n          }\n        }\n      }; // If child is an <a> tag and doesn't have a href attribute, or if the 'passHref' property is\n      // defined, we specify the current 'href', so that repetition is not needed by the user\n\n      if (this.props.passHref || child.type === 'a' && !('href' in child.props)) {\n        props.href = as || href;\n      } // Add the ending slash to the paths. So, we can serve the\n      // \"<page>/index.html\" directly.\n\n\n      if (process.env.__NEXT_EXPORT_TRAILING_SLASH) {\n        if (props.href && typeof __NEXT_DATA__ !== 'undefined' && __NEXT_DATA__.nextExport) {\n          props.href = router_1.Router._rewriteUrlForNextExport(props.href);\n        }\n      }\n\n      return react_1.default.cloneElement(child, props);\n    }\n  }]);\n  return Link;\n}(react_1.Component);\n\nif (process.env.NODE_ENV === 'development') {\n  var warn = utils_1.execOnce(console.error); // This module gets removed by webpack.IgnorePlugin\n\n  var exact = require('prop-types-exact');\n\n  Link.propTypes = exact({\n    href: prop_types_1.default.oneOfType([prop_types_1.default.string, prop_types_1.default.object]).isRequired,\n    as: prop_types_1.default.oneOfType([prop_types_1.default.string, prop_types_1.default.object]),\n    prefetch: prop_types_1.default.bool,\n    replace: prop_types_1.default.bool,\n    shallow: prop_types_1.default.bool,\n    passHref: prop_types_1.default.bool,\n    scroll: prop_types_1.default.bool,\n    children: prop_types_1.default.oneOfType([prop_types_1.default.element, function (props, propName) {\n      var value = props[propName];\n\n      if (typeof value === 'string') {\n        warn(\"Warning: You're using a string directly inside <Link>. This usage has been deprecated. Please add an <a> tag as child of <Link>\");\n      }\n\n      return null;\n    }]).isRequired\n  });\n}\n\nexports.default = Link;","module.exports = require(\"regenerator-runtime\");","import _Array$isArray from \"../../core-js/array/is-array\";\nexport default function _arrayWithHoles(arr) {\n  if (_Array$isArray(arr)) return arr;\n}","import _getIterator from \"../../core-js/get-iterator\";\nexport default function _iterableToArrayLimit(arr, i) {\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = _getIterator(arr), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");\n}","import arrayWithHoles from \"./arrayWithHoles\";\nimport iterableToArrayLimit from \"./iterableToArrayLimit\";\nimport nonIterableRest from \"./nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || nonIterableRest();\n}","module.exports = require(\"core-js/library/fn/promise\");","module.exports = require(\"core-js/library/fn/json/stringify\");","module.exports = require(\"core-js/library/fn/symbol/iterator\");","module.exports = require(\"react-redux\");","module.exports = require(\"core-js/library/fn/object/define-property\");","var _Symbol$iterator = require(\"../core-js/symbol/iterator\");\n\nvar _Symbol = require(\"../core-js/symbol\");\n\nfunction _typeof2(obj) { if (typeof _Symbol === \"function\" && typeof _Symbol$iterator === \"symbol\") { _typeof2 = function _typeof2(obj) { return typeof obj; }; } else { _typeof2 = function _typeof2(obj) { return obj && typeof _Symbol === \"function\" && obj.constructor === _Symbol && obj !== _Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof2(obj); }\n\nfunction _typeof(obj) {\n  if (typeof _Symbol === \"function\" && _typeof2(_Symbol$iterator) === \"symbol\") {\n    module.exports = _typeof = function _typeof(obj) {\n      return _typeof2(obj);\n    };\n  } else {\n    module.exports = _typeof = function _typeof(obj) {\n      return obj && typeof _Symbol === \"function\" && obj.constructor === _Symbol && obj !== _Symbol.prototype ? \"symbol\" : _typeof2(obj);\n    };\n  }\n\n  return _typeof(obj);\n}\n\nmodule.exports = _typeof;","module.exports = require(\"regenerator-runtime\");\n","module.exports = require(\"core-js/library/fn/object/define-properties\");","module.exports = require(\"@ant-design/icons\");","module.exports = require(\"core-js/library/fn/object/create\");","import produce from 'immer';\r\n\r\n/* redux state */\r\nexport const initialState = {\r\n    mainPosts: [],\r\n    imagePaths: [],             // 미리보기 이미지 경로 \r\n    \r\n    isAddingPost: false,        // 포스트 업로드 중\r\n    addPostErrorReason: '',     // 포스트 업로드 실패 사유 \r\n    postAdded: false,           // 포스트 업로드 성공 여부 (쓰는 이유: 글 작성후, 이게 true가 되면 TextArea 비워주기 위해서)\r\n    \r\n    isAddingComment: false,     // 댓글 업로드 중 \r\n    addCommentErrorReason: '',  // 댓글 업로드 에러 사유 \r\n    commentAdded: false,        // 댓글이 추가되었는지 (쓰는 이유: 댓글 작성후, 이게 true가 되면 TextArea 비워주기 위해서)\r\n    \r\n    addLikeErrorReason: '',\r\n\r\n    hasMorePost: false,         // 스크롤을 더 내려야 할지 \r\n    singlePost: null,\r\n};\r\n\r\n/* Action의 이름 */\r\nexport const LOAD_MAIN_POSTS_REQUEST = 'LOAD_MAIN_POSTS_REQUEST';       // 메인 포스트 로딩 액션\r\nexport const LOAD_MAIN_POSTS_SUCCESS = 'LOAD_MAIN_POSTS_SUCCESS';\r\nexport const LOAD_MAIN_POSTS_FAILURE = 'LOAD_MAIN_POSTS_FAILURE';\r\n\r\nexport const LOAD_HASHTAG_POSTS_REQUEST = 'LOAD_HASHTAG_POSTS_REQUEST'; // 해시태그로 검색했을 때 결과 로딩 액션\r\nexport const LOAD_HASHTAG_POSTS_SUCCESS = 'LOAD_HASHTAG_POSTS_SUCCESS';\r\nexport const LOAD_HASHTAG_POSTS_FAILURE = 'LOAD_HASHTAG_POSTS_FAILURE';\r\n\r\nexport const LOAD_USER_POSTS_REQUEST = 'LOAD_USER_POSTS_REQUEST';       // 사용자가 어떤 게시글을 썼는지 로딩 액션\r\nexport const LOAD_USER_POSTS_SUCCESS = 'LOAD_USER_POSTS_SUCCESS';\r\nexport const LOAD_USER_POSTS_FAILURE = 'LOAD_USER_POSTS_FAILURE';\r\n\r\nexport const UPLOAD_IMAGES_REQUEST = 'UPLOAD_IMAGES_REQUEST';           // 이미지 업로드 액션 \r\nexport const UPLOAD_IMAGES_SUCCESS = 'UPLOAD_IMAGES_SUCCESS';\r\nexport const UPLOAD_IMAGES_FAILURE = 'UPLOAD_IMAGES_FAILURE';\r\n\r\nexport const ADD_POST_REQUEST = 'ADD_POST_REQUEST';                     // 게시글 업로드 액션\r\nexport const ADD_POST_SUCCESS = 'ADD_POST_SUCCESS';\r\nexport const ADD_POST_FAILURE = 'ADD_POST_FAILURE';\r\n\r\nexport const LIKE_POST_REQUEST = 'LIKE_POST_REQUEST';                   // 게시글 좋아요 \r\nexport const LIKE_POST_SUCCESS = 'LIKE_POST_SUCCESS';\r\nexport const LIKE_POST_FAILURE = 'LIKE_POST_FAILURE';\r\n\r\nexport const UNLIKE_POST_REQUEST = 'UNLIKE_POST_REQUEST';               // 게시글 좋아요 취소 \r\nexport const UNLIKE_POST_SUCCESS = 'UNLIKE_POST_SUCCESS';\r\nexport const UNLIKE_POST_FAILURE = 'UNLIKE_POST_FAILURE';\r\n\r\nexport const ADD_COMMENT_REQUEST = 'ADD_COMMENT_REQUEST';\r\nexport const ADD_COMMENT_SUCCESS = 'ADD_COMMENT_SUCCESS';\r\nexport const ADD_COMMENT_FAILURE = 'ADD_COMMENT_FAILURE';\r\n\r\nexport const LOAD_COMMENTS_REQUEST = 'LOAD_COMMENTS_REQUEST';           // 게시글 댓글 불러오기 \r\nexport const LOAD_COMMENTS_SUCCESS = 'LOAD_COMMENTS_SUCCESS';\r\nexport const LOAD_COMMENTS_FAILURE = 'LOAD_COMMENTS_FAILURE';\r\n\r\nexport const RETWEET_REQUEST = 'RETWEET_REQUEST';                       // 리트윗\r\nexport const RETWEET_SUCCESS = 'RETWEET_SUCCESS';\r\nexport const RETWEET_FAILURE = 'RETWEET_FAILURE';\r\n\r\nexport const REMOVE_POST_REQUEST = 'REMOVE_POST_REQUEST';               // 포스트 제거 \r\nexport const REMOVE_POST_SUCCESS = 'REMOVE_POST_SUCCESS';\r\nexport const REMOVE_POST_FAILURE = 'REMOVE_POST_FAILURE';\r\n\r\nexport const REMOVE_IMAGE = 'REMOVE_IMAGE';\r\n\r\nexport const LOAD_POST_REQUEST = 'LOAD_POST_REQUEST';           // 게시글 한개 불러오기 \r\nexport const LOAD_POST_SUCCESS = 'LOAD_POST_SUCCESS';\r\nexport const LOAD_POST_FAILURE = 'LOAD_POST_FAILURE';\r\n\r\n/* 실제 Action */\r\n// ...\r\n\r\n/* Reducer */\r\nconst reducer = (state = initialState, action) => {\r\n    /* immer */\r\n    return produce(state, (draft) => {      // immer에게 불변성을 맡기고, 우리는 draft만 자유롭게 변경해주면 된다.\r\n      switch (action.type) {\r\n        case UPLOAD_IMAGES_REQUEST: {\r\n            break;\r\n            /* return {\r\n              ...state,\r\n            }; */\r\n        }\r\n        case UPLOAD_IMAGES_SUCCESS: {\r\n            action.data.forEach((p) => {    // 이처럼, 더이상 불변성을 유지하지 않아도 된다. (immer에서 draft보고 알아서 불변성 감지해준다.)\r\n              draft.imagePaths.push(p);\r\n            }); \r\n            break; \r\n            /* return {\r\n              ...state,\r\n              imagePaths: [...state.imagePaths, ...action.data],    // 기존 imagePaths배열에 action.data 추가 \r\n            }; */\r\n        }\r\n        case UPLOAD_IMAGES_FAILURE: {\r\n            break;\r\n            /* return {\r\n              ...state,\r\n            }; */\r\n        }\r\n        case REMOVE_IMAGE: {\r\n            const index = draft.imagePaths.findIndex((v, i) => i === action.index);\r\n            draft.imagePaths.splice(index, 1);\r\n            break;\r\n            /* return {\r\n                ...state,\r\n                imagePaths: state.imagePaths.filter((v, i) => i !== action.index),\r\n            }; */\r\n        }\r\n        case LOAD_MAIN_POSTS_REQUEST: \r\n        case LOAD_HASHTAG_POSTS_REQUEST:\r\n        case LOAD_USER_POSTS_REQUEST: {\r\n            draft.mainPosts = !action.lastId ? [] : draft.mainPosts;      // lastId가 없으면, mainPosts = []\r\n            draft.hasMorePost = action.lastId ? draft.hasMorePost : true;\r\n            break;\r\n            /* return {\r\n              ...state,\r\n              mainPosts: action.lastId === 0 ? [] : state.mainPosts,  // lastId가 0 이면(=처음 화면이면): REQUEST시, mainPosts = []  -> 다른데 갔다가 다시 메인화면 올 수 도 있기 때문  \r\n                                                                      // lastId가 0 이 아니라면(=더보기 클릭시): REQUEST시, 기존 mainPosts가져오기 \r\n              hasMorePost: action.lastId ? state.hasMorePost : true,  // 맨 첫 페이지에 게시글 로딩할때, hasMorePost가 true가 되야함. (pages/index.js hasMorePost분기 부분 참조)\r\n            }; */\r\n        }\r\n        case LOAD_MAIN_POSTS_SUCCESS: \r\n        case LOAD_HASHTAG_POSTS_SUCCESS:\r\n        case LOAD_USER_POSTS_SUCCESS: {\r\n            action.data.forEach((p) => {\r\n              draft.mainPosts.push(p);\r\n            });\r\n            break;\r\n            /* return {\r\n              ...state,\r\n              mainPosts: state.mainPosts.concat(action.data),   // 덮어쓰는게 아니라, 이전 게시글에 추가하기\r\n              hasMorePost: action.data.length === 10,           // reducers/user.js에서 hasMoreFollower했던거랑 동일한 원리 !!\r\n            }; */\r\n        }\r\n        case LOAD_MAIN_POSTS_FAILURE: \r\n        case LOAD_HASHTAG_POSTS_FAILURE:\r\n        case LOAD_USER_POSTS_FAILURE: {\r\n            break;\r\n            /* return {\r\n              ...state,\r\n            }; */\r\n        }\r\n        case ADD_POST_REQUEST: {\r\n            draft.isAddingPost = true;\r\n            draft.addPostErrorReason = '';\r\n            draft.postAdded = false;\r\n            break;\r\n            /* return {\r\n                ...state,\r\n                isAddingPost: true,\r\n                addPostErrorReason: '',\r\n                postAdded: false,\r\n            }; */\r\n        }\r\n        case ADD_POST_SUCCESS: {\r\n            draft.isAddingPost = false;\r\n            draft.mainPosts.unshift(action.data);   // 배열 맨 앞에 추가할때는 unshift()\r\n            draft.postAdded = true;\r\n            draft.imagePaths = [];\r\n            break;\r\n            /* return {\r\n                ...state,\r\n                isAddingPost: false,\r\n                mainPosts: [action.data, ...state.mainPosts], // 포스트들 앞에 들어가게 된다.\r\n                postAdded: true,\r\n                imagePaths: [],                               // success하는 순간, imagePaths 비워주기 \r\n            }; */\r\n        }\r\n        case ADD_POST_FAILURE: {\r\n            draft.isAddingPost = false;\r\n            draft.addPostErrorReason = action.error;\r\n            break;\r\n            /* return {\r\n                ...state,\r\n                isAddingPost: false,\r\n                addPostErrorReason: action.error,\r\n            }; */\r\n        }\r\n        case ADD_COMMENT_REQUEST: {\r\n            draft.isAddingComment = true;\r\n            draft.addCommentErrorReason = '';\r\n            draft.commentAdded = false;\r\n            break;\r\n            /* return {\r\n                ...state,\r\n                isAddingComment: true,\r\n                addCommentErrorReason: '',\r\n                commentAdded: false,\r\n            }; */\r\n            \r\n        }\r\n        case ADD_COMMENT_SUCCESS: {\r\n            const postIndex = draft.mainPosts.findIndex(v => v.id === action.data.postId);\r\n            draft.mainPosts[postIndex].Comments.push(action.data.comment);\r\n            draft.isAddingComment = false;\r\n            draft.commentAdded = true;\r\n            break;\r\n            /* const postIndex = state.mainPosts.findIndex(v => v.id === action.data.postId); // 먼저, 여러개의 게시글 중에 해당 게시글의 index를 도출한 후,\r\n            const post = state.mainPosts[postIndex];                  // 해당 게시글을 찾는다\r\n            const Comments = [...post.Comments, action.data.comment]; // 불변성을 확보하면서, 뒤에다가 새 댓글 달아준다 \r\n            const mainPosts = [...state.mainPosts];                   // mainPosts도 불변성을 확보해 줘야한다.\r\n            mainPosts[postIndex] = { ...post, Comments };\r\n            return {\r\n                ...state,\r\n                isAddingComment: false,\r\n                mainPosts, // 여러 게시글 중에 해당하는 게시글에 해당 댓글 달아주기 (불변성 때문에 복잡한 작업)\r\n                commentAdded: true,\r\n            }; */\r\n        }\r\n        case ADD_COMMENT_FAILURE: {\r\n            draft.isAddingComment = false;\r\n            draft.addCommentErrorReason = action.error;\r\n            break;\r\n            /* return {\r\n                ...state,\r\n                isAddingComment: false,\r\n                addCommentErrorReason: action.error,\r\n            }; */\r\n        }\r\n        case LOAD_COMMENTS_SUCCESS: {\r\n            const postIndex = draft.mainPosts.findIndex(v => v.id === action.data.postId);\r\n            draft.mainPosts[postIndex].Comments = action.data.comments;\r\n            break;\r\n            /* const postIndex = state.mainPosts.findIndex(v => v.id === action.data.postId);\r\n            const post = state.mainPosts[postIndex];\r\n            const Comments = action.data.comments;\r\n            const mainPosts = [...state.mainPosts];         // mainPosts도 불변성을 확보해 줘야한다.\r\n            mainPosts[postIndex] = { ...post, Comments };\r\n            return {\r\n              ...state,\r\n              mainPosts,\r\n            }; */\r\n        }\r\n        case LIKE_POST_REQUEST: {\r\n            break;\r\n            /* return {\r\n              ...state,\r\n            }; */\r\n        }\r\n        case LIKE_POST_SUCCESS: {\r\n            const postIndex = draft.mainPosts.findIndex(v => v.id === action.data.postId);\r\n            draft.mainPosts[postIndex].Likers.unshift({ id: action.data.userId });            // 배열 맨 앞에 추가할때는 unshift()\r\n            break;\r\n            /* const postIndex = state.mainPosts.findIndex(v => v.id === action.data.postId);\r\n            const post = state.mainPosts[postIndex];\r\n            const Likers = [{ id: action.data.userId }, ...post.Likers];    // 좋아요 누른 사람들 목록에, 본인 추가 \r\n            const mainPosts = [...state.mainPosts];\r\n            mainPosts[postIndex] = { ...post, Likers };\r\n            return {\r\n              ...state,\r\n              mainPosts,\r\n            }; */\r\n        }\r\n        case LIKE_POST_FAILURE: {\r\n            alert('좋아요 실패!');\r\n            draft.addLikeErrorReason = action.error;\r\n            break;\r\n            /* return {\r\n              ...state,\r\n              addLikeErrorReason: action.error,\r\n            }; */\r\n        }\r\n        case UNLIKE_POST_REQUEST: {\r\n            break;\r\n            /* return {\r\n              ...state,\r\n            }; */\r\n        }\r\n        case UNLIKE_POST_SUCCESS: {\r\n            const postIndex = draft.mainPosts.findIndex(v => v.id === action.data.postId);\r\n            const likerIndex = draft.mainPosts[postIndex].Likers.findIndex(v => v.id === action.data.userId);\r\n            draft.mainPosts[postIndex].Likers.splice(likerIndex, 1);\r\n            break;\r\n            /* const postIndex = state.mainPosts.findIndex(v => v.id === action.data.postId);\r\n            const post = state.mainPosts[postIndex];\r\n            const Likers = post.Likers.filter(v => v.id !== action.data.userId);  // 좋아요 누른 사람들 목록에, 본인 제외  \r\n            const mainPosts = [...state.mainPosts];\r\n            mainPosts[postIndex] = { ...post, Likers };\r\n            return {\r\n              ...state,\r\n              mainPosts,\r\n            }; */\r\n        }\r\n        case UNLIKE_POST_FAILURE: {\r\n            break;\r\n            /* return {\r\n              ...state,\r\n            }; */\r\n        }\r\n        case RETWEET_REQUEST: {\r\n            break;\r\n            /* return {\r\n              ...state,\r\n            }; */\r\n        }\r\n        case RETWEET_SUCCESS: {\r\n            draft.mainPosts.unshift(action.data);\r\n            break;\r\n            /* return {\r\n              ...state,\r\n              mainPosts: [action.data, ...state.mainPosts],     // 기존 게시글의 제일 앞에 추가해준다. \r\n            }; */\r\n        }\r\n        case RETWEET_FAILURE: {\r\n            break;\r\n            /* return {\r\n              ...state,\r\n            }; */\r\n        }\r\n        case REMOVE_POST_REQUEST: {\r\n            break;\r\n            /* return {\r\n              ...state,\r\n            }; */\r\n        }\r\n        case REMOVE_POST_SUCCESS: {\r\n            const index = draft.mainPosts.findIndex(v => v.id === action.data);\r\n            draft.mainPosts.splice(index, 1);\r\n            break;\r\n            /* return {\r\n              ...state,\r\n              mainPosts: state.mainPosts.filter(v => v.id !== action.data),\r\n            }; */\r\n        }\r\n        case REMOVE_POST_FAILURE: {\r\n            break;\r\n            /* return {\r\n              ...state,\r\n            }; */\r\n        }\r\n        case LOAD_POST_SUCCESS: {\r\n          draft.singlePost = action.data;\r\n          break;\r\n        }\r\n        default: {\r\n            break;\r\n            /* return {\r\n              ...state,\r\n            }; */\r\n        }\r\n      }\r\n    });\r\n};\r\nexport default reducer;\r\n\r\n\r\n\r\n/* immer쓰기 전 코드 */\r\n/* switch (action.type) {\r\n  case UPLOAD_IMAGES_REQUEST: {\r\n      return {\r\n        ...state,\r\n      };\r\n  }\r\n  case UPLOAD_IMAGES_SUCCESS: {\r\n      return {\r\n        ...state,\r\n        imagePaths: [...state.imagePaths, ...action.data],    // 기존 imagePaths배열에 action.data 추가 \r\n      };\r\n  }\r\n  case UPLOAD_IMAGES_FAILURE: {\r\n      return {\r\n        ...state,\r\n      };\r\n  }\r\n  case REMOVE_IMAGE: {\r\n      return {\r\n          ...state,\r\n          imagePaths: state.imagePaths.filter((v, i) => i !== action.index),\r\n      };\r\n  }\r\n  case LOAD_MAIN_POSTS_REQUEST: \r\n  case LOAD_HASHTAG_POSTS_REQUEST:\r\n  case LOAD_USER_POSTS_REQUEST: {\r\n      return {\r\n        ...state,\r\n        mainPosts: action.lastId === 0 ? [] : state.mainPosts,  // lastId가 0 이면(=처음 화면이면): REQUEST시, mainPosts = []  -> 다른데 갔다가 다시 메인화면 올 수 도 있기 때문  \r\n                                                                // lastId가 0 이 아니라면(=더보기 클릭시): REQUEST시, 기존 mainPosts가져오기 \r\n        hasMorePost: action.lastId ? state.hasMorePost : true,  // 맨 첫 페이지에 게시글 로딩할때, hasMorePost가 true가 되야함. (pages/index.js hasMorePost분기 부분 참조)\r\n      };\r\n  }\r\n  case LOAD_MAIN_POSTS_SUCCESS: \r\n  case LOAD_HASHTAG_POSTS_SUCCESS:\r\n  case LOAD_USER_POSTS_SUCCESS: {\r\n      return {\r\n        ...state,\r\n        mainPosts: state.mainPosts.concat(action.data),   // 덮어쓰는게 아니라, 이전 게시글에 추가하기\r\n        hasMorePost: action.data.length === 10,           // reducers/user.js에서 hasMoreFollower했던거랑 동일한 원리 !!\r\n      };\r\n  }\r\n  case LOAD_MAIN_POSTS_FAILURE: \r\n  case LOAD_HASHTAG_POSTS_FAILURE:\r\n  case LOAD_USER_POSTS_FAILURE: {\r\n      return {\r\n        ...state,\r\n      };\r\n  }\r\n  case ADD_POST_REQUEST: {\r\n      return {\r\n          ...state,\r\n          isAddingPost: true,\r\n          addPostErrorReason: '',\r\n          postAdded: false,\r\n      };\r\n  }\r\n  case ADD_POST_SUCCESS: {\r\n      return {\r\n          ...state,\r\n          isAddingPost: false,\r\n          mainPosts: [action.data, ...state.mainPosts], // 포스트들 앞에 들어가게 된다.\r\n          postAdded: true,\r\n          imagePaths: [],                               // success하는 순간, imagePaths 비워주기 \r\n      };\r\n  }\r\n  case ADD_POST_FAILURE: {\r\n      return {\r\n          ...state,\r\n          isAddingPost: false,\r\n          addPostErrorReason: action.error,\r\n      };\r\n  }\r\n  case ADD_COMMENT_REQUEST: {\r\n      return {\r\n          ...state,\r\n          isAddingComment: true,\r\n          addCommentErrorReason: '',\r\n          commentAdded: false,\r\n      };\r\n  }\r\n  case ADD_COMMENT_SUCCESS: {\r\n      // 항상 불변성을 조심해야 된다. \r\n      // 바뀔 객체만 새로 만들어 줘야된다. \r\n      const postIndex = state.mainPosts.findIndex(v => v.id === action.data.postId); // 먼저, 여러개의 게시글 중에 해당 게시글의 index를 도출한 후,\r\n      const post = state.mainPosts[postIndex]; // 해당 게시글을 찾는다\r\n      const Comments = [...post.Comments, action.data.comment]; // 불변성을 확보하면서, 뒤에다가 새 댓글 달아준다 \r\n      const mainPosts = [...state.mainPosts]; // mainPosts도 불변성을 확보해 줘야한다.\r\n      mainPosts[postIndex] = { ...post, Comments };\r\n\r\n      return {\r\n          ...state,\r\n          isAddingComment: false,\r\n          mainPosts, // 여러 게시글 중에 해당하는 게시글에 해당 댓글 달아주기 (불변성 때문에 복잡한 작업)\r\n          commentAdded: true,\r\n      };\r\n  }\r\n  case ADD_COMMENT_FAILURE: {\r\n      return {\r\n          ...state,\r\n          isAddingComment: false,\r\n          addCommentErrorReason: action.error,\r\n      };\r\n  }\r\n  case LOAD_COMMENTS_SUCCESS: {\r\n      // 항상 불변성을 조심해야 된다. \r\n      // 바뀔 객체만 새로 만들어 줘야된다. \r\n      const postIndex = state.mainPosts.findIndex(v => v.id === action.data.postId);\r\n      const post = state.mainPosts[postIndex];\r\n      const Comments = action.data.comments;\r\n      const mainPosts = [...state.mainPosts];\r\n      mainPosts[postIndex] = { ...post, Comments };\r\n\r\n      return {\r\n        ...state,\r\n        mainPosts,\r\n      };\r\n  }\r\n  case LIKE_POST_REQUEST: {\r\n      return {\r\n        ...state,\r\n      };\r\n  }\r\n  case LIKE_POST_SUCCESS: {\r\n      // 항상 불변성을 조심해야 된다. \r\n      // 바뀔 객체만 새로 만들어 줘야된다. \r\n      const postIndex = state.mainPosts.findIndex(v => v.id === action.data.postId);\r\n      const post = state.mainPosts[postIndex];\r\n      const Likers = [{ id: action.data.userId }, ...post.Likers];    // 좋아요 누른 사람들 목록에, 본인 추가 \r\n      const mainPosts = [...state.mainPosts];\r\n      mainPosts[postIndex] = { ...post, Likers };\r\n\r\n      return {\r\n        ...state,\r\n        mainPosts,\r\n      };\r\n  }\r\n  case LIKE_POST_FAILURE: {\r\n      alert('좋아요 실패!');\r\n      return {\r\n        ...state,\r\n        addLikeErrorReason: action.error,\r\n      };\r\n  }\r\n  case UNLIKE_POST_REQUEST: {\r\n      return {\r\n        ...state,\r\n      };\r\n  }\r\n  case UNLIKE_POST_SUCCESS: {\r\n      const postIndex = state.mainPosts.findIndex(v => v.id === action.data.postId);\r\n      const post = state.mainPosts[postIndex];\r\n      const Likers = post.Likers.filter(v => v.id !== action.data.userId);  // 좋아요 누른 사람들 목록에, 본인 제외  \r\n      const mainPosts = [...state.mainPosts];\r\n      mainPosts[postIndex] = { ...post, Likers };\r\n\r\n      return {\r\n        ...state,\r\n        mainPosts,\r\n      };\r\n  }\r\n  case UNLIKE_POST_FAILURE: {\r\n      return {\r\n        ...state,\r\n      };\r\n  }\r\n  case RETWEET_REQUEST: {\r\n      return {\r\n        ...state,\r\n      };\r\n  }\r\n  case RETWEET_SUCCESS: {\r\n      return {\r\n        ...state,\r\n        mainPosts: [action.data, ...state.mainPosts],     // 기존 게시글의 제일 앞에 추가해준다. \r\n      };\r\n  }\r\n  case RETWEET_FAILURE: {\r\n      return {\r\n        ...state,\r\n      };\r\n  }\r\n  case REMOVE_POST_REQUEST: {\r\n      return {\r\n        ...state,\r\n      };\r\n  }\r\n  case REMOVE_POST_SUCCESS: {\r\n      //const index = draft.mainPosts.findIndex(v => v.id === action.data);\r\n      //draft.mainPosts.splice(index, 1);\r\n      //break;\r\n      return {\r\n        ...state,\r\n        mainPosts: state.mainPosts.filter(v => v.id !== action.data),\r\n      };\r\n  }\r\n  case REMOVE_POST_FAILURE: {\r\n      return {\r\n        ...state,\r\n      };\r\n  }\r\n  default: {\r\n      return {\r\n          ...state,\r\n      };\r\n  }\r\n} */","module.exports = require(\"core-js/library/fn/array/is-array\");","module.exports = require(\"next-server/dist/lib/utils\");","module.exports = require(\"prop-types\");","import _Object$defineProperties from \"../../core-js/object/define-properties\";\nimport _Object$freeze from \"../../core-js/object/freeze\";\nexport default function _taggedTemplateLiteral(strings, raw) {\n  if (!raw) {\n    raw = strings.slice(0);\n  }\n\n  return _Object$freeze(_Object$defineProperties(strings, {\n    raw: {\n      value: _Object$freeze(raw)\n    }\n  }));\n}","import styled from 'styled-components';\r\nimport { CloseOutlined } from '@ant-design/icons';\r\n\r\nexport const Overlay = styled.div`\r\n    position: fixed; \r\n    zIndex: 5000; \r\n    top: 0; \r\n    left: 0; \r\n    right: 0; \r\n    bottom: 0;\r\n`;\r\nexport const Header = styled.header`\r\n    height: 44px; \r\n    background: white; \r\n    position: relative; \r\n    padding: 0; \r\n    textAlign: center;\r\n\r\n    & h1 {\r\n        margin: 0;\r\n        fontSize: 17px;\r\n        color: #333; \r\n        lineHeight: 44px;  \r\n    }\r\n`;\r\nexport const SlickWrapper = styled.div`\r\n    height: calc(100% - 44px);\r\n    background: #090909;\r\n`;\r\nexport const CloseBtn = styled(CloseOutlined)`\r\n    position: absolute; \r\n    right: 0; \r\n    top: 0;\r\n    padding: 15px;\r\n    lineHeight: 14px; \r\n    cursor: pointer;  \r\n`;\r\nexport const Indicator = styled.div`\r\n    text-align: center;\r\n\r\n    & > div {\r\n        width: 75px; \r\n        height: 30px; \r\n        lineHeight: 30px; \r\n        borderRadius: 15px; \r\n        background: #313131; \r\n        display: inline-block; \r\n        textAlign: center; \r\n        color: white; \r\n        fontSize: 15px;\r\n    }\r\n`;\r\nexport const ImgWrapper = styled.div`\r\n    padding: 32px; \r\n    textAlign: center;\r\n\r\n    & img {\r\n        margin: 0 auto;\r\n        maxHeight: 750px;\r\n    }\r\n`;","import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Slick from 'react-slick';\r\nimport { Overlay, Header, CloseBtn, SlickWrapper, ImgWrapper, Indicator } from './style';\r\n\r\nconst ImagesZoom = ({ images, onClose }) => {\r\n    const [currentSlide, setCurrentSlide] = useState(0);\r\n    const backURL = 'http://localhost:3067';\r\n\r\n    return (\r\n        <Overlay>\r\n            <Header>\r\n                <h1>상세 이미지</h1>\r\n                <CloseBtn onClick={onClose}/>\r\n            </Header>\r\n            <SlickWrapper>\r\n                <div>\r\n                    {/* 이미지 슬라이드 */}\r\n                    <Slick\r\n                        initialSlide={0}\r\n                        afterChange={slide => setCurrentSlide(slide)}\r\n                        infinite={false}\r\n                        arrows\r\n                        slidesToShow={1}\r\n                        slidesToScroll={1}\r\n                    >\r\n                        {images.map((v) => {\r\n                            return (\r\n                                <ImgWrapper>\r\n                                    <img src={ `${backURL}/${v.src}` } />\r\n                                </ImgWrapper>\r\n                            );\r\n                        })}\r\n                    </Slick>\r\n                    {/* 몇번째 슬라이드 인지 */}\r\n                    <Indicator>\r\n                        <div>\r\n                            {currentSlide + 1} / {images.length}\r\n                        </div>\r\n                    </Indicator>\r\n                </div>\r\n            </SlickWrapper>\r\n        </Overlay>\r\n    )\r\n\r\n    /* return (\r\n        <div style={{ position: 'fixed', zIndex: 5000, top: 0, left: 0, right: 0, bottom: 0 }}>\r\n            <header style={{ height: 44, background: 'white', position: 'relative', padding: 0, textAlign: 'center'}}>\r\n                <h1 style={{ margin: 0, fontSize: '17px', color: '#333', lineHeight: '44px' }}>상세 이미지</h1>\r\n                <CloseOutlined onClick={onClose} style={{ position: 'absolute', right: 0, top: 0, padding: 15, lineHeight: '14px', cursor: 'pointer' }} />\r\n            </header>\r\n            <div style={{ height: 'calc(100% - 44px)', background: '#090909' }}>\r\n                <div>\r\n                    <Slick\r\n                        initialSlide={0}\r\n                        afterChange={slide => setCurrentSlide(slide)}\r\n                        infinite={false}\r\n                        arrows\r\n                        slidesToShow={1}\r\n                        slidesToScroll={1}\r\n                    >\r\n                        {images.map((v) => {\r\n                            return (\r\n                                <div style={{ padding: 32, textAlign: 'center' }}>\r\n                                    <img src={ `${backURL}/${v.src}` } style={{ margin: '0 auto', maxHeight: 750 }}/>\r\n                                </div>\r\n                            );\r\n                        })}\r\n                    </Slick>\r\n                    <div style={{ textAlign: 'center' }}>\r\n                        <div style={{ width: 75, height: 30, lineHeight: '30px', borderRadius: 15, background: '#313131', display: 'inline-block', textAlign: 'center', color: 'white', fontSize: '15px' }}>\r\n                            {currentSlide + 1} / {images.length}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    ) */\r\n};\r\n\r\nImagesZoom.propTypes = {\r\n    images: PropTypes.arrayOf(PropTypes.shape({\r\n        src: PropTypes.string,\r\n    })).isRequired,\r\n    onClose: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ImagesZoom;","import React, { useState, useCallback } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { PlusOutlined } from '@ant-design/icons';\r\nimport ImagesZoom from './ImagesZoom/index';\r\n\r\nconst PostImages = ({ images }) => {\r\n    const [showImagesZoom, setShowImagesZoom] = useState(false);    // 확대 이미지를 보여줄지 말지 \r\n\r\n    const backURL = 'http://localhost:3067';\r\n\r\n    const onZoom = useCallback(() => {\r\n        setShowImagesZoom(true);\r\n    }, []);\r\n\r\n    /* 확대 된 이미지 끄는것은 component내에서 하는것이기 때문에, 이 함수를 props로 넘겨줘야 한다. */\r\n    const onClose = useCallback(() => {\r\n        setShowImagesZoom(false);\r\n    }, []); \r\n\r\n    if (images.length === 1) {  // 이미지가 1장 일때 \r\n        return (\r\n            <>\r\n                <img src={`${backURL}/${images[0].src}`} onClick={onZoom}/>\r\n                {showImagesZoom && <ImagesZoom images={images} onClose={onClose}/>}\r\n            </>\r\n        );\r\n    }\r\n    if (images.length === 2) {  // 이미지가 2장 일때 \r\n        return (\r\n            <>\r\n                <div>\r\n                    <img src={`${backURL}/${images[0].src}`} width=\"50%\" height=\"50%\" onClick={onZoom}/>\r\n                    <img src={`${backURL}/${images[1].src}`} width=\"50%\" height=\"50%\" onClick={onZoom}/>\r\n                </div>\r\n                {showImagesZoom && <ImagesZoom images={images} onClose={onClose}/>}\r\n            </>\r\n        );\r\n    }            \r\n    if (images.length === 3) {  // 이미지가 3장 일때 \r\n        return (\r\n            <>\r\n                <div>\r\n                    <img src={`${backURL}/${images[0].src}`} width=\"50%\" height=\"50%\" onClick={onZoom}/>\r\n                    <img src={`${backURL}/${images[1].src}`} width=\"50%\" height=\"50%\" onClick={onZoom}/>\r\n                    <img src={`${backURL}/${images[2].src}`} width=\"50%\" height=\"50%\" onClick={onZoom}/>\r\n                </div>\r\n                {showImagesZoom && <ImagesZoom images={images} onClose={onClose}/>}\r\n            </>\r\n        );\r\n    }                           \r\n    else { // 이미지가 4장 이상 일때 \r\n        return (\r\n            <>\r\n                <div>\r\n                    <img src={`${backURL}/${images[0].src}`} width=\"50%\" height=\"50%\" onClick={onZoom}/>\r\n                    <img src={`${backURL}/${images[1].src}`} width=\"50%\" height=\"50%\" onClick={onZoom}/>\r\n                    <br />\r\n                    <img src={`${backURL}/${images[2].src}`} width=\"50%\" height=\"50%\" onClick={onZoom}/>\r\n                    {/* 더 보기 버튼 */}\r\n                    <div style={{ display: 'inline-block', width: '50%', textAlign: 'center', verticalAlign: 'middle' }} >\r\n                        <PlusOutlined />\r\n                        <br />\r\n                        {images.length - 3}개의 사진 더보기\r\n                    </div>\r\n                </div>\r\n                {showImagesZoom && <ImagesZoom images={images} onClose={onClose}/>}\r\n            </>\r\n        );\r\n    }\r\n};\r\n\r\nPostImages.propTypes = {\r\n    images: PropTypes.arrayOf(PropTypes.shape({\r\n        src: PropTypes.string,\r\n    })).isRequired,\r\n};\r\n\r\nexport default PostImages;","import React from 'react';\r\nimport Link from 'next/link';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst PostCardContent = ({ postData }) => {\r\n    return (\r\n        <div>\r\n          {postData.split(/(#[^\\s]+)/g).map((v) => {\r\n            if (v.match(/#[^\\s]+/)) {  // 쪼개진 애가 해시태그면 링크로 바꿔주기\r\n              return (\r\n                <Link \r\n                    href={{ pathname: '/hashtag', query: { tag: v.slice(1) } }} \r\n                    as={`/hashtag/${v.slice(1)}`}\r\n                    key={v}\r\n                >\r\n                    <a>{v}</a>\r\n                </Link>\r\n              );\r\n            }\r\n            return v; // 해시태그(#)가 아니라면, 그냥 문자열만 리턴 \r\n          })}\r\n        </div>\r\n    );\r\n};\r\n\r\nPostCardContent.propTypes = {\r\n    postData: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default PostCardContent;\r\n\r\n\r\n\r\n","import { Button, Form, Input } from 'antd';\r\nimport React, { useCallback, useEffect, useState } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport { ADD_COMMENT_REQUEST } from '../reducers/post';\r\n\r\nconst CommentForm = ({ post }) => {\r\n    const [commentText, setCommentText] = useState('');\r\n    const { commentAdded, isAddingComment } = useSelector(state => state.post);\r\n    const { me } = useSelector(state => state.user);\r\n    const dispatch = useDispatch();\r\n\r\n    /* 댓글 업로드 */\r\n    const onSubmitComment = useCallback((e) => {\r\n        e.preventDefault();\r\n        if (!me) {\r\n        return alert('댓글을 작성하려면, 로그인이 필요합니다.');\r\n        }\r\n        return dispatch({\r\n        type: ADD_COMMENT_REQUEST,\r\n        data: {\r\n            postId: post.id,\r\n            content: commentText,\r\n        },\r\n        });\r\n    }, [me && me.id, commentText]);\r\n\r\n    /* 댓글 작성 완료되면, 댓글 입력창 비워주기 */\r\n    useEffect(() => {\r\n        setCommentText('');\r\n    }, [commentAdded === true]); \r\n\r\n    /* 댓글이 작성되는 중에 */\r\n    const onChangeCommentText = useCallback((e) => {\r\n        setCommentText(e.target.value);\r\n    }, []);\r\n\r\n    return (\r\n        <Form onSubmit={onSubmitComment}>\r\n            <Form.Item>\r\n              <Input.TextArea rows={4} value={commentText} onChange={onChangeCommentText} />\r\n            </Form.Item>\r\n            <Button type=\"primary\" htmlType=\"submit\" loading={isAddingComment}>삐약</Button>\r\n        </Form>\r\n    );\r\n};\r\n\r\nCommentForm.propTypes = {\r\n    post: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default CommentForm;","import React, { memo } from 'react';\r\nimport { Button } from 'antd';\r\nimport PropTypes from 'prop-types';\r\nimport { useSelector } from 'react-redux';\r\n\r\n/* props가 자주 달라지는 컴포넌트들은, memo로 감싼다. */\r\nconst FollowButton = memo( ({ post, onUnfollow, onFollow }) => {\r\n    const { me } = useSelector(state => state.user);\r\n    return !me || post.User.id === me.id\r\n        ? null\r\n        : me.Followings && me.Followings.find(v => v.id === post.User.id)\r\n            ? <Button onClick={onUnfollow(post.User.id)}>언팔로우</Button>\r\n            : <Button onClick={onFollow(post.User.id)}>팔로우</Button>\r\n});\r\n\r\nFollowButton.propTypes = {\r\n    post: PropTypes.object.isRequired,\r\n    onUnfollow: PropTypes.func.isRequired,\r\n    onFollow: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default FollowButton;\r\n","import React, { useState, useCallback, useEffect, memo } from 'react';\r\nimport { RetweetOutlined, HeartOutlined, HeartTwoTone, MessageOutlined, EllipsisOutlined } from '@ant-design/icons';\r\nimport { Card, Button, Avatar, Form, Input, List, Comment, Popover } from 'antd';\r\nimport Link from 'next/link';\r\nimport PropTypes from 'prop-types';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport styled from 'styled-components';\r\nimport moment from 'moment';\r\n\r\nimport { \r\n  LOAD_COMMENTS_REQUEST, \r\n  UNLIKE_POST_REQUEST, \r\n  LIKE_POST_REQUEST, \r\n  RETWEET_REQUEST,\r\n  REMOVE_POST_REQUEST\r\n} from '../reducers/post';\r\nimport { FOLLOW_USER_REQUEST, UNFOLLOW_USER_REQUEST } from '../reducers/user';\r\nimport PostImages from '../components/PostImages';\r\nimport PostCardContent from '../components/PostCardContent';\r\nimport CommentForm from './CommentForm';\r\nimport FollowButton from '../components/FollowButton';\r\n\r\nmoment.locale('ko');    // moment에 한글 설정 \r\n\r\nconst CardWrapper = styled.div`\r\n  margin-bottom: 20px;\r\n`; \r\n\r\nconst PostCard = memo( ({ post }) => {\r\n  const [commentFormOpened, setCommentFormOpened] = useState(false);\r\n  const myId = useSelector(state => state.user.me && state.user.me.id);\r\n  const dispatch = useDispatch();\r\n  const isLiked = myId && post.Likers && post.Likers.find(v => v.id === myId); // 내가 '좋아요' 했었는지 \r\n\r\n  /* onClick 했을때, 댓글창 열고닫기 */\r\n  const onToggleComment = useCallback(() => {\r\n    //console.log(commentFormOpened);\r\n    setCommentFormOpened(prev => !prev);  // 현재 루프안에서 즉시 바뀌지는 않음. (현재 루프 끝나면 true로 바뀜)\r\n                                          // 앞,뒤 console.log()로 확인 해보기 \r\n    //console.log(commentFormOpened);\r\n    if (!commentFormOpened) { // 닫혀있는 경우에, 댓글 아이콘 눌렀을때(onClick)\r\n                              // commentFormOpened === false 이면..\r\n      dispatch({\r\n        type: LOAD_COMMENTS_REQUEST,\r\n        data: post.id,\r\n      });\r\n    }\r\n  }, [commentFormOpened]);\r\n\r\n  /* onClick 했을때, '좋아요' 처리 */\r\n  const onToggleLike = useCallback(() => {\r\n    if (!myId) {\r\n      return alert('로그인이 필요합니다.');    // 로그인 안된 사용자는 '좋아요' 클릭 불가\r\n    }\r\n    if (isLiked) {   // 내가 '좋아요' 이미 누른 상태이면   \r\n      dispatch({\r\n        type: UNLIKE_POST_REQUEST,\r\n        data: post.id,\r\n      });\r\n    } else {\r\n      dispatch({\r\n        type: LIKE_POST_REQUEST,\r\n        data: post.id,\r\n          \r\n      });\r\n    }\r\n  }, [myId, post && post.id, isLiked]);\r\n\r\n  const onRetweet = useCallback(() => {\r\n    if (!myId) {\r\n      return alert('로그인이 필요합니다.');\r\n    }\r\n    return dispatch({\r\n      type: RETWEET_REQUEST,\r\n      data: post.id,\r\n    });\r\n  }, [myId, post.id]);\r\n\r\n  /* 팔로우 하기 눌렀을때 */\r\n  const onFollow = useCallback(userId => () => {\r\n    //console.log(me.id, userId);   // 12, 1\r\n    dispatch({\r\n      type: FOLLOW_USER_REQUEST,\r\n      data: userId,\r\n    });\r\n  }, []);\r\n\r\n  /* 언팔로우 하기 눌렀을때 */\r\n  const onUnfollow = useCallback(userId => () => {\r\n    dispatch({\r\n      type: UNFOLLOW_USER_REQUEST,\r\n      data: userId,\r\n    });\r\n  }, []);\r\n\r\n  const onRemovePost = useCallback(postId => () => {\r\n    dispatch({\r\n      type: REMOVE_POST_REQUEST,\r\n      data: postId,\r\n    });\r\n  }, []);\r\n\r\n  return (\r\n    <CardWrapper>\r\n      <Card\r\n        cover={post.Images && post.Images[0] && <PostImages images={post.Images} />}\r\n        actions={[\r\n            <RetweetOutlined onClick={onRetweet}/>,\r\n            isLiked ? <HeartTwoTone twoToneColor=\"#eb2f96\" onClick={onToggleLike}/> : <HeartOutlined onClick={onToggleLike}/>,\r\n            <MessageOutlined onClick={onToggleComment}/>,\r\n            <Popover\r\n              key=\"ellipsis\"\r\n              content={(\r\n                <Button.Group>\r\n                  {myId && post.UserId === myId\r\n                    ? (\r\n                      <>\r\n                        <Button>수정</Button>\r\n                        <Button type=\"danger\" onClick={onRemovePost(post.id)}>삭제</Button>\r\n                      </>\r\n                    )\r\n                    : <Button>신고</Button>}\r\n                </Button.Group>\r\n              )}\r\n            >\r\n              <EllipsisOutlined />\r\n            </Popover>,\r\n        ]}\r\n        title={post.RetweetId ? `${post.User.nickname}님이 리트윗하셨습니다.` : null}\r\n        extra={<FollowButton post={post} onUnfollow={onUnfollow} onFollow={onFollow} />}\r\n      >\r\n        {/* 리트윗 한 경우에는 Card 안에 Card를 하나 더 만들어 준다. */}\r\n        {post.RetweetId && post.Retweet \r\n          ? (\r\n            <Card\r\n              cover={post.Retweet.Images[0] && <PostImages images={post.Retweet.Images} />}\r\n            >\r\n              <span style={{ float: 'right' }}>{moment(post.createdAt).format('YYYY.MM.DD.')}</span>\r\n              <Card.Meta\r\n                avatar={(\r\n                  <Link\r\n                    href={{ pathname: '/user', query: { id: post.Retweet.User.id } }}\r\n                  >\r\n                    <a><Avatar>{post.Retweet.User.nickname[0]}</Avatar></a>\r\n                  </Link>\r\n                )}\r\n                title={post.Retweet.User.nickname}\r\n                description={<PostCardContent postData={post.Retweet.content} />} // a tag x -> Link\r\n              />\r\n            </Card>\r\n          )\r\n          : (\r\n            <>\r\n              <span style={{ float: 'right' }}>{moment(post.createdAt).format('YYYY.MM.DD.')}</span>\r\n              <Card.Meta\r\n                avatar={(\r\n                  <Link href={{ pathname: '/user', query: { id: post.User.id } }}>\r\n                    <a><Avatar>{post.User.nickname[0]}</Avatar></a>\r\n                  </Link>\r\n                )}\r\n                title={post.User.nickname}\r\n                description={<PostCardContent postData={post.content}/>}\r\n              />\r\n            </>\r\n          )}\r\n      </Card>\r\n\r\n      {commentFormOpened && (\r\n        <>\r\n          <CommentForm post={post}/>\r\n          <List\r\n            header={`${post.Comments ? post.Comments.length : 0} 댓글`}\r\n            itemLayout=\"horizontal\"\r\n            dataSource={post.Comments || []}\r\n            renderItem={item => (\r\n              <li>\r\n                <Comment\r\n                  author={item.User.nickname}\r\n                  avatar={<Link href={{ pathname: '/user', query: { id: item.User.id } }}><a><Avatar>{item.User.nickname[0]}</Avatar></a></Link>}\r\n                  content={item.content}\r\n                />\r\n              </li>\r\n            )}\r\n          />\r\n        </>\r\n      )}\r\n    </CardWrapper>\r\n  );\r\n});\r\n\r\nPostCard.propTypes = {\r\n    post: PropTypes.shape({\r\n    User: PropTypes.object,\r\n    content: PropTypes.string,\r\n    img: PropTypes.string,\r\n    //createdAt: PropTypes.object,\r\n    createdAt: PropTypes.string,\r\n  }),\r\n};\r\n\r\nexport default PostCard;","var _Object$setPrototypeOf = require(\"../core-js/object/set-prototype-of\");\n\nfunction _setPrototypeOf(o, p) {\n  module.exports = _setPrototypeOf = _Object$setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}\n\nmodule.exports = _setPrototypeOf;","module.exports = require(\"core-js/library/fn/symbol\");","module.exports = require(\"moment\");"],"sourceRoot":""}