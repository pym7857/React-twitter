{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./node_modules/@babel/runtime-corejs2/core-js/object/define-properties.js","webpack:///external \"next/router\"","webpack:///external \"styled-components\"","webpack:///external \"antd\"","webpack:///./node_modules/@babel/runtime-corejs2/core-js/object/freeze.js","webpack:///external \"core-js/library/fn/object/freeze\"","webpack:///external \"core-js/library/fn/get-iterator\"","webpack:///./reducers/user.js","webpack:///external \"core-js/library/fn/array/is-array\"","webpack:///external \"immer\"","webpack:///./node_modules/@babel/runtime-corejs2/core-js/get-iterator.js","webpack:///external \"react\"","webpack:///./node_modules/@babel/runtime-corejs2/helpers/esm/arrayWithHoles.js","webpack:///./node_modules/@babel/runtime-corejs2/helpers/esm/iterableToArrayLimit.js","webpack:///./node_modules/@babel/runtime-corejs2/helpers/esm/nonIterableRest.js","webpack:///./node_modules/@babel/runtime-corejs2/helpers/esm/slicedToArray.js","webpack:///external \"react-redux\"","webpack:///external \"core-js/library/fn/object/define-properties\"","webpack:///./node_modules/@babel/runtime-corejs2/core-js/array/is-array.js","webpack:///./node_modules/@babel/runtime-corejs2/helpers/esm/taggedTemplateLiteral.js","webpack:///./pages/signup.js"],"names":["initialState","isLoggingOut","isLogginIn","logInErrorReason","signedUp","isSignedUp","signUpErrorReason","me","followingList","followerList","userInfo","isEditingNickname","editNicknameErrorReason","hasMoreFollower","hasMoreFollowing","SIGN_UP_REQUEST","SIGN_UP_SUCCESS","SIGN_UP_FAILURE","LOG_IN_REQUEST","LOG_IN_SUCCESS","LOG_IN_FAILURE","LOG_OUT_REQUEST","LOG_OUT_SUCCESS","LOG_OUT_FAILURE","LOAD_USER_REQUEST","LOAD_USER_SUCCESS","LOAD_USER_FAILURE","LOAD_FOLLOWERS_REQUEST","LOAD_FOLLOWERS_SUCCESS","LOAD_FOLLOWERS_FAILURE","LOAD_FOLLOWINGS_REQUEST","LOAD_FOLLOWINGS_SUCCESS","LOAD_FOLLOWINGS_FAILURE","FOLLOW_USER_REQUEST","FOLLOW_USER_SUCCESS","FOLLOW_USER_FAILURE","UNFOLLOW_USER_REQUEST","UNFOLLOW_USER_SUCCESS","UNFOLLOW_USER_FAILURE","REMOVE_FOLLOWER_REQUEST","REMOVE_FOLLOWER_SUCCESS","REMOVE_FOLLOWER_FAILURE","EDIT_NICKNAME_REQUEST","EDIT_NICKNAME_SUCCESS","EDIT_NICKNAME_FAILURE","ADD_POST_TO_ME","REMOVE_POST_OF_ME","reducer","state","action","produce","draft","type","isLoggingIn","isLoggedIn","data","reason","isSigningUp","alert","error","isThisMe","Followings","unshift","id","index","findIndex","v","splice","index2","console","log","Posts","offset","forEach","f","push","length","userIndex1","Followers","userIndex2","nickname","postIndex","SignUpErrorMsg","styled","div","useInput","initValue","useState","value","setter","handler","useCallback","e","target","Signup","passwordCheck","setPasswordCheck","term","setTerm","passwordError","setPasswordError","termError","setTermError","onChangeId","nick","onChangeNick","password","onChangePassword","dispatch","useDispatch","useSelector","user","useEffect","Router","onSubmit","preventDefault","userId","onChangePasswordCheck","onChangeTerm","checked","padding","maringTop"],"mappings":"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","file":"static\\RI--FCU_PMjaxQNQbos2j\\pages\\signup.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = require('../../../ssr-module-cache.js');\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tvar threw = true;\n \t\ttry {\n \t\t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n \t\t\tthrew = false;\n \t\t} finally {\n \t\t\tif(threw) delete installedModules[moduleId];\n \t\t}\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 4);\n","module.exports = require(\"core-js/library/fn/object/define-properties\");","module.exports = require(\"next/router\");","module.exports = require(\"styled-components\");","module.exports = require(\"antd\");","module.exports = require(\"core-js/library/fn/object/freeze\");","module.exports = require(\"core-js/library/fn/object/freeze\");","module.exports = require(\"core-js/library/fn/get-iterator\");","import produce from 'immer';\r\n\r\n/* const dummyUser = {\r\n    nickname: '제로초',\r\n    Post: [],\r\n    followings: [],\r\n    followers: [],\r\n    id: 1,\r\n}; */\r\n\r\n/* redux state */\r\nexport const initialState = {\r\n    isLoggingOut: false,          // 로그아웃 시도 중\r\n    isLogginIn: false,            // 로그인 시도 중 \r\n    logInErrorReason: '',         // 로그인 에러 사유\r\n\r\n    signedUp: false,              // 회원가입 성공\r\n    isSignedUp: false,            // 회원가입 시도 중\r\n    signUpErrorReason: '',        // 회원가입 에러 사유\r\n\r\n    me: null,                     // 내 정보\r\n    followingList: [],            // '내'가 팔로잉 하고있는 사람들 목록 (프로필 페이지에서 쓰임)\r\n    followerList: [],             // '나'의 팔로워들 목록              (프로필 페이지에서 쓰임)\r\n    userInfo: null,               // 남의 정보 \r\n\r\n    isEditingNickname: false,     // 닉네임 변경 중 \r\n    editNicknameErrorReason: '',  // 닉네임 변경 실패 사유 \r\n\r\n    hasMoreFollower: false,       // 더보기 버튼을 존재시킬지\r\n    hasMoreFollowing: false,      // 더보기 버튼을 존재시킬지\r\n};\r\n\r\n/* Action의 이름 */\r\nexport const SIGN_UP_REQUEST = 'SIGN_UP_REQUEST';\r\nexport const SIGN_UP_SUCCESS = 'SIGN_UP_SUCCESS';\r\nexport const SIGN_UP_FAILURE = 'SIGN_UP_FAILURE';\r\n\r\nexport const LOG_IN_REQUEST = 'LOG_IN_REQUEST';\r\nexport const LOG_IN_SUCCESS = 'LOG_IN_SUCCESS';\r\nexport const LOG_IN_FAILURE = 'LOG_IN_FAILURE';\r\n\r\nexport const LOG_OUT_REQUEST = 'LOG_OUT_REQUEST';\r\nexport const LOG_OUT_SUCCESS = 'LOG_OUT_SUCCESS';\r\nexport const LOG_OUT_FAILURE = 'LOG_OUT_FAILURE';\r\n\r\nexport const LOAD_USER_REQUEST = 'LOAD_USER_REQUEST';               // 사용자 불러오기 \r\nexport const LOAD_USER_SUCCESS = 'LOAD_USER_SUCCESS';\r\nexport const LOAD_USER_FAILURE = 'LOAD_USER_FAILURE';\r\n\r\nexport const LOAD_FOLLOWERS_REQUEST = 'LOAD_FOLLOWERS_REQUEST';\r\nexport const LOAD_FOLLOWERS_SUCCESS = 'LOAD_FOLLOWERS_SUCCESS';\r\nexport const LOAD_FOLLOWERS_FAILURE = 'LOAD_FOLLOWERS_FAILURE';\r\n\r\nexport const LOAD_FOLLOWINGS_REQUEST = 'LOAD_FOLLOWINGS_REQUEST';\r\nexport const LOAD_FOLLOWINGS_SUCCESS = 'LOAD_FOLLOWINGS_SUCCESS';\r\nexport const LOAD_FOLLOWINGS_FAILURE = 'LOAD_FOLLOWINGS_FAILURE';\r\n\r\nexport const FOLLOW_USER_REQUEST = 'FOLLOW_USER_REQUEST';           // 팔로우 액션\r\nexport const FOLLOW_USER_SUCCESS = 'FOLLOW_USER_SUCCESS';\r\nexport const FOLLOW_USER_FAILURE = 'FOLLOW_USER_FAILURE';\r\n\r\nexport const UNFOLLOW_USER_REQUEST = 'UNFOLLOW_USER_REQUEST';       // 언팔 액션\r\nexport const UNFOLLOW_USER_SUCCESS = 'UNFOLLOW_USER_SUCCESS';\r\nexport const UNFOLLOW_USER_FAILURE = 'UNFOLLOW_USER_FAILURE';\r\n\r\nexport const REMOVE_FOLLOWER_REQUEST = 'REMOVE_FOLLOWER_REQUEST';   // 팔로워 제거 \r\nexport const REMOVE_FOLLOWER_SUCCESS = 'REMOVE_FOLLOWER_SUCCESS';\r\nexport const REMOVE_FOLLOWER_FAILURE = 'REMOVE_FOLLOWER_FAILURE';\r\n\r\nexport const EDIT_NICKNAME_REQUEST = 'EDIT_NICKNAME_REQUEST';\r\nexport const EDIT_NICKNAME_SUCCESS = 'EDIT_NICKNAME_SUCCESS';\r\nexport const EDIT_NICKNAME_FAILURE = 'EDIT_NICKNAME_FAILURE';\r\n\r\nexport const ADD_POST_TO_ME = 'ADD_POST_TO_ME';                    \r\nexport const REMOVE_POST_OF_ME = 'REMOVE_POST_OF_ME';\r\n\r\n/* 실제 Action */\r\n// ...\r\n\r\n/* Reducer */\r\nconst reducer = (state = initialState, action) => {\r\n    /* immer */\r\n    return produce(state, (draft) => {      // immer에게 불변성을 맡기고, 우리는 draft만 자유롭게 변경해주면 된다.\r\n      switch (action.type) {\r\n        case LOG_IN_REQUEST: {\r\n            draft.isLoggingIn = true;\r\n            draft.isLoggedIn = false;\r\n            draft.logInErrorReason = '';\r\n            break;\r\n            /* return {\r\n                ...state,\r\n                isLoggingIn: true,\r\n                isLoggedIn: false,\r\n                logInErrorReason: '',\r\n            }; */\r\n        }\r\n        case LOG_IN_SUCCESS: {\r\n            draft.isLoggingIn = false;\r\n            draft.me = action.data;\r\n            break;\r\n            /* return {\r\n                ...state,\r\n                isLoggingIn: false,\r\n                me: action.data,\r\n                isLoading: false,\r\n            }; */\r\n        }\r\n        case LOG_IN_FAILURE: {\r\n            draft.isLoggingIn = false;\r\n            draft.logInErrorReason = action.reason;   // saga에서 보낸 action.reason\r\n            draft.me = null;\r\n            break;\r\n            /* return {\r\n                ...state,\r\n                isLoggingIn: false,\r\n                logInErrorReason: action.error,\r\n                me: null,\r\n            }; */\r\n        }\r\n        case LOG_OUT_REQUEST: {\r\n            draft.isLoggingOut = true;\r\n            break;\r\n            /* return {\r\n              ...state,\r\n              isLoggingOut: true,\r\n            }; */\r\n        }\r\n        case LOG_OUT_SUCCESS: {\r\n            draft.isLoggingOut = false;\r\n            draft.me = null;\r\n            break;\r\n            /* return {\r\n              ...state,\r\n              isLoggingOut: false,\r\n              me: null,\r\n            }; */\r\n        }\r\n        case SIGN_UP_REQUEST: {\r\n            draft.isSigningUp = true;\r\n            draft.isSignedUp = false;\r\n            draft.signUpErrorReason = '';\r\n            break;\r\n            /* return {\r\n                ...state,\r\n                isSigningUp: true,\r\n                isSignedUp: false,\r\n                signUpErrorReason: '',\r\n            }; */\r\n        }\r\n        case SIGN_UP_SUCCESS: {\r\n            alert('회원가입 성공!'); \r\n            draft.isSigningUp = false;\r\n            draft.isSignedUp = true;\r\n            break;\r\n            /* return {\r\n                isSigningUp: false,\r\n                isSignedUp: true,\r\n            }; */\r\n        }\r\n        case SIGN_UP_FAILURE: {\r\n            draft.isSigningUp = false;\r\n            draft.signUpErrorReason = action.error;\r\n            break;\r\n            /* return {\r\n                isSigningUp: false,\r\n                signUpErrorReason: action.error,\r\n            }; */\r\n        }\r\n        case LOAD_USER_REQUEST: {\r\n            break;\r\n            /* return {\r\n              ...state,\r\n            }; */\r\n        }\r\n        case LOAD_USER_SUCCESS: {\r\n            if (action.isThisMe) {\r\n              draft.me = action.data;\r\n              break;\r\n            } else {\r\n              draft.userInfo = action.data;\r\n              break;\r\n            }\r\n            /* if (action.isThisMe) {    // (sagas/user.js)의 function*loadUser() 에서 put으로 넘겨준것이 바로, action.me\r\n                return {\r\n                    ...state,\r\n                    me: action.data,\r\n                  };\r\n            } else {\r\n                return {\r\n                    ...state,\r\n                    userInfo: action.data,\r\n                  };\r\n            } */\r\n        }\r\n        case LOAD_USER_FAILURE: {\r\n            break;\r\n            /* return {\r\n              ...state,\r\n            }; */\r\n        }\r\n        case FOLLOW_USER_REQUEST: {\r\n            break;\r\n            /* return {\r\n              ...state,\r\n            }; */\r\n        }\r\n        case FOLLOW_USER_SUCCESS: {\r\n            draft.me.Followings.unshift({ id: action.data });\r\n            break;\r\n            /* return {\r\n              ...state,\r\n              me: {\r\n                ...state.me,\r\n                Followings: [{ id: action.data }, ...state.me.Followings],\r\n              },\r\n            }; */\r\n        }\r\n        case FOLLOW_USER_FAILURE: {\r\n            break;\r\n            /* return {\r\n              ...state,\r\n            }; */\r\n        }\r\n        case UNFOLLOW_USER_REQUEST: {\r\n            break;\r\n            /* return {\r\n              ...state,\r\n            }; */\r\n        }\r\n        case UNFOLLOW_USER_SUCCESS: {\r\n            // me.Followings 배열 안에 상대방 id가 들었는지 찾기 \r\n            const index = draft.me.Followings.findIndex(v => v.id === action.data);\r\n            draft.me.Followings.splice(index, 1);\r\n\r\n            // followingList 배열 안에 상대방 id가 들었는지 찾기 (me.FollowingList가 아니다!!!!!!!!!!!)\r\n            const index2 = draft.followingList.findIndex(v => v.id === action.data);\r\n            draft.followingList.splice(index2, 1);\r\n            break;\r\n        }\r\n        case UNFOLLOW_USER_FAILURE: { \r\n            console.log('action.error=', action.error);\r\n            break;\r\n            /* return {\r\n              ...state,\r\n            }; */\r\n        }\r\n        case ADD_POST_TO_ME: {\r\n            draft.me.Posts.unshift({ id: action.data });\r\n            break;\r\n            /* return {\r\n              ...state,\r\n              me: {\r\n                ...state.me,\r\n                Posts: [{ id: action.data }, ...state.me.Posts],    // 작성한 게시글을, user정보안의 게시글 정보에 넣어주기 \r\n              },\r\n            }; */\r\n        }\r\n        case LOAD_FOLLOWERS_REQUEST: {\r\n            draft.followerList = !action.offset ? [] : draft.followerList;      // offset이 없는 경우, followerList = []\r\n                                                                                // 이렇게 해줘야 2번씩 로딩 안됨 \r\n            break;\r\n            /* return {\r\n              ...state,\r\n              //hasMoreFollower: action.offset ? state.hasMoreFollower : true,  // 처음화면 일때는, offset은 0 이므로, false취급을 받아서 true로 넘어간다.(=더보기 버튼을 보여준다.)                                                         \r\n                                                                                // (처음화면일때 offset이 0인것은, router.get('/:id/followers'... 에서 확인가능)      \r\n                                                                                // 여기 없어도 됨 (내 Q&A 답글)\r\n            }; */\r\n        }\r\n        case LOAD_FOLLOWERS_SUCCESS: {\r\n            action.data.forEach((f) => {\r\n              draft.followerList.push(f);\r\n            });\r\n            draft.hasMoreFollower = action.data.length === 3;\r\n            break;\r\n            /* return {\r\n              ...state,\r\n              followerList: state.followerList.concat(action.data), // 기존것을 덮어쓰지 말고, 기존것에 추가 \r\n              hasMoreFollower: action.data.length === 3,            // 방금 로드된 팔로워가 1명 또는 2명이라면, 더보기 버튼을 보여줄 필요가 없다.\r\n                                                                    // 방금 로드된 팔로워가 3명일때만, 더보기 버튼을 보여줄 필요가 있다.\r\n            }; */\r\n        }\r\n        case LOAD_FOLLOWERS_FAILURE: {\r\n            break;\r\n            /* return {\r\n              ...state,\r\n            }; */\r\n        }\r\n        /* 프로필 페이지에서 팔로잉 목록 불러오는 명령 */\r\n        case LOAD_FOLLOWINGS_REQUEST: {\r\n            draft.followingList = !action.offset ? [] : draft.followingList;      // offset이 없는 경우, followerList = []\r\n                                                                                  // 이렇게 해줘야 2번씩 로딩 안됨 \r\n            break;\r\n        }\r\n        case LOAD_FOLLOWINGS_SUCCESS: {\r\n            action.data.forEach((f) => {\r\n              draft.followingList.push(f);\r\n            });\r\n            draft.hasMoreFollowing = action.data.length === 3;\r\n            break;\r\n        }\r\n        case LOAD_FOLLOWINGS_FAILURE: {\r\n            break;\r\n            /* return {\r\n              ...state,\r\n            }; */\r\n        }\r\n        case REMOVE_FOLLOWER_REQUEST: {\r\n            break;\r\n            /* return {\r\n              ...state,\r\n            }; */\r\n        }\r\n        case REMOVE_FOLLOWER_SUCCESS: {\r\n            const userIndex1 = draft.Followers.findIndex(v => v.id === action.data);\r\n            draft.me.Followers.splice(userIndex1, 1);\r\n\r\n            // me.followerList가 아니다!!!!!!!!!!!!!!!!!! \r\n            const userIndex2 = draft.followerList.findIndex(v => v.id === action.data);\r\n            draft.followerList.splice(userIndex2, 1); \r\n            break;\r\n        }\r\n        case REMOVE_FOLLOWER_FAILURE: {\r\n            break;\r\n            /* return {\r\n              ...state,\r\n            }; */\r\n        }\r\n        case EDIT_NICKNAME_REQUEST: {\r\n            draft.isEditingNickname = true;\r\n            draft.editNicknameErrorReason = '';\r\n            break;\r\n            /* return {\r\n              ...state,\r\n              isEditingNickname: true,\r\n              editNicknameErrorReason: '',\r\n            }; */\r\n        }\r\n        case EDIT_NICKNAME_SUCCESS: {\r\n            draft.isEditingNickname = false;\r\n            draft.me.nickname = action.data;\r\n            break;\r\n            /* return {\r\n              ...state,\r\n              isEditingNickname: false,\r\n              me: {\r\n                ...state.me,\r\n                nickname: action.data,\r\n              },\r\n            }; */\r\n        }\r\n        case EDIT_NICKNAME_FAILURE: {\r\n            draft.isEditingNickname = false;\r\n            draft.editNicknameErrorReason = action.error;\r\n            break;\r\n            /* return {\r\n              ...state,\r\n              isEditingNickname: false,\r\n              editNicknameErrorReason: action.error,\r\n            }; */\r\n        }\r\n        case REMOVE_POST_OF_ME: {\r\n            const postIndex = draft.me.Posts.findIndex(v => v.id === action.data);\r\n            draft.me.Posts.splice(postIndex, 1);\r\n            break;\r\n            /* return {\r\n              ...state,\r\n              me: {\r\n                ...state.me,\r\n                Posts: state.me.Posts.filter(v => v.id != action.data),\r\n              }\r\n            }; */\r\n        }\r\n        default: {\r\n            break;\r\n            /* return {\r\n                ...state,\r\n            }; */\r\n        }\r\n      }\r\n    });\r\n};\r\nexport default reducer;\r\n\r\n\r\n/* switch (action.type) {\r\n  case LOG_IN_REQUEST: {\r\n      return {\r\n          ...state,\r\n          isLoggingIn: true,\r\n          isLoggedIn: false,\r\n          logInErrorReason: '',\r\n      };\r\n  }\r\n  case LOG_IN_SUCCESS: {\r\n      return {\r\n          ...state,\r\n          isLoggingIn: false,\r\n          me: action.data,\r\n          isLoading: false,\r\n      };\r\n  }\r\n  case LOG_IN_FAILURE: {\r\n      return {\r\n          ...state,\r\n          isLoggingIn: false,\r\n          logInErrorReason: action.error,\r\n          me: null,\r\n      };\r\n  }\r\n  case LOG_OUT_REQUEST: {\r\n      return {\r\n        ...state,\r\n        isLoggingOut: true,\r\n      };\r\n  }\r\n  case LOG_OUT_SUCCESS: {\r\n      return {\r\n        ...state,\r\n        isLoggingOut: false,\r\n        me: null,\r\n      };\r\n  }\r\n  case SIGN_UP_REQUEST: {\r\n      return {\r\n          ...state,\r\n          isSigningUp: true,\r\n          isSignedUp: false,\r\n          signUpErrorReason: '',\r\n      };\r\n  }\r\n  case SIGN_UP_SUCCESS: {\r\n      alert('회원가입 성공!'); \r\n      return {\r\n          isSigningUp: false,\r\n          isSignedUp: true,\r\n      };\r\n  }\r\n  case SIGN_UP_FAILURE: {\r\n      return {\r\n          isSigningUp: false,\r\n          signUpErrorReason: action.error,\r\n      };\r\n  }\r\n  case LOAD_USER_REQUEST: {\r\n      return {\r\n        ...state,\r\n      };\r\n  }\r\n  case LOAD_USER_SUCCESS: {\r\n      if (action.isThisMe) {    // (sagas/user.js)의 function*loadUser() 에서 put으로 넘겨준것이 바로, action.me\r\n          return {\r\n              ...state,\r\n              me: action.data,\r\n            };\r\n      } else {\r\n          return {\r\n              ...state,\r\n              userInfo: action.data,\r\n            };\r\n      }\r\n      \r\n  }\r\n  case LOAD_USER_FAILURE: {\r\n      return {\r\n        ...state,\r\n      };\r\n  }\r\n  case FOLLOW_USER_REQUEST: {\r\n      return {\r\n        ...state,\r\n      };\r\n  }\r\n  case FOLLOW_USER_SUCCESS: {\r\n      return {\r\n        ...state,\r\n        me: {\r\n          ...state.me,\r\n          Followings: [{ id: action.data }, ...state.me.Followings],\r\n        },\r\n      };\r\n  }\r\n  case FOLLOW_USER_FAILURE: {\r\n      return {\r\n        ...state,\r\n      };\r\n  }\r\n  case UNFOLLOW_USER_REQUEST: {\r\n      return {\r\n        ...state,\r\n      };\r\n  }\r\n  case UNFOLLOW_USER_SUCCESS: {\r\n      return {\r\n        ...state,\r\n        me: {\r\n          ...state.me,\r\n          Followings: state.me.Followings.filter(v => v.id !== action.data),\r\n        },\r\n        followingList: state.followingList.filter(v => v.id !== action.data),\r\n      };\r\n  }\r\n  case UNFOLLOW_USER_FAILURE: {\r\n      return {\r\n        ...state,\r\n      };\r\n  }\r\n  case ADD_POST_TO_ME: {\r\n      return {\r\n        ...state,\r\n        me: {\r\n          ...state.me,\r\n          Posts: [{ id: action.data }, ...state.me.Posts],    // 작성한 게시글을, user정보안의 게시글 정보에 넣어주기 \r\n        },\r\n      };\r\n  }\r\n  case LOAD_FOLLOWERS_REQUEST: {\r\n      return {\r\n        ...state,\r\n        //hasMoreFollower: action.offset ? state.hasMoreFollower : true,  // 처음화면 일때는, offset은 0 이므로, false취급을 받아서 true로 넘어간다.(=더보기 버튼을 보여준다.)                                                         \r\n                                                                          // (처음화면일때 offset이 0인것은, router.get('/:id/followers'... 에서 확인가능)      \r\n                                                                          // 여기 없어도 됨 (내 Q&A 답글)\r\n      };\r\n  }\r\n  case LOAD_FOLLOWERS_SUCCESS: {\r\n      return {\r\n        ...state,\r\n        followerList: state.followerList.concat(action.data), // 기존것을 덮어쓰지 말고, 기존것에 추가 \r\n        hasMoreFollower: action.data.length === 3,            // 방금 로드된 팔로워가 1명 또는 2명이라면, 더보기 버튼을 보여줄 필요가 없다.\r\n                                                              // 방금 로드된 팔로워가 3명일때만, 더보기 버튼을 보여줄 필요가 있다.\r\n      };\r\n  }\r\n  case LOAD_FOLLOWERS_FAILURE: {\r\n      return {\r\n        ...state,\r\n      };\r\n  }\r\n  case LOAD_FOLLOWINGS_REQUEST: {\r\n      return {\r\n        ...state,\r\n        //hasMoreFollowing: action.offset ? state.hasMoreFollowing : true,  // 처음화면 일때는, offset은 0 이므로, false취급을 받아서 true로 넘어간다.(=더보기 버튼을 보여준다.)                                                         \r\n                                                                            // (처음화면일때 offset이 0인것은, router.get('/:id/followings'... 에서 확인가능) \r\n                                                                            // 여기 없어도 됨 (내 Q&A 답글)      \r\n      };\r\n  }\r\n  case LOAD_FOLLOWINGS_SUCCESS: {\r\n      return {\r\n        ...state,\r\n        followingList: state.followingList.concat(action.data),   // 기존것을 덮어쓰지 말고, 기존것에 추가\r\n        hasMoreFollowing: action.data.length === 3,               // 방금 로드된 팔로워가 1명 또는 2명이라면, 더보기 버튼을 보여줄 필요가 없다.\r\n                                                                  // 방금 로드된 팔로워가 3명일때만(=limit은 3이었음), 더보기 버튼을 보여줄 필요가 있다. \r\n      };\r\n  }\r\n  case LOAD_FOLLOWINGS_FAILURE: {\r\n      return {\r\n        ...state,\r\n      };\r\n  }\r\n  case REMOVE_FOLLOWER_REQUEST: {\r\n      return {\r\n        ...state,\r\n      };\r\n  }\r\n  case REMOVE_FOLLOWER_SUCCESS: {\r\n      return {\r\n        ...state,\r\n        me: {\r\n          ...state.me,\r\n          Followers: state.me.Followers.filter(v => v.id !== action.data),\r\n        },\r\n        followerList: state.followerList.filter(v => v.id !== action.data),\r\n      };\r\n  }\r\n  case REMOVE_FOLLOWER_FAILURE: {\r\n      return {\r\n        ...state,\r\n      };\r\n  }\r\n  case EDIT_NICKNAME_REQUEST: {\r\n    return {\r\n      ...state,\r\n      isEditingNickname: true,\r\n      editNicknameErrorReason: '',\r\n    };\r\n  }\r\n  case EDIT_NICKNAME_SUCCESS: {\r\n    return {\r\n      ...state,\r\n      isEditingNickname: false,\r\n      me: {\r\n        ...state.me,\r\n        nickname: action.data,\r\n      },\r\n    };\r\n  }\r\n  case EDIT_NICKNAME_FAILURE: {\r\n    return {\r\n      ...state,\r\n      isEditingNickname: false,\r\n      editNicknameErrorReason: action.error,\r\n    };\r\n  }\r\n  case REMOVE_POST_OF_ME: {\r\n    //const index = draft.me.Posts.findIndex(v => v.id === action.data);\r\n    //draft.me.Posts.splice(index, 1);\r\n    //break;\r\n    return {\r\n      ...state,\r\n      me: {\r\n        ...state.me,\r\n        Posts: state.me.Posts.filter(v => v.id != action.data),\r\n      }\r\n    };\r\n  }\r\n  default: {\r\n      return {\r\n          ...state,\r\n      };\r\n  }\r\n} */","module.exports = require(\"core-js/library/fn/array/is-array\");","module.exports = require(\"immer\");","module.exports = require(\"core-js/library/fn/get-iterator\");","module.exports = require(\"react\");","import _Array$isArray from \"../../core-js/array/is-array\";\nexport default function _arrayWithHoles(arr) {\n  if (_Array$isArray(arr)) return arr;\n}","import _getIterator from \"../../core-js/get-iterator\";\nexport default function _iterableToArrayLimit(arr, i) {\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = _getIterator(arr), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");\n}","import arrayWithHoles from \"./arrayWithHoles\";\nimport iterableToArrayLimit from \"./iterableToArrayLimit\";\nimport nonIterableRest from \"./nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || nonIterableRest();\n}","module.exports = require(\"react-redux\");","module.exports = require(\"core-js/library/fn/object/define-properties\");","module.exports = require(\"core-js/library/fn/array/is-array\");","import _Object$defineProperties from \"../../core-js/object/define-properties\";\nimport _Object$freeze from \"../../core-js/object/freeze\";\nexport default function _taggedTemplateLiteral(strings, raw) {\n  if (!raw) {\n    raw = strings.slice(0);\n  }\n\n  return _Object$freeze(_Object$defineProperties(strings, {\n    raw: {\n      value: _Object$freeze(raw)\n    }\n  }));\n}","import React, { useState, useCallback, useEffect } from 'react';\r\nimport { Form, Input, Checkbox, Button } from 'antd';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport Router from 'next/router';\r\nimport styled from 'styled-components';\r\n\r\nimport { SIGN_UP_REQUEST } from '../reducers/user';\r\n\r\nconst SignUpErrorMsg = styled.div`\r\n    color: red;\r\n`;\r\n\r\n// 중복되는 로직의 이벤트 처리 -> 커스텀 훅\r\n// export해놓으면 다른곳에서 모듈처럼 사용가능 !\r\nexport const useInput = (initValue = null) => {     \r\n    const [value, setter] = useState(initValue);\r\n    const handler = useCallback((e) =>{\r\n        setter(e.target.value);\r\n    }, []);\r\n    return [value, handler];\r\n};\r\n\r\nconst Signup = () => {\r\n    const [passwordCheck, setPasswordCheck] = useState('');\r\n    const [term, setTerm] = useState(false);\r\n    const [passwordError, setPasswordError] = useState(false);\r\n    const [termError, setTermError] = useState(false);\r\n    \r\n\r\n    const [id, onChangeId] = useInput('');\r\n    const [nick, onChangeNick] = useInput('');\r\n    const [password, onChangePassword] = useInput('');\r\n\r\n    const dispatch = useDispatch();\r\n    const { isSigningUp, me } = useSelector(state => state.user);\r\n\r\n    // 회원가입 창에서 로그인 해버리는 경우, 메인페이지로 redirect\r\n    useEffect(() => {\r\n        if (me) {\r\n            alert('로그인 되었습니다. 메인페이지로 이동합니다.')\r\n            Router.push('/');\r\n        }\r\n    }, [me && me.id]);\r\n\r\n    const onSubmit = useCallback((e) =>{\r\n        e.preventDefault();\r\n        if (password !== passwordCheck) {\r\n            return setPasswordError(true);\r\n        }\r\n        if (!term) {\r\n            return setTermError(true);\r\n        }\r\n        return dispatch({   // front/sagas/user.js의 sighUp함수의 매개변수인 aciton에 data객체가 담긴다.\r\n            type: SIGN_UP_REQUEST,\r\n            data: {\r\n                userId: id,\r\n                password,\r\n                nickname: nick,\r\n            },\r\n        });\r\n    }, [id, nick, password, passwordCheck, term]);\r\n\r\n    const onChangePasswordCheck = useCallback((e) => {\r\n        setPasswordError(e.target.value !== password); // 비밀번호 확인 칠때마다, 비밀번호와 같은지 확인\r\n        setPasswordCheck(e.target.value);\r\n    }, [password]);\r\n\r\n    const onChangeTerm = useCallback((e) => {\r\n        setTermError(false);\r\n        setTerm(e.target.checked);\r\n    }, []);\r\n\r\n    if (me) {\r\n        return null;    // 내가 로그인한 상태면, 회원가입 화면을 아예 안보여준다. \r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Form onSubmit={onSubmit} style={{ padding: 50 }}>\r\n                <div>\r\n                    <label htmlFor=\"user-id\">아이디</label>\r\n                    <br />\r\n                    <Input name=\"user-id\" value={id} required onChange={onChangeId} />\r\n                </div>\r\n                <div>\r\n                    <label htmlFor=\"user-nick\">닉네임</label>\r\n                    <br />\r\n                    <Input name=\"user-nick\" value={nick} required onChange={onChangeNick} />\r\n                </div>\r\n                <div>\r\n                    <label htmlFor=\"user-password\">비밀번호</label>\r\n                    <br />\r\n                    <Input name=\"user-password\" type=\"password\" value={password} required onChange={onChangePassword} />\r\n                </div>\r\n                <div>\r\n                    <label htmlFor=\"user-password-check\">비밀번호 확인</label>\r\n                    <br />\r\n                    <Input name=\"user-password-check\" type=\"password\" value={passwordCheck} required onChange={onChangePasswordCheck} />\r\n                    {passwordError && <SignUpErrorMsg>비밀번호가 일치하지 않습니다.</SignUpErrorMsg>}\r\n                </div>\r\n                <div>\r\n                    <Checkbox name=\"user-term\" checked={term} onChange={onChangeTerm}>\r\n                        OOO 약관에 동의합니다.\r\n                    </Checkbox>\r\n                    {termError && <SignUpErrorMsg>약관에 동의하셔야 합니다.</SignUpErrorMsg>}\r\n                </div>\r\n                <div style={{ maringTop: 10 }}>\r\n                    <Button type=\"primary\" htmlType=\"submit\" loading={isSigningUp}>가입하기</Button>\r\n                </div>\r\n            </Form>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Signup;"],"sourceRoot":""}