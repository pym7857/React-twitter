{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./node_modules/@babel/runtime-corejs2/helpers/getPrototypeOf.js","webpack:///external \"core-js/library/fn/object/get-prototype-of\"","webpack:///./node_modules/@babel/runtime-corejs2/helpers/classCallCheck.js","webpack:///./containers/LoginForm.js","webpack:///./containers/UserProfile.js","webpack:///./components/AppLayout.js","webpack:///./sagas/user.js","webpack:///./sagas/post.js","webpack:///./sagas/index.js","webpack:///./reducers/index.js","webpack:///./pages/_app.js","webpack:///external \"redux-saga\"","webpack:///external \"next/router\"","webpack:///./node_modules/next/app.js","webpack:///./node_modules/@babel/runtime-corejs2/core-js/json/stringify.js","webpack:///./node_modules/next/dist/pages/_app.js","webpack:///./node_modules/@babel/runtime-corejs2/core-js/object/get-prototype-of.js","webpack:///external \"antd\"","webpack:///external \"core-js/library/fn/get-iterator\"","webpack:///external \"next-redux-wrapper\"","webpack:///./node_modules/@babel/runtime-corejs2/helpers/assertThisInitialized.js","webpack:///./node_modules/@babel/runtime-corejs2/helpers/interopRequireDefault.js","webpack:///./reducers/user.js","webpack:///./node_modules/@babel/runtime-corejs2/helpers/inherits.js","webpack:///./node_modules/@babel/runtime-corejs2/helpers/esm/asyncToGenerator.js","webpack:///external \"core-js/library/fn/array/is-array\"","webpack:///external \"redux-saga/effects\"","webpack:///./node_modules/@babel/runtime-corejs2/core-js/object/create.js","webpack:///external \"immer\"","webpack:///./node_modules/@babel/runtime-corejs2/core-js/object/set-prototype-of.js","webpack:///external \"core-js/library/fn/object/define-property\"","webpack:///./node_modules/@babel/runtime-corejs2/core-js/object/assign.js","webpack:///./node_modules/@babel/runtime-corejs2/helpers/createClass.js","webpack:///external \"core-js/library/fn/object/set-prototype-of\"","webpack:///./node_modules/@babel/runtime-corejs2/core-js/symbol/iterator.js","webpack:///./node_modules/@babel/runtime-corejs2/core-js/get-iterator.js","webpack:///./node_modules/next/link.js","webpack:///./node_modules/@babel/runtime-corejs2/core-js/symbol.js","webpack:///./node_modules/@babel/runtime-corejs2/helpers/possibleConstructorReturn.js","webpack:///external \"core-js/library/fn/promise\"","webpack:///external \"url\"","webpack:///external \"react\"","webpack:///./node_modules/next/dist/client/link.js","webpack:///external \"regenerator-runtime\"","webpack:///external \"core-js/library/fn/object/assign\"","webpack:///./node_modules/@babel/runtime-corejs2/helpers/esm/arrayWithHoles.js","webpack:///./node_modules/@babel/runtime-corejs2/helpers/esm/iterableToArrayLimit.js","webpack:///./node_modules/@babel/runtime-corejs2/helpers/esm/nonIterableRest.js","webpack:///./node_modules/@babel/runtime-corejs2/helpers/esm/slicedToArray.js","webpack:///./node_modules/@babel/runtime-corejs2/core-js/promise.js","webpack:///external \"core-js/library/fn/json/stringify\"","webpack:///external \"core-js/library/fn/symbol/iterator\"","webpack:///external \"react-redux\"","webpack:///./node_modules/@babel/runtime-corejs2/core-js/object/define-property.js","webpack:///./node_modules/@babel/runtime-corejs2/helpers/typeof.js","webpack:///./node_modules/@babel/runtime-corejs2/regenerator/index.js","webpack:///external \"core-js/library/fn/object/create\"","webpack:///./reducers/post.js","webpack:///./node_modules/@babel/runtime-corejs2/core-js/array/is-array.js","webpack:///external \"next-server/dist/lib/utils\"","webpack:///external \"next-redux-saga\"","webpack:///external \"redux\"","webpack:///external \"prop-types\"","webpack:///./pages/signup.js","webpack:///./node_modules/@babel/runtime-corejs2/helpers/setPrototypeOf.js","webpack:///external \"core-js/library/fn/symbol\"","webpack:///external \"next/head\"","webpack:///external \"react-helmet\"","webpack:///external \"axios\""],"names":["LoginForm","useInput","id","onChangeId","password","onChangePassword","useSelector","state","user","isLoggingIn","dispatch","useDispatch","onSubmitForm","useCallback","e","preventDefault","type","LOG_IN_REQUEST","data","userId","padding","marginTop","UserProfile","me","onLogout","LOG_OUT_REQUEST","nickname","AppLayout","children","onSearch","value","Router","push","pathname","query","tag","verticalAlign","login","watchLogin","signUp","watchSignUp","logOut","watchLogOut","loadUser","watchLoadUser","follow","watchFollow","unfollow","watchUnfollow","loadFollowers","watchLoadFollowers","loadFollowings","watchLoadFollowings","removeFollower","watchRemoveFollower","editNickname","watchEditNickname","userSaga","loginAPI","loginData","axios","post","withCredentials","action","call","result","put","LOG_IN_SUCCESS","console","error","LOG_IN_FAILURE","takeEvery","signUpAPI","signUpData","SIGN_UP_SUCCESS","SIGN_UP_FAILURE","SIGN_UP_REQUEST","logOutAPI","LOG_OUT_SUCCESS","LOG_OUT_FAILURE","loadUserAPI","get","LOAD_USER_SUCCESS","isThisMe","LOAD_USER_FAILURE","LOAD_USER_REQUEST","followAPI","FOLLOW_USER_SUCCESS","FOLLOW_USER_FAILURE","FOLLOW_USER_REQUEST","unfollowAPI","delete","UNFOLLOW_USER_SUCCESS","UNFOLLOW_USER_FAILURE","UNFOLLOW_USER_REQUEST","loadFollowersAPI","offset","limit","LOAD_FOLLOWERS_SUCCESS","LOAD_FOLLOWERS_FAILURE","LOAD_FOLLOWERS_REQUEST","loadFollowingsAPI","LOAD_FOLLOWINGS_SUCCESS","LOAD_FOLLOWINGS_FAILURE","LOAD_FOLLOWINGS_REQUEST","removeFollowerAPI","REMOVE_FOLLOWER_SUCCESS","REMOVE_FOLLOWER_FAILURE","REMOVE_FOLLOWER_REQUEST","editNicknameAPI","patch","EDIT_NICKNAME_SUCCESS","EDIT_NICKNAME_FAILURE","EDIT_NICKNAME_REQUEST","all","fork","loadMainPosts","watchLoadMainPosts","addPost","watchAddPost","addComment","watchAddComment","loadHashtagPosts","watchLoadHashtagPosts","loadComments","watchLoadComments","loadUserPosts","watchLoadUserPosts","uploadImages","watchUploadImages","likePost","watchLikePost","unlikePost","watchUnlikePost","retweet","watchRetweet","removePost","watchRemovePost","loadPost","watchLoadPost","postSaga","loadMainPostsAPI","lastId","LOAD_MAIN_POSTS_SUCCESS","LOAD_MAIN_POSTS_FAILURE","throttle","LOAD_MAIN_POSTS_REQUEST","addPostAPI","formData","ADD_POST_SUCCESS","ADD_POST_TO_ME","ADD_POST_FAILURE","takeLatest","ADD_POST_REQUEST","addCommentAPI","postId","content","ADD_COMMENT_SUCCESS","comment","ADD_COMMENT_FAILURE","ADD_COMMENT_REQUEST","loadHashtagPostsAPI","encodeURIComponent","LOAD_HASHTAG_POSTS_SUCCESS","LOAD_HASHTAG_POSTS_FAILURE","LOAD_HASHTAG_POSTS_REQUEST","loadCommentsAPI","LOAD_COMMENTS_SUCCESS","comments","LOAD_COMMENTS_FAILURE","LOAD_COMMENTS_REQUEST","loadUserPostsAPI","LOAD_USER_POSTS_SUCCESS","LOAD_USER_POSTS_FAILURE","LOAD_USER_POSTS_REQUEST","uploadImagesAPI","UPLOAD_IMAGES_SUCCESS","UPLOAD_IMAGES_FAILURE","UPLOAD_IMAGES_REQUEST","likePostAPI","LIKE_POST_SUCCESS","LIKE_POST_FAILURE","LIKE_POST_REQUEST","unlikePostAPI","UNLIKE_POST_SUCCESS","UNLIKE_POST_FAILURE","UNLIKE_POST_REQUEST","retweetAPI","RETWEET_SUCCESS","RETWEET_FAILURE","dir","alert","response","RETWEET_REQUEST","removePostAPI","REMOVE_POST_SUCCESS","REMOVE_POST_OF_ME","REMOVE_POST_FAILURE","REMOVE_POST_REQUEST","loadPostAPI","LOAD_POST_SUCCESS","LOAD_POST_FAILURE","LOAD_POST_REQUEST","rootSaga","defaults","baseURL","rootReducer","combineReducers","NodeBird","Component","store","pageProps","lang","charset","name","property","rel","href","getInitialProps","context","ctx","cookie","isServer","req","headers","Cookie","getState","configureStore","initialState","options","sagaMiddleware","createSagaMiddleware","middlewares","enhancer","process","compose","applyMiddleware","createStore","reducer","sagaTask","run","withRedux","withReduxSaga","isLoggingOut","isLogginIn","logInErrorReason","signedUp","isSignedUp","signUpErrorReason","followingList","followerList","userInfo","isEditingNickname","editNicknameErrorReason","hasMoreFollower","hasMoreFollowing","produce","draft","isLoggedIn","isSigningUp","Followings","unshift","userIndex1","findIndex","v","splice","userIndex2","FollowingList","Posts","forEach","f","length","Followers","postIndex","mainPosts","imagePaths","isAddingPost","addPostErrorReason","postAdded","isAddingComment","addCommentErrorReason","commentAdded","addLikeErrorReason","hasMorePost","singlePost","REMOVE_IMAGE","p","index","i","Comments","Likers","likerIndex","initValue","useState","setter","handler","target","Signup","passwordCheck","setPasswordCheck","term","setTerm","passwordError","setPasswordError","termError","setTermError","nick","onChangeNick","useEffect","onSubmit","onChangePasswordCheck","onChangeTerm","checked","color","maringTop"],"mappings":"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CAAC,MAAsD;;AAE3F,sCAAsC,mBAAO,CAAC,MAAwC;;AAEtF,qCAAqC,mBAAO,CAAC,MAA8C;;AAE3F,8CAA8C,mBAAO,CAAC,MAA+C;;AAErG,2CAA2C,mBAAO,CAAC,MAA4C;;AAE/F,yDAAyD,mBAAO,CAAC,MAA0D;;AAE3H,8CAA8C,mBAAO,CAAC,MAA+C;;AAErG,wCAAwC,mBAAO,CAAC,MAAyC;;AAEzF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,CAAC;;AAED,2BAA2B,mBAAO,CAAC,MAAO;;AAE1C,mCAAmC,mBAAO,CAAC,MAAY;;AAEvD,cAAc,mBAAO,CAAC,MAA4B;;AAElD,eAAe,mBAAO,CAAC,MAAa;;AAEpC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4HAA4H;AAC5H;AACA,OAAO;AACP;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,OAAO;AACP;AACA;AACA;AACA,GAAG;AACH;AACA,CAAC;;AAED;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB;AACtB;;AAEA;AACA;AACA,OAAO;AACP;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA,CAAC;;AAED;AACA;AACA,MAAM,KAAqC,EAAE,EAE1C;AACH,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA,KAAK;AAC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A;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,uHAAuH;AACvH;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,yBAAyB;;AAEzB;;AAEA;AACA;AACA,OAAO;;;AAGP;AACA;AACA,OAAO;AACP;;AAEA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA,OAAO;AACP;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,gDAAgD;;AAEhD;;AAEA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;;AAEA;AACA;AACA,oCAAoC;;;AAGpC;AACA;AACA,OAAO;;;AAGP;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,QAAQ;AACR;;AAEA;AACA;AACA,OAAO;AACP;;;AAGA,UAAU,IAAwC;AAClD;AACA;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA,CAAC;;AAED,IAAI,KAAsC,EAAE,oBAuB3C;;AAED,uB;;;;;;;ACjPA,gD;;;;;;;ACAA,6D;;;;;;;;;;;;;;ACA0D;AAC3C;AACf,MAAM,kBAAc;AACpB,C;;;;;;ACHsD;AACvC;AACf;AACA;AACA;AACA;;AAEA;AACA,kBAAkB,sBAAY,UAAU,+BAA+B;AACvE;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA,C;;ACzBe;AACf;AACA,C;;ACFA;AAA8C;AACY;AACV;AACjC;AACf,SAAS,eAAc,SAAS,qBAAoB,YAAY,gBAAe;AAC/E,C;;;;;;;ACLA,iBAAiB,mBAAO,CAAC,MAA4B,E;;;;;;;ACArD,8D;;;;;;;ACAA,+D;;;;;;;ACAA,wC;;;;;;;ACAA,iBAAiB,mBAAO,CAAC,MAA2C,E;;;;;;;ACApE,uBAAuB,mBAAO,CAAC,MAA4B;;AAE3D,cAAc,mBAAO,CAAC,MAAmB;;AAEzC,wBAAwB,6EAA6E,oCAAoC,mBAAmB,GAAG,EAAE,OAAO,oCAAoC,iIAAiI,GAAG,EAAE,sBAAsB;;AAExW;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;;AAEA,yB;;;;;;;ACpBA,iBAAiB,mBAAO,CAAC,MAAqB;;;;;;;;ACA9C,6D;;;;;;;;ACAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;;AACO,IAAMV,YAAY,GAAG;AACxB8C,WAAS,EAAE,EADa;AAExBC,YAAU,EAAE,EAFY;AAEI;AAE5BC,cAAY,EAAE,KAJU;AAII;AAC5BC,oBAAkB,EAAE,EALI;AAKI;AAC5BC,WAAS,EAAE,KANa;AAMI;AAE5BC,iBAAe,EAAE,KARO;AAQI;AAC5BC,uBAAqB,EAAE,EATC;AASI;AAC5BC,cAAY,EAAE,KAVU;AAUI;AAE5BC,oBAAkB,EAAE,EAZI;AAcxBC,aAAW,EAAE,KAdW;AAcI;AAC5BC,YAAU,EAAE;AAfY,CAArB;AAkBP;;AACO,IAAM1I,uBAAuB,GAAG,yBAAhC,C,CAAiE;;AACjE,IAAMH,uBAAuB,GAAG,yBAAhC;AACA,IAAMC,uBAAuB,GAAG,yBAAhC;AAEA,IAAMqB,0BAA0B,GAAG,4BAAnC,C,CAAiE;;AACjE,IAAMF,0BAA0B,GAAG,4BAAnC;AACA,IAAMC,0BAA0B,GAAG,4BAAnC;AAEA,IAAMU,uBAAuB,GAAG,yBAAhC,C,CAAiE;;AACjE,IAAMF,uBAAuB,GAAG,yBAAhC;AACA,IAAMC,uBAAuB,GAAG,yBAAhC;AAEA,IAAMK,qBAAqB,GAAG,uBAA9B,C,CAAiE;;AACjE,IAAMF,qBAAqB,GAAG,uBAA9B;AACA,IAAMC,qBAAqB,GAAG,uBAA9B;AAEA,IAAMxB,gBAAgB,GAAG,kBAAzB,C,CAAiE;;AACjE,IAAMJ,gBAAgB,GAAG,kBAAzB;AACA,IAAME,gBAAgB,GAAG,kBAAzB;AAEA,IAAM+B,iBAAiB,GAAG,mBAA1B,C,CAAiE;;AACjE,IAAMF,iBAAiB,GAAG,mBAA1B;AACA,IAAMC,iBAAiB,GAAG,mBAA1B;AAEA,IAAMK,mBAAmB,GAAG,qBAA5B,C,CAAiE;;AACjE,IAAMF,mBAAmB,GAAG,qBAA5B;AACA,IAAMC,mBAAmB,GAAG,qBAA5B;AAEA,IAAMzB,mBAAmB,GAAG,qBAA5B;AACA,IAAMH,mBAAmB,GAAG,qBAA5B;AACA,IAAME,mBAAmB,GAAG,qBAA5B;AAEA,IAAMW,qBAAqB,GAAG,uBAA9B,C,CAAiE;;AACjE,IAAMH,qBAAqB,GAAG,uBAA9B;AACA,IAAME,qBAAqB,GAAG,uBAA9B;AAEA,IAAMwB,eAAe,GAAG,iBAAxB,C,CAAiE;;AACjE,IAAML,eAAe,GAAG,iBAAxB;AACA,IAAMC,eAAe,GAAG,iBAAxB;AAEA,IAAMS,mBAAmB,GAAG,qBAA5B,C,CAAiE;;AACjE,IAAMH,mBAAmB,GAAG,qBAA5B;AACA,IAAME,mBAAmB,GAAG,qBAA5B;AAEA,IAAMwF,YAAY,GAAG,cAArB;AAEA,IAAMnF,iBAAiB,GAAG,mBAA1B,C,CAAyD;;AACzD,IAAMF,iBAAiB,GAAG,mBAA1B;AACA,IAAMC,iBAAiB,GAAG,mBAA1B;AAEP;AACA;;AAEA;;AACA,IAAMqC,OAAO,GAAG,SAAVA,OAAU,GAAkC;AAAA,MAAjCvO,KAAiC,uEAAzB6N,YAAyB;AAAA,MAAXrK,MAAW;;AAC9C;AACA,SAAOiM,4CAAO,CAACzP,KAAD,EAAQ,UAAC0P,KAAD,EAAW;AAAO;AACtC,YAAQlM,MAAM,CAAC/C,IAAf;AACE,WAAKkK,qBAAL;AAA4B;AACxB;AACA;;;AAGH;;AACD,WAAKF,qBAAL;AAA4B;AACxBjH,gBAAM,CAAC7C,IAAP,CAAY2P,OAAZ,CAAoB,UAACiB,CAAD,EAAO;AAAK;AAC9B7B,iBAAK,CAACkB,UAAN,CAAiBnP,IAAjB,CAAsB8P,CAAtB;AACD,WAFD;AAGA;AACA;;;;AAIH;;AACD,WAAK7G,qBAAL;AAA4B;AACxB;AACA;;;AAGH;;AACD,WAAK4G,YAAL;AAAmB;AACf,cAAME,KAAK,GAAG9B,KAAK,CAACkB,UAAN,CAAiBZ,SAAjB,CAA2B,UAACC,CAAD,EAAIwB,CAAJ;AAAA,mBAAUA,CAAC,KAAKjO,MAAM,CAACgO,KAAvB;AAAA,WAA3B,CAAd;AACA9B,eAAK,CAACkB,UAAN,CAAiBV,MAAjB,CAAwBsB,KAAxB,EAA+B,CAA/B;AACA;AACA;;;;AAIH;;AACD,WAAK7I,uBAAL;AACA,WAAKmB,0BAAL;AACA,WAAKS,uBAAL;AAA8B;AAC1BmF,eAAK,CAACiB,SAAN,GAAkB,CAACnN,MAAM,CAAC+E,MAAR,GAAiB,EAAjB,GAAsBmH,KAAK,CAACiB,SAA9C,CAD0B,CACoC;;AAC9DjB,eAAK,CAAC0B,WAAN,GAAoB5N,MAAM,CAAC+E,MAAP,GAAgBmH,KAAK,CAAC0B,WAAtB,GAAoC,IAAxD;AACA;AACA;;;;;;AAMH;;AACD,WAAK5I,uBAAL;AACA,WAAKoB,0BAAL;AACA,WAAKS,uBAAL;AAA8B;AAC1B7G,gBAAM,CAAC7C,IAAP,CAAY2P,OAAZ,CAAoB,UAACiB,CAAD,EAAO;AACzB7B,iBAAK,CAACiB,SAAN,CAAgBlP,IAAhB,CAAqB8P,CAArB;AACD,WAFD;AAGA;AACA;;;;;AAKH;;AACD,WAAK9I,uBAAL;AACA,WAAKoB,0BAAL;AACA,WAAKS,uBAAL;AAA8B;AAC1B;AACA;;;AAGH;;AACD,WAAKpB,gBAAL;AAAuB;AACnBwG,eAAK,CAACmB,YAAN,GAAqB,IAArB;AACAnB,eAAK,CAACoB,kBAAN,GAA2B,EAA3B;AACApB,eAAK,CAACqB,SAAN,GAAkB,KAAlB;AACA;AACA;;;;;;AAMH;;AACD,WAAKjI,gBAAL;AAAuB;AACnB4G,eAAK,CAACmB,YAAN,GAAqB,KAArB;AACAnB,eAAK,CAACiB,SAAN,CAAgBb,OAAhB,CAAwBtM,MAAM,CAAC7C,IAA/B,EAFmB,CAEqB;;AACxC+O,eAAK,CAACqB,SAAN,GAAkB,IAAlB;AACArB,eAAK,CAACkB,UAAN,GAAmB,EAAnB;AACA;AACA;;;;;;;AAOH;;AACD,WAAK5H,gBAAL;AAAuB;AACnB0G,eAAK,CAACmB,YAAN,GAAqB,KAArB;AACAnB,eAAK,CAACoB,kBAAN,GAA2BtN,MAAM,CAACM,KAAlC;AACA;AACA;;;;;AAKH;;AACD,WAAK2F,mBAAL;AAA0B;AACtBiG,eAAK,CAACsB,eAAN,GAAwB,IAAxB;AACAtB,eAAK,CAACuB,qBAAN,GAA8B,EAA9B;AACAvB,eAAK,CAACwB,YAAN,GAAqB,KAArB;AACA;AACA;;;;;;AAOH;;AACD,WAAK5H,mBAAL;AAA0B;AACtB,cAAMoH,SAAS,GAAGhB,KAAK,CAACiB,SAAN,CAAgBX,SAAhB,CAA0B,UAAAC,CAAC;AAAA,mBAAIA,CAAC,CAACtQ,EAAF,KAAS6D,MAAM,CAAC7C,IAAP,CAAYyI,MAAzB;AAAA,WAA3B,CAAlB;AACAsG,eAAK,CAACiB,SAAN,CAAgBD,SAAhB,EAA2BgB,QAA3B,CAAoCjQ,IAApC,CAAyC+B,MAAM,CAAC7C,IAAP,CAAY4I,OAArD;AACAmG,eAAK,CAACsB,eAAN,GAAwB,KAAxB;AACAtB,eAAK,CAACwB,YAAN,GAAqB,IAArB;AACA;AACA;;;;;;;;;;;AAWH;;AACD,WAAK1H,mBAAL;AAA0B;AACtBkG,eAAK,CAACsB,eAAN,GAAwB,KAAxB;AACAtB,eAAK,CAACuB,qBAAN,GAA8BzN,MAAM,CAACM,KAArC;AACA;AACA;;;;;AAKH;;AACD,WAAKkG,qBAAL;AAA4B;AACxB,cAAM0G,UAAS,GAAGhB,KAAK,CAACiB,SAAN,CAAgBX,SAAhB,CAA0B,UAAAC,CAAC;AAAA,mBAAIA,CAAC,CAACtQ,EAAF,KAAS6D,MAAM,CAAC7C,IAAP,CAAYyI,MAAzB;AAAA,WAA3B,CAAlB;;AACAsG,eAAK,CAACiB,SAAN,CAAgBD,UAAhB,EAA2BgB,QAA3B,GAAsClO,MAAM,CAAC7C,IAAP,CAAYsJ,QAAlD;AACA;AACA;;;;;;;;;AASH;;AACD,WAAKc,iBAAL;AAAwB;AACpB;AACA;;;AAGH;;AACD,WAAKF,iBAAL;AAAwB;AACpB,cAAM6F,WAAS,GAAGhB,KAAK,CAACiB,SAAN,CAAgBX,SAAhB,CAA0B,UAAAC,CAAC;AAAA,mBAAIA,CAAC,CAACtQ,EAAF,KAAS6D,MAAM,CAAC7C,IAAP,CAAYyI,MAAzB;AAAA,WAA3B,CAAlB;;AACAsG,eAAK,CAACiB,SAAN,CAAgBD,WAAhB,EAA2BiB,MAA3B,CAAkC7B,OAAlC,CAA0C;AAAEnQ,cAAE,EAAE6D,MAAM,CAAC7C,IAAP,CAAYC;AAAlB,WAA1C,EAFoB,CAE8D;;;AAClF;AACA;;;;;;;;;AASH;;AACD,WAAKkK,iBAAL;AAAwB;AACpBU,eAAK,CAAC,SAAD,CAAL;AACAkE,eAAK,CAACyB,kBAAN,GAA2B3N,MAAM,CAACM,KAAlC;AACA;AACA;;;;AAIH;;AACD,WAAKqH,mBAAL;AAA0B;AACtB;AACA;;;AAGH;;AACD,WAAKF,mBAAL;AAA0B;AACtB,cAAMyF,WAAS,GAAGhB,KAAK,CAACiB,SAAN,CAAgBX,SAAhB,CAA0B,UAAAC,CAAC;AAAA,mBAAIA,CAAC,CAACtQ,EAAF,KAAS6D,MAAM,CAAC7C,IAAP,CAAYyI,MAAzB;AAAA,WAA3B,CAAlB;;AACA,cAAMwI,UAAU,GAAGlC,KAAK,CAACiB,SAAN,CAAgBD,WAAhB,EAA2BiB,MAA3B,CAAkC3B,SAAlC,CAA4C,UAAAC,CAAC;AAAA,mBAAIA,CAAC,CAACtQ,EAAF,KAAS6D,MAAM,CAAC7C,IAAP,CAAYC,MAAzB;AAAA,WAA7C,CAAnB;;AACA8O,eAAK,CAACiB,SAAN,CAAgBD,WAAhB,EAA2BiB,MAA3B,CAAkCzB,MAAlC,CAAyC0B,UAAzC,EAAqD,CAArD;;AACA;AACA;;;;;;;;;AASH;;AACD,WAAK1G,mBAAL;AAA0B;AACtB;AACA;;;AAGH;;AACD,WAAKQ,eAAL;AAAsB;AAClB;AACA;;;AAGH;;AACD,WAAKL,eAAL;AAAsB;AAClBqE,eAAK,CAACiB,SAAN,CAAgBb,OAAhB,CAAwBtM,MAAM,CAAC7C,IAA/B;AACA;AACA;;;;AAIH;;AACD,WAAK2K,eAAL;AAAsB;AAClB;AACA;;;AAGH;;AACD,WAAKS,mBAAL;AAA0B;AACtB;AACA;;;AAGH;;AACD,WAAKH,mBAAL;AAA0B;AACtB,cAAM4F,MAAK,GAAG9B,KAAK,CAACiB,SAAN,CAAgBX,SAAhB,CAA0B,UAAAC,CAAC;AAAA,mBAAIA,CAAC,CAACtQ,EAAF,KAAS6D,MAAM,CAAC7C,IAApB;AAAA,WAA3B,CAAd;;AACA+O,eAAK,CAACiB,SAAN,CAAgBT,MAAhB,CAAuBsB,MAAvB,EAA8B,CAA9B;AACA;AACA;;;;AAIH;;AACD,WAAK1F,mBAAL;AAA0B;AACtB;AACA;;;AAGH;;AACD,WAAKG,iBAAL;AAAwB;AACtByD,eAAK,CAAC2B,UAAN,GAAmB7N,MAAM,CAAC7C,IAA1B;AACA;AACD;;AACD;AAAS;AACL;AACA;;;AAGH;AAvQH;AAyQD,GA1Qa,CAAd;AA2QH,CA7QD;;AA8Qe4N,gEAAf;AAIA;;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC/VA,iBAAiB,mBAAO,CAAC,MAAmC,E;;;;;;;ACA5D,uD;;;;;;;ACAA,4C;;;;;;;ACAA,kC;;;;;;;ACAA,uC;;;;;;;;;;;;;;;;;;;;;ACAA;AACA;AACA;AACA;CAIA;AACA;;AACO,IAAM7O,QAAQ,GAAG,SAAXA,QAAW,GAAsB;AAAA,MAArBmS,SAAqB,uEAAT,IAAS;;AAAA,kBAClBC,sDAAQ,CAACD,SAAD,CADU;AAAA;AAAA,MACnCtQ,KADmC;AAAA,MAC5BwQ,MAD4B;;AAE1C,MAAMC,OAAO,GAAG1R,yDAAW,CAAC,UAACC,CAAD,EAAM;AAC9BwR,UAAM,CAACxR,CAAC,CAAC0R,MAAF,CAAS1Q,KAAV,CAAN;AACH,GAF0B,EAExB,EAFwB,CAA3B;AAGA,SAAO,CAACA,KAAD,EAAQyQ,OAAR,CAAP;AACH,CANM;;AAQP,IAAME,MAAM,GAAG,SAATA,MAAS,GAAM;AAAA,mBACyBJ,sDAAQ,CAAC,EAAD,CADjC;AAAA;AAAA,MACVK,aADU;AAAA,MACKC,gBADL;;AAAA,mBAEON,sDAAQ,CAAC,KAAD,CAFf;AAAA;AAAA,MAEVO,IAFU;AAAA,MAEJC,OAFI;;AAAA,mBAGyBR,sDAAQ,CAAC,KAAD,CAHjC;AAAA;AAAA,MAGVS,aAHU;AAAA,MAGKC,gBAHL;;AAAA,mBAIiBV,sDAAQ,CAAC,KAAD,CAJzB;AAAA;AAAA,MAIVW,SAJU;AAAA,MAICC,YAJD;;AAAA,kBAOQhT,QAAQ,CAAC,EAAD,CAPhB;AAAA;AAAA,MAOVC,EAPU;AAAA,MAONC,UAPM;;AAAA,mBAQYF,QAAQ,CAAC,EAAD,CARpB;AAAA;AAAA,MAQViT,IARU;AAAA,MAQJC,YARI;;AAAA,mBASoBlT,QAAQ,CAAC,EAAD,CAT5B;AAAA;AAAA,MASVG,QATU;AAAA,MASAC,gBATA;;AAWjB,MAAMK,QAAQ,GAAGC,+DAAW,EAA5B;;AAXiB,qBAYWL,+DAAW,CAAC,UAAAC,KAAK;AAAA,WAAIA,KAAK,CAACC,IAAV;AAAA,GAAN,CAZtB;AAAA,MAYT2P,WAZS,gBAYTA,WAZS;AAAA,MAYI5O,EAZJ,gBAYIA,EAZJ,EAcjB;;;AACA6R,yDAAS,CAAC,YAAM;AACZ,QAAI7R,EAAJ,EAAQ;AACJwK,WAAK,CAAC,0BAAD,CAAL;AACAhK,wDAAM,CAACC,IAAP,CAAY,GAAZ;AACH;AACJ,GALQ,EAKN,CAACT,EAAE,IAAIA,EAAE,CAACrB,EAAV,CALM,CAAT;AAOA,MAAMmT,QAAQ,GAAGxS,yDAAW,CAAC,UAACC,CAAD,EAAM;AAC/BA,KAAC,CAACC,cAAF;;AACA,QAAIX,QAAQ,KAAKsS,aAAjB,EAAgC;AAC5B,aAAOK,gBAAgB,CAAC,IAAD,CAAvB;AACH;;AACD,QAAI,CAACH,IAAL,EAAW;AACP,aAAOK,YAAY,CAAC,IAAD,CAAnB;AACH;;AACD,WAAOvS,QAAQ,CAAC;AAAI;AAChBM,UAAI,EAAE4D,sEADM;AAEZ1D,UAAI,EAAE;AACFC,cAAM,EAAEjB,EADN;AAEFE,gBAAQ,EAARA,QAFE;AAGFsB,gBAAQ,EAAEwR;AAHR;AAFM,KAAD,CAAf;AAQH,GAhB2B,EAgBzB,CAAChT,EAAD,EAAKgT,IAAL,EAAW9S,QAAX,EAAqBsS,aAArB,EAAoCE,IAApC,CAhByB,CAA5B;AAkBA,MAAMU,qBAAqB,GAAGzS,yDAAW,CAAC,UAACC,CAAD,EAAO;AAC7CiS,oBAAgB,CAACjS,CAAC,CAAC0R,MAAF,CAAS1Q,KAAT,KAAmB1B,QAApB,CAAhB,CAD6C,CACE;;AAC/CuS,oBAAgB,CAAC7R,CAAC,CAAC0R,MAAF,CAAS1Q,KAAV,CAAhB;AACH,GAHwC,EAGtC,CAAC1B,QAAD,CAHsC,CAAzC;AAKA,MAAMmT,YAAY,GAAG1S,yDAAW,CAAC,UAACC,CAAD,EAAO;AACpCmS,gBAAY,CAAC,KAAD,CAAZ;AACAJ,WAAO,CAAC/R,CAAC,CAAC0R,MAAF,CAASgB,OAAV,CAAP;AACH,GAH+B,EAG7B,EAH6B,CAAhC;;AAKA,MAAIjS,EAAJ,EAAQ;AACJ,WAAO,IAAP,CADI,CACY;AACnB;;AAED,sBACI,qIACI,2DAAC,yCAAD;AAAM,YAAQ,EAAE8R,QAAhB;AAA0B,SAAK,EAAE;AAAEjS,aAAO,EAAE;AAAX;AAAjC,kBACI,qFACI;AAAO,WAAO,EAAC;AAAf,0BADJ,eAEI,sEAFJ,eAGI,2DAAC,0CAAD;AAAO,QAAI,EAAC,SAAZ;AAAsB,SAAK,EAAElB,EAA7B;AAAiC,YAAQ,MAAzC;AAA0C,YAAQ,EAAEC;AAApD,IAHJ,CADJ,eAMI,qFACI;AAAO,WAAO,EAAC;AAAf,0BADJ,eAEI,sEAFJ,eAGI,2DAAC,0CAAD;AAAO,QAAI,EAAC,WAAZ;AAAwB,SAAK,EAAE+S,IAA/B;AAAqC,YAAQ,MAA7C;AAA8C,YAAQ,EAAEC;AAAxD,IAHJ,CANJ,eAWI,qFACI;AAAO,WAAO,EAAC;AAAf,gCADJ,eAEI,sEAFJ,eAGI,2DAAC,0CAAD;AAAO,QAAI,EAAC,eAAZ;AAA4B,QAAI,EAAC,UAAjC;AAA4C,SAAK,EAAE/S,QAAnD;AAA6D,YAAQ,MAArE;AAAsE,YAAQ,EAAEC;AAAhF,IAHJ,CAXJ,eAgBI,qFACI;AAAO,WAAO,EAAC;AAAf,6CADJ,eAEI,sEAFJ,eAGI,2DAAC,0CAAD;AAAO,QAAI,EAAC,qBAAZ;AAAkC,QAAI,EAAC,UAAvC;AAAkD,SAAK,EAAEqS,aAAzD;AAAwE,YAAQ,MAAhF;AAAiF,YAAQ,EAAEY;AAA3F,IAHJ,EAIKR,aAAa,iBAAI;AAAK,SAAK,EAAE;AAAEW,WAAK,EAAE;AAAT;AAAZ,yFAJtB,CAhBJ,eAsBI,qFACI,2DAAC,6CAAD;AAAU,QAAI,EAAC,WAAf;AAA2B,WAAO,EAAEb,IAApC;AAA0C,YAAQ,EAAEW;AAApD,8DADJ,EAIKP,SAAS,iBAAI;AAAK,SAAK,EAAE;AAAES,WAAK,EAAE;AAAT;AAAZ,6EAJlB,CAtBJ,eA4BI;AAAK,SAAK,EAAE;AAAEC,eAAS,EAAE;AAAb;AAAZ,kBACI,2DAAC,2CAAD;AAAQ,QAAI,EAAC,SAAb;AAAuB,YAAQ,EAAC,QAAhC;AAAyC,WAAO,EAAEvD;AAAlD,gCADJ,CA5BJ,CADJ,CADJ;AAoCH,CA1FD;;AA4FesC,qEAAf,E;;;;;;;AC7GA,6BAA6B,mBAAO,CAAC,MAAoC;;AAEzE;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,iC;;;;;;;ACXA,sD;;;;;;;ACAA,sC;;;;;;;ACAA,yC;;;;;;;ACAA,kC","file":"static\\YV6MniI5K0fLD3tkTctyk\\pages\\_app.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = require('../../../ssr-module-cache.js');\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tvar threw = true;\n \t\ttry {\n \t\t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n \t\t\tthrew = false;\n \t\t} finally {\n \t\t\tif(threw) delete installedModules[moduleId];\n \t\t}\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 6);\n","var _Object$getPrototypeOf = require(\"../core-js/object/get-prototype-of\");\n\nvar _Object$setPrototypeOf = require(\"../core-js/object/set-prototype-of\");\n\nfunction _getPrototypeOf(o) {\n  module.exports = _getPrototypeOf = _Object$setPrototypeOf ? _Object$getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || _Object$getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\n\nmodule.exports = _getPrototypeOf;","module.exports = require(\"core-js/library/fn/object/get-prototype-of\");","function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nmodule.exports = _classCallCheck;","import React, { useCallback } from 'react';\r\nimport { Input, Button, Form } from 'antd';\r\nimport Link from 'next/link';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nimport { useInput } from '../pages/signup'; // 커스텀 훅 \r\nimport { LOG_IN_REQUEST } from '../reducers/user';\r\n\r\nconst LoginForm = () => {\r\n    const [id, onChangeId] = useInput('');\r\n    const [password, onChangePassword] = useInput('');\r\n    const { isLoggingIn } = useSelector(state => state.user);\r\n    const dispatch = useDispatch();\r\n\r\n    const onSubmitForm = useCallback((e) => { // props로 들어가는 함수는 무조건 useCallback\r\n        e.preventDefault();\r\n        return dispatch({\r\n          type: LOG_IN_REQUEST,\r\n          data: {\r\n            userId: id, \r\n            password,\r\n          },\r\n        });\r\n    }, [id, password]);\r\n    \r\n    return (\r\n        <Form onSubmit={onSubmitForm} style={{ padding: '10px' }}>\r\n              <div>\r\n                <label htmlFor=\"user-id\">아이디</label>\r\n                <br />\r\n                <Input name=\"user-id\" value={id} onChange={onChangeId} required />\r\n              </div>\r\n              <div>\r\n              <label htmlFor=\"user-password\">비밀번호</label>\r\n                <br />\r\n                <Input name=\"user-password\" type=\"password\" value={password} onChange={onChangePassword} required />\r\n              </div>\r\n              <div style={{ marginTop: '10px' }}>\r\n                <Button type=\"primary\" htmlType=\"submit\" loading={isLoggingIn}>로그인</Button>\r\n                <Link href=\"/signup\"><a><Button>회원가입</Button></a></Link>\r\n              </div>\r\n        </Form>\r\n    );\r\n};\r\n\r\nexport default LoginForm;","import React, { useCallback } from 'react';\r\nimport { Avatar, Card, Button } from 'antd';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport Link from 'next/link';\r\n\r\nimport { LOG_OUT_REQUEST } from '../reducers/user';\r\n\r\nconst UserProfile = () => {\r\n    const { me } = useSelector(state => state.user);\r\n    const dispatch = useDispatch();\r\n\r\n    const onLogout = useCallback(() => {    // useCallback으로 감싸는 이유는 자식컴포넌트에 props로 전달하기 때문\r\n        dispatch({\r\n            type: LOG_OUT_REQUEST,\r\n        });\r\n    }, []);\r\n\r\n    return (\r\n        <Card     \r\n            actions={[\r\n                <Link href=\"/profile\" key=\"twit\">\r\n                    <a>\r\n                        <div>짹짹<br />{}</div>\r\n                    </a>\r\n                </Link>,        \r\n                <Link href=\"/profile\" key=\"following\">\r\n                    <a>\r\n                  <div>팔로잉<br />{}</div>\r\n                    </a>\r\n                </Link>,\r\n                <Link href=\"/profile\" key=\"follower\">\r\n                    <a>\r\n                  <div>팔로워<br />{}</div>\r\n                    </a>\r\n                </Link>,\r\n            ]}\r\n        >\r\n            <Card.Meta\r\n            avatar={<Avatar>{me.nickname[0]}</Avatar>}\r\n            title={me.nickname}\r\n            />\r\n            <Button onClick={onLogout}>로그아웃</Button>\r\n        </Card>\r\n    );\r\n};\r\n\r\nexport default UserProfile;","import React, { useEffect } from 'react';\r\nimport Link from 'next/link';\r\nimport PropTypes from 'prop-types';\r\nimport { Menu, Input, Button, Row, Col } from 'antd';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport Router from 'next/router';\r\n\r\nimport LoginForm from '../containers/LoginForm';\r\nimport UserProfile from '../containers/UserProfile';\r\nimport { LOAD_USER_REQUEST } from '../reducers/user';\r\n\r\nconst AppLayout = ({ children }) => {\r\n\r\n  const { me } = useSelector(state => state.user);\r\n  const dispatch = useDispatch();\r\n\r\n  const onSearch = (value) => {\r\n    /* 프론트에서의 동적 라우팅 */\r\n    Router.push({ pathname: '/hashtag', query: { tag: value } }, `hashtag/${value}`);   // 내부적으로는 pathname: '/hashtag', query: { tag: value } } 로 접근\r\n                                                                                        // 외부적으로는 `hashtag/${value}`로 보인다.\r\n  };\r\n\r\n  /* useEffect(() => {\r\n    if (!me) {  // 내 정보 없다면 \r\n      dispatch({\r\n        type: LOAD_USER_REQUEST,  // 내 정보 불러오기 ( 쿠키를 이용하여.. -> sagas/user.js의 loadUserAPI() 참조 )\r\n                                  // 로그인을 안한 상태면, 쿠키도 없을테니 LOAD_USER_REQUEST 불가 \r\n      });\r\n    }\r\n  }, []); */ \r\n\r\n  return (\r\n    <div>\r\n      <Menu mode=\"horizontal\">\r\n        <Menu.Item key=\"home\"><Link href=\"/\"><a>노드버드</a></Link></Menu.Item>\r\n        <Menu.Item key=\"profile\"><Link href=\"/profile\"><a>프로필</a></Link></Menu.Item>\r\n        <Menu.Item key=\"mail\">\r\n          <Input.Search \r\n            enterButton \r\n            style={{ verticalAlign: 'middle' }}\r\n            onSearch={onSearch}\r\n          />\r\n        </Menu.Item>\r\n      </Menu>\r\n      {!me && <Link href=\"/signup\"><a><Button>회원가입</Button></a></Link>}\r\n      <Row gutter={10}>   {/* gutter={10} : xs, sm 등으로 N등분한 화면의 간격을 넓혀주는 역할  */}\r\n        <Col xs={24} md={6}>\r\n          {me\r\n            ? <UserProfile />\r\n            :\r\n            <LoginForm />\r\n          }\r\n        </Col>\r\n        <Col xs={24} md={12}>\r\n          칠드런 {children}\r\n        </Col>\r\n        <Col xs={24} md={6}>\r\n\r\n        </Col>\r\n      </Row>\r\n      \r\n    </div>\r\n  );\r\n};\r\n\r\nAppLayout.propTypes = {\r\n  children: PropTypes.elementType,\r\n};\r\n\r\nexport default AppLayout;","import { all, fork, takeEvery, call, put, delay } from 'redux-saga/effects';\r\nimport axios from 'axios';\r\nimport { \r\n    LOAD_USER_FAILURE,\r\n    LOAD_USER_REQUEST,\r\n    LOAD_USER_SUCCESS,\r\n    LOG_IN_FAILURE,\r\n    LOG_IN_REQUEST,\r\n    LOG_IN_SUCCESS,\r\n    LOG_OUT_FAILURE,\r\n    LOG_OUT_REQUEST,\r\n    LOG_OUT_SUCCESS,\r\n    SIGN_UP_FAILURE,\r\n    SIGN_UP_REQUEST,\r\n    SIGN_UP_SUCCESS,\r\n    FOLLOW_USER_FAILURE,\r\n    FOLLOW_USER_REQUEST,\r\n    FOLLOW_USER_SUCCESS,\r\n    UNFOLLOW_USER_FAILURE,\r\n    UNFOLLOW_USER_REQUEST,\r\n    UNFOLLOW_USER_SUCCESS,\r\n    LOAD_FOLLOWERS_FAILURE,\r\n    LOAD_FOLLOWERS_REQUEST,\r\n    LOAD_FOLLOWERS_SUCCESS,\r\n    LOAD_FOLLOWINGS_FAILURE, \r\n    LOAD_FOLLOWINGS_REQUEST,\r\n    LOAD_FOLLOWINGS_SUCCESS,\r\n    REMOVE_FOLLOWER_FAILURE,\r\n    REMOVE_FOLLOWER_REQUEST,\r\n    REMOVE_FOLLOWER_SUCCESS,\r\n    EDIT_NICKNAME_FAILURE, \r\n    EDIT_NICKNAME_REQUEST,\r\n    EDIT_NICKNAME_SUCCESS\r\n} from '../reducers/user';\r\n\r\n/**\r\n * 로그인 3종세트\r\n */\r\nfunction loginAPI(loginData) {   // 서버에 요청을 보내는 부분 \r\n    return axios.post('/user/login', loginData, {\r\n        withCredentials: true,\r\n    }); \r\n}\r\nfunction* login(action) {\r\n    try {\r\n        const result = yield call(loginAPI, action.data); // 서버에 요청\r\n        yield put({     // put은 dispatch와 동일 \r\n            type: LOG_IN_SUCCESS,\r\n            data: result.data, // axios응답(result)은 응답객체.data안에 들어있다. \r\n        });\r\n    } catch (e) {\r\n        console.error(e);\r\n        yield put({\r\n            type: LOG_IN_FAILURE,\r\n        });\r\n    }\r\n}\r\nfunction* watchLogin() {\r\n    yield takeEvery(LOG_IN_REQUEST, login);\r\n}\r\n\r\n/**\r\n * 회원가입 3종세트\r\n */\r\nfunction signUpAPI(signUpData) {\r\n    // 서버에 요청을 보내는 부분 \r\n    return axios.post('/user', signUpData); // 백에서 signUpData를 req.body로 받는다.\r\n}\r\nfunction* signUp(action) {\r\n    try {\r\n        yield call(signUpAPI, action.data);\r\n        yield put({\r\n            type: SIGN_UP_SUCCESS,\r\n        });\r\n    } catch (e) {\r\n        console.error(e);\r\n        yield put({\r\n            type: SIGN_UP_FAILURE,\r\n            error: e,\r\n        });\r\n    }\r\n}\r\nfunction* watchSignUp() {\r\n    yield takeEvery(SIGN_UP_REQUEST, signUp);\r\n}\r\n\r\n/**\r\n * 로그아웃 3종세트\r\n */\r\nfunction logOutAPI() {\r\n    // 서버에 요청을 보내는 부분\r\n    return axios.post('/user/logout', {}, {\r\n      withCredentials: true,\r\n    });\r\n}\r\nfunction* logOut() {\r\n    try {\r\n      yield call(logOutAPI);\r\n      yield put({ // put은 dispatch 동일\r\n        type: LOG_OUT_SUCCESS,\r\n      });\r\n    } catch (e) {\r\n      console.error(e);\r\n      yield put({\r\n        type: LOG_OUT_FAILURE,\r\n        error: e,\r\n      });\r\n    }\r\n}\r\nfunction* watchLogOut() {\r\n    yield takeEvery(LOG_OUT_REQUEST, logOut);\r\n}\r\n  \r\n/**\r\n * 해당 유저 정보 가져오기 3종세트\r\n */\r\nfunction loadUserAPI(userId) {\r\n    // 서버에 요청을 보내는 부분\r\n    return axios.get(userId ? `/user/${userId}` : '/user/', {   // userId가 있으면 남의정보 가져오고\r\n                                                                // 없으면 내정보 가져오기    \r\n      withCredentials: true,    // 쿠키로 정보가져오기 \r\n    });\r\n}\r\nfunction* loadUser(action) {\r\n    try {\r\n      const result = yield call(loadUserAPI, action.data);\r\n      yield put({ // put은 dispatch 동일\r\n        type: LOAD_USER_SUCCESS,\r\n        data: result.data,\r\n        isThisMe: !action.data,   // 내정보 가져올때는 LOAD_USER_REQUEST에 id값을 안 넣는다.\r\n                            // 내정보 가져올때(매개변수 없을때) \r\n                            // -> action.data === false (=값이 없으므로 false)\r\n                            // -> !action.data === true\r\n                            // -> action.isThisMe===true로 LOAD_USER_SUCCESS에 넘어간다.\r\n      });\r\n    } catch (e) {\r\n      console.error(e);\r\n      yield put({\r\n        type: LOAD_USER_FAILURE,\r\n        error: e,\r\n      });\r\n    }\r\n}\r\nfunction* watchLoadUser() {\r\n    yield takeEvery(LOAD_USER_REQUEST, loadUser);\r\n}\r\n\r\n/**\r\n * 팔로우 하기 3종세트\r\n */\r\nfunction followAPI(userId) {\r\n    // 서버에 요청을 보내는 부분\r\n    return axios.post(`/user/${userId}/follow`, {}, {\r\n      withCredentials: true,\r\n    });\r\n}\r\nfunction* follow(action) {\r\n    try {\r\n      const result = yield call(followAPI, action.data);\r\n      yield put({ // put은 dispatch 동일\r\n        type: FOLLOW_USER_SUCCESS,\r\n        data: result.data,\r\n      });\r\n    } catch (e) {\r\n      console.error(e);\r\n      yield put({\r\n        type: FOLLOW_USER_FAILURE,\r\n        error: e,\r\n      });\r\n    }\r\n}\r\nfunction* watchFollow() {\r\n    yield takeEvery(FOLLOW_USER_REQUEST, follow);\r\n}\r\n  \r\n/**\r\n * 언팔로우 하기 3종세트\r\n */\r\nfunction unfollowAPI(userId) {\r\n    // 서버에 요청을 보내는 부분\r\n    return axios.delete(`/user/${userId}/follow`, {     // delete는 data:{} 필요 X\r\n      withCredentials: true,\r\n    });\r\n}\r\nfunction* unfollow(action) {\r\n    try {\r\n      const result = yield call(unfollowAPI, action.data);\r\n      yield put({ // put은 dispatch 동일\r\n        type: UNFOLLOW_USER_SUCCESS,\r\n        data: result.data,\r\n      });\r\n    } catch (e) { \r\n      console.error(e);\r\n      yield put({\r\n        type: UNFOLLOW_USER_FAILURE,\r\n        error: e,\r\n      });\r\n    }\r\n}\r\nfunction* watchUnfollow() {\r\n    yield takeEvery(UNFOLLOW_USER_REQUEST, unfollow);\r\n}\r\n\r\n/**\r\n * 내 팔로워들 목록 가져오기 3종세트\r\n */\r\nfunction loadFollowersAPI(userId, offset = 0, limit = 3) {  // 기본값 설정 \r\n  // 서버에 요청을 보내는 부분\r\n  return axios.get(`/user/${userId || 0}/followers?offset=${offset}&limit=${limit}`, {\r\n    withCredentials: true,\r\n  });\r\n}\r\nfunction* loadFollowers(action) {\r\n  try {\r\n    const result = yield call(loadFollowersAPI, action.data, action.offset);  // 처음화면 일때는 action.offset이 존재 X\r\n                                                                              // 더보기 버튼을 눌렀을때는 action.offset이 존재한다.\r\n    yield put({ // put은 dispatch 동일\r\n      type: LOAD_FOLLOWERS_SUCCESS,\r\n      data: result.data,\r\n    });\r\n  } catch (e) { \r\n    console.error(e);\r\n    yield put({\r\n      type: LOAD_FOLLOWERS_FAILURE,\r\n      error: e,\r\n    });\r\n  }\r\n}\r\nfunction* watchLoadFollowers() {\r\n  yield takeEvery(LOAD_FOLLOWERS_REQUEST, loadFollowers);\r\n}\r\n\r\n/**\r\n * 내가 팔로잉 하고있는 사람들 목록 가져오기 3종세트\r\n */\r\nfunction loadFollowingsAPI(userId, offset = 0, limit = 3) {\r\n  // 서버에 요청을 보내는 부분\r\n  return axios.get(`/user/${userId || 0}/followings?offset=${offset}&limit=${limit}`, {\r\n    withCredentials: true,\r\n  });\r\n}\r\nfunction* loadFollowings(action) {\r\n  try {\r\n    const result = yield call(loadFollowingsAPI, action.data, action.offset);\r\n    yield put({ // put은 dispatch 동일\r\n      type: LOAD_FOLLOWINGS_SUCCESS,\r\n      data: result.data,\r\n    });\r\n  } catch (e) {\r\n    console.error(e);\r\n    yield put({\r\n      type: LOAD_FOLLOWINGS_FAILURE,\r\n      error: e,\r\n    });\r\n  }\r\n}\r\nfunction* watchLoadFollowings() {\r\n  yield takeEvery(LOAD_FOLLOWINGS_REQUEST, loadFollowings);\r\n}\r\n\r\n/**\r\n * 팔로워 한명 삭제하기 3종세트\r\n */\r\nfunction removeFollowerAPI(userId) {\r\n  // 서버에 요청을 보내는 부분\r\n  return axios.delete(`/user/${userId}/follower`, {\r\n    withCredentials: true,\r\n  });\r\n}\r\nfunction* removeFollower(action) {\r\n  try {\r\n    const result = yield call(removeFollowerAPI, action.data);\r\n    yield put({ // put은 dispatch 동일\r\n      type: REMOVE_FOLLOWER_SUCCESS,\r\n      data: result.data,\r\n    });\r\n  } catch (e) { \r\n    console.error(e);\r\n    yield put({\r\n      type: REMOVE_FOLLOWER_FAILURE,\r\n      error: e,\r\n    });\r\n  }\r\n}\r\nfunction* watchRemoveFollower() {\r\n  yield takeEvery(REMOVE_FOLLOWER_REQUEST, removeFollower);\r\n}\r\n\r\n/**\r\n * 닉네임 수정 3종세트\r\n */\r\nfunction editNicknameAPI(nickname) {\r\n  // 서버에 요청을 보내는 부분\r\n  return axios.patch('/user/nickname', { nickname }, {  // 부분 수정: patch, 전체 수정: put\r\n    withCredentials: true,\r\n  });\r\n}\r\nfunction* editNickname(action) {\r\n  try {\r\n    const result = yield call(editNicknameAPI, action.data);\r\n    yield put({ // put은 dispatch 동일\r\n      type: EDIT_NICKNAME_SUCCESS,\r\n      data: result.data,\r\n    });\r\n  } catch (e) { \r\n    console.error(e);\r\n    yield put({\r\n      type: EDIT_NICKNAME_FAILURE,\r\n      error: e,\r\n    });\r\n  }\r\n}\r\nfunction* watchEditNickname() {\r\n  yield takeEvery(EDIT_NICKNAME_REQUEST, editNickname);\r\n}\r\n\r\n/* ㅡㅡㅡㅡㅡ main ㅡㅡㅡㅡㅡ*/\r\nfunction* userSaga() {\r\n    yield all([\r\n        fork(watchLogin),\r\n        fork(watchLogOut),\r\n        fork(watchLoadUser),\r\n        fork(watchSignUp),\r\n        fork(watchFollow),\r\n        fork(watchUnfollow),\r\n        fork(watchLoadFollowers),\r\n        fork(watchLoadFollowings),\r\n        fork(watchRemoveFollower),\r\n        fork(watchEditNickname),\r\n    ]);\r\n}\r\nexport default userSaga;","import { all, takeLatest, delay, put, fork, call, throttle } from 'redux-saga/effects';\r\nimport axios from 'axios';\r\nimport { \r\n    ADD_POST_FAILURE, \r\n    ADD_POST_REQUEST, \r\n    ADD_POST_SUCCESS,\r\n    ADD_COMMENT_FAILURE,\r\n    ADD_COMMENT_REQUEST,\r\n    ADD_COMMENT_SUCCESS, \r\n    LOAD_MAIN_POSTS_FAILURE, \r\n    LOAD_MAIN_POSTS_REQUEST,\r\n    LOAD_MAIN_POSTS_SUCCESS,\r\n    LOAD_HASHTAG_POSTS_FAILURE,\r\n    LOAD_HASHTAG_POSTS_REQUEST,\r\n    LOAD_HASHTAG_POSTS_SUCCESS,\r\n    LOAD_USER_POSTS_FAILURE,\r\n    LOAD_USER_POSTS_REQUEST,\r\n    LOAD_USER_POSTS_SUCCESS,\r\n    LOAD_COMMENTS_FAILURE,\r\n    LOAD_COMMENTS_REQUEST,\r\n    LOAD_COMMENTS_SUCCESS,\r\n    UPLOAD_IMAGES_FAILURE,\r\n    UPLOAD_IMAGES_REQUEST,\r\n    UPLOAD_IMAGES_SUCCESS,\r\n    LIKE_POST_FAILURE,\r\n    LIKE_POST_REQUEST,\r\n    LIKE_POST_SUCCESS,\r\n    UNLIKE_POST_FAILURE,\r\n    UNLIKE_POST_REQUEST,\r\n    UNLIKE_POST_SUCCESS,\r\n    RETWEET_FAILURE,\r\n    RETWEET_REQUEST,\r\n    RETWEET_SUCCESS,\r\n    REMOVE_POST_FAILURE,\r\n    REMOVE_POST_REQUEST,\r\n    REMOVE_POST_SUCCESS,\r\n    LOAD_POST_FAILURE, \r\n    LOAD_POST_SUCCESS,\r\n    LOAD_POST_REQUEST,\r\n} from '../reducers/post';\r\nimport { ADD_POST_TO_ME } from '../reducers/user';\r\n\r\n/**\r\n * 게시글 불러오기 3종세트\r\n */\r\nfunction loadMainPostsAPI(lastId=0, limit=10) {   // 게시글이 아예 하나도 안불러와져있는 경우, 마지막id가 없기때문에, 그때는 그냥 lastId = 0 으로 설정\r\n                                                  // 서버쪽에서는, lastId가 0이 오면, 게시글 id가 진짜 0인게 아니라, 게시글을 처음부터 불러와야겠다 라고 인식할 것\r\n    // 서버에 요청을 보내는 부분 \r\n    return axios.get(`/posts?lastId=${lastId}&limit=${limit}`);\r\n}\r\nfunction* loadMainPosts(action) {\r\n    try {\r\n      const result = yield call(loadMainPostsAPI, action.lastId);\r\n      yield put({\r\n        type: LOAD_MAIN_POSTS_SUCCESS,\r\n        data: result.data,\r\n      });\r\n    } catch (e) {\r\n        console.error(e);\r\n        yield put({\r\n            type: LOAD_MAIN_POSTS_FAILURE,\r\n            error: e,\r\n        });\r\n    }\r\n}\r\nfunction* watchLoadMainPosts() {\r\n    //yield takeLatest(LOAD_MAIN_POSTS_REQUEST, loadMainPosts);   // takeLatest써도, REQUEST가 서버로 계속 날라가는건 어쩔 수 없다. (물론, 마지막것만 갖다쓰긴하지만, 앞서 REQUEST계속 보낸 부분때문에 서버에 부하가 늘어난다.)\r\n                                                                  // REQUEST가 연속해서 날라가는 이유는, scroll감지는 0.1초만큼 짧은 시간마다 일어나기 때문이다.\r\n                                                                  // 해결: '쓰로틀'을 사용하자\r\n    yield throttle(1000, LOAD_MAIN_POSTS_REQUEST, loadMainPosts); // REQUEST가 호출되고, 1초가 지나기전까지는 같은 REQUEST가 호출될 수 없다.\r\n}\r\n\r\n/**\r\n * 게시글 업로드 3종세트\r\n */\r\nfunction addPostAPI(formData) {\r\n    // 서버에 요청을 보내는 부분 \r\n    return axios.post('/post', formData, {\r\n        withCredentials: true,  // 로그인 한 사람만 글을 쓸 수 있도록 쿠키를 보내줘야한다.(쿠키를 보내서 내가 지금 로그인했는지를 인증받아야 한다.)\r\n    });\r\n}\r\nfunction* addPost(action) {\r\n    try {\r\n        const result = yield call(addPostAPI, action.data);\r\n        yield put({   // post reducer의 데이터를 수정하는 부분 \r\n            type: ADD_POST_SUCCESS,\r\n            data: result.data,\r\n        });\r\n        yield put({   // user reducer의 데이터를 수정하는 부분 \r\n          type: ADD_POST_TO_ME,\r\n          data: result.data.id,\r\n        });\r\n    } catch (e) {\r\n        console.error(e);\r\n        yield put({\r\n            type: ADD_POST_FAILURE,\r\n            error: e,\r\n        });\r\n    }\r\n}\r\nfunction* watchAddPost() {\r\n    yield takeLatest(ADD_POST_REQUEST, addPost);\r\n}\r\n\r\n/**\r\n * 댓글 업로드 3종세트\r\n */\r\nfunction addCommentAPI(data) {\r\n    // 서버에 요청을 보내는 부분 \r\n    return axios.post(`/post/${data.postId}/comment`, { content: data.content }, {\r\n        withCredentials: true,\r\n    });\r\n}\r\nfunction* addComment(action) {  // 사용자가 댓글 등록하면, 제일 먼저 PostCard.js의 onSubmitComment에서 dispatch 일어남. 이때의 action이 매개변수 action으로 들어온것.\r\n    try {\r\n        const result = yield call(addCommentAPI, action.data);\r\n        yield put({\r\n            type: ADD_COMMENT_SUCCESS,\r\n            data: {\r\n                postId: action.data.postId,\r\n                comment: result.data,\r\n            }\r\n        });\r\n    } catch (e) {\r\n        console.error(e);\r\n        yield put({\r\n            type: ADD_COMMENT_FAILURE,\r\n            error: e,\r\n        });\r\n    }\r\n}\r\nfunction* watchAddComment() {\r\n    yield takeLatest(ADD_COMMENT_REQUEST, addComment);\r\n}\r\n\r\n/**\r\n * 특정 해시태그에 해당하는 게시글 가져오기 3종세트\r\n */\r\nfunction loadHashtagPostsAPI(tag, lastId=0, limit=10) {\r\n    return axios.get(`/hashtag/${encodeURIComponent(tag)}?lastId=${lastId}&limit=${limit}`);\r\n}\r\nfunction* loadHashtagPosts(action) {\r\n    try {\r\n      const result = yield call(loadHashtagPostsAPI, action.data, action.lastId);\r\n      yield put({\r\n        type: LOAD_HASHTAG_POSTS_SUCCESS,\r\n        data: result.data,\r\n      });\r\n    } catch (e) {\r\n        console.error(e);\r\n        yield put({\r\n            type: LOAD_HASHTAG_POSTS_FAILURE,\r\n            error: e,\r\n        });\r\n    }\r\n}\r\nfunction* watchLoadHashtagPosts() {\r\n    yield takeLatest(LOAD_HASHTAG_POSTS_REQUEST, loadHashtagPosts);\r\n}\r\n\r\n /**\r\n * 게시글의 모든 댓글들 가져오기 3종세트\r\n */\r\nfunction loadCommentsAPI(postId) {\r\n    return axios.get(`/post/${postId}/comments`);\r\n}\r\nfunction* loadComments(action) {\r\n    try {\r\n      const result = yield call(loadCommentsAPI, action.data);\r\n      yield put({\r\n        type: LOAD_COMMENTS_SUCCESS,\r\n        data: {\r\n            postId: action.data,\r\n            comments: result.data,\r\n        }\r\n      });\r\n    } catch (e) {\r\n        console.error('왜 댓글안돼=', e);\r\n        yield put({\r\n            type: LOAD_COMMENTS_FAILURE,\r\n            error: e,\r\n        });\r\n    }\r\n}\r\nfunction* watchLoadComments() {\r\n    yield takeLatest(LOAD_COMMENTS_REQUEST, loadComments);\r\n}\r\n\r\n/**\r\n * 특정 id를 가진 user의 게시글들 가져오기 3종세트\r\n */\r\nfunction loadUserPostsAPI(id) {\r\n    return axios.get(`/user/${id || 0}/posts`);\r\n}\r\nfunction* loadUserPosts(action) {\r\n    try {\r\n      const result = yield call(loadUserPostsAPI, action.data);\r\n      yield put({\r\n        type: LOAD_USER_POSTS_SUCCESS,\r\n        data: result.data,\r\n      });\r\n    } catch (e) {\r\n        console.error(e);\r\n        yield put({\r\n            type: LOAD_USER_POSTS_FAILURE,\r\n            error: e,\r\n        });\r\n    }\r\n}\r\nfunction* watchLoadUserPosts() {\r\n    yield takeLatest(LOAD_USER_POSTS_REQUEST, loadUserPosts);\r\n}\r\n\r\n/**\r\n * 이미지 업로드 3종세트\r\n */\r\nfunction uploadImagesAPI(formData) {\r\n    return axios.post('/post/images', formData, {   // 게시글을 아직 올리지 않은 상태에서 postId알 수 있는 방법이 없음 \r\n      withCredentials: true,\r\n    });\r\n}\r\nfunction* uploadImages(action) {\r\n    try {\r\n      const result = yield call(uploadImagesAPI, action.data);\r\n      yield put({\r\n        type: UPLOAD_IMAGES_SUCCESS,\r\n        data: result.data,\r\n      });\r\n    } catch (e) {\r\n      console.error(e);\r\n      yield put({\r\n        type: UPLOAD_IMAGES_FAILURE,\r\n        error: e,\r\n      });\r\n    }\r\n}\r\nfunction* watchUploadImages() {\r\n    yield takeLatest(UPLOAD_IMAGES_REQUEST, uploadImages);\r\n}\r\n\r\n/**\r\n * 좋아요 누르기 3종세트\r\n */\r\nfunction likePostAPI(postId) {\r\n    return axios.post(`/post/${postId}/like`, {}, {     // 두번째 인자인 data:{}를 명시는 해놓아야됨 \r\n      withCredentials: true,\r\n    });\r\n}\r\nfunction* likePost(action) {\r\n    try {\r\n      const result = yield call(likePostAPI, action.data);\r\n      yield put({\r\n        type: LIKE_POST_SUCCESS,\r\n        data: {\r\n          postId: action.data,          // 게시글 id\r\n          userId: result.data.userId,   // 좋아요 누른 사람의 id\r\n        },\r\n      });\r\n    } catch (e) {\r\n      console.error(e);\r\n      yield put({\r\n        type: LIKE_POST_FAILURE,\r\n        error: e,\r\n      });\r\n    }\r\n}\r\nfunction* watchLikePost() {\r\n    yield takeLatest(LIKE_POST_REQUEST, likePost);\r\n}\r\n  \r\n/**\r\n * 좋아요 누르기 취소 3종세트\r\n */\r\nfunction unlikePostAPI(postId) {\r\n    return axios.delete(`/post/${postId}/like`, {   // delete는 두번째 인자인 data:{} 부분 없음. \r\n      withCredentials: true,\r\n    });\r\n}\r\nfunction* unlikePost(action) {\r\n    try {\r\n      const result = yield call(unlikePostAPI, action.data);\r\n      yield put({\r\n        type: UNLIKE_POST_SUCCESS,\r\n        data: {\r\n          postId: action.data,          // 게시글 id\r\n          userId: result.data.userId,   // 좋아요 취소한 사람의 id\r\n        },\r\n      });\r\n    } catch (e) {\r\n      console.error(e);\r\n      yield put({\r\n        type: UNLIKE_POST_FAILURE,\r\n        error: e,\r\n      });\r\n    }\r\n}\r\nfunction* watchUnlikePost() {\r\n    yield takeLatest(UNLIKE_POST_REQUEST, unlikePost);\r\n}\r\n\r\n/**\r\n * 리트윗 하기 3종세트\r\n */\r\nfunction retweetAPI(postId) {\r\n  return axios.post(`/post/${postId}/retweet`, {}, {    // post 요청 시에는 data가 없더라도 빈 객체 {} 라도 넣어줘야 한다. \r\n    withCredentials: true,\r\n  });\r\n}\r\nfunction* retweet(action) {\r\n  try {\r\n    const result = yield call(retweetAPI, action.data);\r\n    yield put({\r\n      type: RETWEET_SUCCESS,\r\n      data: result.data,\r\n    });\r\n  } catch (e) {\r\n    console.error(e);\r\n    yield put({\r\n      type: RETWEET_FAILURE,\r\n      error: e,\r\n    });\r\n    console.dir(e);\r\n    alert(e.response && e.response.data);   // alert로 에러 정보 알려주기 \r\n  }\r\n}\r\nfunction* watchRetweet() {\r\n  yield takeLatest(RETWEET_REQUEST, retweet);\r\n}\r\n\r\n/**\r\n * 게시글 삭제 3종세트\r\n */\r\nfunction removePostAPI(postId) {\r\n  return axios.delete(`/post/${postId}`, {\r\n    withCredentials: true,\r\n  });\r\n}\r\nfunction* removePost(action) {\r\n  try {\r\n    const result = yield call(removePostAPI, action.data);\r\n    yield put({     // post reducer\r\n      type: REMOVE_POST_SUCCESS,\r\n      data: result.data,\r\n    });\r\n    yield put({     // user reducer (내 게시글 삭제하면, 내 짹짹 수도 하나 줄어야 한다.)\r\n      type: REMOVE_POST_OF_ME,\r\n      data: result.data,\r\n    });\r\n  } catch (e) {\r\n    console.error(e);\r\n    yield put({\r\n      type: REMOVE_POST_FAILURE,\r\n      error: e,\r\n    });\r\n  }\r\n}\r\nfunction* watchRemovePost() {\r\n  yield takeLatest(REMOVE_POST_REQUEST, removePost);\r\n}\r\n\r\n/**\r\n * 게시글 한개 불러오기 3종세트\r\n */\r\nfunction loadPostAPI(postId) {\r\n  return axios.get(`/post/${postId}`);\r\n}\r\nfunction* loadPost(action) {\r\n  try {\r\n    const result = yield call(loadPostAPI, action.data);\r\n    yield put({\r\n      type: LOAD_POST_SUCCESS,\r\n      data: result.data,\r\n    });\r\n  } catch (e) {\r\n    console.error(e);\r\n    yield put({\r\n      type: LOAD_POST_FAILURE,\r\n      error: e,\r\n    });\r\n  }\r\n}\r\nfunction* watchLoadPost() {\r\n  yield takeLatest(LOAD_POST_REQUEST, loadPost);\r\n}\r\n\r\n/* ㅡㅡㅡㅡㅡ main ㅡㅡㅡㅡㅡ*/\r\nfunction* postSaga() {\r\n    yield all([\r\n        fork(watchLoadMainPosts),\r\n        fork(watchAddPost),\r\n        fork(watchAddComment),\r\n        fork(watchLoadComments),\r\n        fork(watchLoadHashtagPosts),\r\n        fork(watchLoadUserPosts),\r\n        fork(watchUploadImages),\r\n        fork(watchLikePost),\r\n        fork(watchUnlikePost),\r\n        fork(watchRetweet),\r\n        fork(watchRemovePost),\r\n        fork(watchLoadPost),\r\n    ]);\r\n}\r\nexport default postSaga;","import { all, fork } from 'redux-saga/effects';\r\nimport axios from 'axios';\r\nimport user from './user';\r\nimport post from './post';\r\n\r\n// axios.post에서 공통되는 URL을 이렇게 따로 뺼 수 있음 \r\naxios.defaults.baseURL = 'http://localhost:3067/api';       // axios.defaults 해주면 모든 axios에 적용이 된다. \r\n\r\nfunction* rootSaga() {\r\n    yield all([\r\n        fork(user),\r\n        fork(post),\r\n    ]);\r\n}\r\n\r\nexport default rootSaga;","import { combineReducers } from 'redux';\r\nimport user from './user';\r\nimport post from './post';\r\n\r\nconst rootReducer = combineReducers({\r\n    user,\r\n    post,\r\n});\r\n\r\nexport default rootReducer;","import React from 'react';\r\nimport Head from 'next/head';\r\nimport PropTypes from 'prop-types';\r\nimport withRedux from 'next-redux-wrapper';\r\nimport withReduxSaga from 'next-redux-saga';\r\nimport { createStore, compose, applyMiddleware } from 'redux';\r\nimport { Provider } from 'react-redux';\r\nimport createSagaMiddleware from 'redux-saga';\r\nimport axios from 'axios';\r\nimport Helmet from 'react-helmet';\r\nimport App, { Container } from 'next/app';\r\n\r\nimport AppLayout from '../components/AppLayout';\r\nimport rootSaga from '../sagas';\r\nimport reducer from '../reducers';  // ../reducers/index.js와 동일 (index.js는 생략 가능)\r\nimport { LOAD_USER_REQUEST } from '../reducers/user';\r\n                                    // rootReducer인데 reducer이름으로 가져옴 (가져오는 이름은 이처럼 맘대로 가능)\r\n\r\nconst NodeBird = ({ Component, store, pageProps }) => {\r\n    return (\r\n        <Container>\r\n            <Provider store={store}>\r\n                <Helmet\r\n                    title=\"NodeBird\"\r\n                    htmlAttributes={{ lang: 'ko' }}\r\n                    meta={[{\r\n                        charset: 'UTF-8',\r\n                    }, {\r\n                        name: 'viewport',\r\n                        content: 'width=device-width,initial-scale=1.0,minimum-scale=1.0,maximum-scale=1.0,user-scalable=yes,viewport-fit=cover',\r\n                    }, {\r\n                        'http-equiv': 'X-UA-Compatible', content: 'IE=edge',\r\n                    }, {\r\n                        name: 'description', content: 'NodeBird SNS',\r\n                    }, {\r\n                        name: 'og:title', content: 'NodeBird',\r\n                    }, {\r\n                        name: 'og:description', content: 'NodeBird SNS',\r\n                    }, {\r\n                        property: 'og:type', content: 'website',\r\n                    }]}\r\n                    link={[{\r\n                        rel: 'shortcut icon', href: '/linux.ico',\r\n                    }, {\r\n                        rel: 'stylesheet', href: 'https://cdnjs.cloudflare.com/ajax/libs/antd/3.16.2/antd.css',\r\n                    }, {\r\n                        rel: 'stylesheet', href: 'https://cdnjs.cloudflare.com/ajax/libs/slick-carousel/1.6.0/slick.min.css',\r\n                    }, {\r\n                        rel: 'stylesheet', href: 'https://cdnjs.cloudflare.com/ajax/libs/slick-carousel/1.6.0/slick-theme.min.css',\r\n                    }]}\r\n                />\r\n                <AppLayout>\r\n                    <Component {...pageProps}/>\r\n                </AppLayout>\r\n            </Provider>\r\n        </Container>\r\n        \r\n    );\r\n};\r\n\r\nNodeBird.propTypes = {\r\n    Component: PropTypes.elementType.isRequired, // isRequired 넣으면 실수로 props안넣었을 때 경고를 해줌\r\n    store: PropTypes.object.isRequired,\r\n    pageProps: PropTypes.object.isRequired,\r\n};\r\n\r\n/* NodeBird.getInitialProps = async (context) => {\r\n    //console.log(context);\r\n    const { ctx } = context;\r\n    let pageProps = {};\r\n    if (context.Component.getInitialProps) {\r\n        pageProps = await context.Component.getInitialProps(ctx);\r\n    } \r\n    return { pageProps };\r\n}; */\r\n\r\nNodeBird.getInitialProps = async (context) => {\r\n    //console.log(context);\r\n    const { ctx, Component } = context;\r\n    let pageProps = {};\r\n\r\n    /* SSR일때는, 우리가 직접 cookie 넣어줘야 한다. */\r\n    const cookie = ctx.isServer ? ctx.req.headers.cookie : '';    // 서버환경일때, ctx.req.headers안에 cookie 가 들어있다.\r\n    /* 서버 환경이고, cookie가 존재할때만 아래 작업 실행 */\r\n    if (ctx.isServer && cookie) {\r\n        axios.defaults.headers.Cookie = cookie;     // axios에 cookie 데이터를 기본으로 심어준다. (SSR일때는 브라우저(=클라이언트)가 없기 때문에, 프론트'서버'-> 백 으로 쿠키 보내는 방법)\r\n                                                    // axios.defaults 해주면 모든 axios에 적용이 된다. \r\n    }\r\n    /* 내 정보 먼저 가져온 후에, */\r\n    const state = ctx.store.getState();\r\n    if (!state.user.me) {\r\n        ctx.store.dispatch({\r\n            type: LOAD_USER_REQUEST,\r\n        });\r\n    }\r\n\r\n    /* 다른 컴포넌트들을 호출한다. */\r\n    if (Component.getInitialProps) {                        // Component각각에 getInitialProps가 있으면 실행을 해주겠다는 뜻 \r\n        pageProps = await Component.getInitialProps(ctx) || {};   // _app.js의 (context.ctx)를 각 컴포넌트에서는 (context)로 받는다. \r\n    } \r\n    \r\n    return { pageProps };\r\n};\r\n\r\n/* 위 const NodeBird에 store를 인자로 넣어주는 부분 -> 이 부분은 그냥 암기 ! */\r\nconst configureStore = (initialState, options) => {   // initialState는 매개변수로서, redux에서 넣어줍니다.\r\n    const sagaMiddleware = createSagaMiddleware(); // redux-saga에서 미리 만들어놨기 때문에 그냥 갖다쓰면된다.\r\n    \r\n    /* 리덕스에 없는 기능 추가시키고 싶을때 middleware사용  ex)Redux Dev Tools */\r\n    const middlewares = [sagaMiddleware]; \r\n    /* enhancer : middleware들을 적용(apply)해서, 리덕스의 기능을 향상시키는것 */\r\n    const enhancer = process.env.NODE_ENV === 'production'\r\n        ? compose(applyMiddleware(...middlewares)) // 실제 배포시에는 REDUX_DEVTOOLS 있으면 X\r\n        : compose(   /* compose : 미들웨어 적용할때, 미들웨어끼리 합성시켜줌 */\r\n        applyMiddleware(...middlewares),\r\n        !options.isServer && window.__REDUX_DEVTOOLS_EXTENSION__ !== 'undefined' ? window.__REDUX_DEVTOOLS_EXTENSION__() : (f) => f,\r\n    );                  \r\n    /* store = reducer + state */                               \r\n    const store = createStore(reducer, initialState, enhancer);   \r\n    //sagaMiddleware.run(rootSaga);   // rootSaga를 sagaMiddleware에 연결 \r\n    store.sagaTask = sagaMiddleware.run(rootSaga);   // [SSR]store.sagaTask를 withReduxSaga가 필요로 함. \r\n    return store;\r\n};\r\n\r\nexport default withRedux(configureStore)(withReduxSaga(NodeBird));","module.exports = require(\"redux-saga\");","module.exports = require(\"next/router\");","module.exports = require('./dist/pages/_app')\n","module.exports = require(\"core-js/library/fn/json/stringify\");","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime-corejs2/helpers/interopRequireDefault\");\n\nvar _promise = _interopRequireDefault(require(\"@babel/runtime-corejs2/core-js/promise\"));\n\nvar _assign = _interopRequireDefault(require(\"@babel/runtime-corejs2/core-js/object/assign\"));\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime-corejs2/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime-corejs2/helpers/createClass\"));\n\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime-corejs2/helpers/possibleConstructorReturn\"));\n\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime-corejs2/helpers/getPrototypeOf\"));\n\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime-corejs2/helpers/inherits\"));\n\nvar __importStar = void 0 && (void 0).__importStar || function (mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) {\n    if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\n  }\n  result[\"default\"] = mod;\n  return result;\n};\n\nvar __importDefault = void 0 && (void 0).__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar react_1 = __importStar(require(\"react\"));\n\nvar prop_types_1 = __importDefault(require(\"prop-types\"));\n\nvar utils_1 = require(\"next-server/dist/lib/utils\");\n\nvar router_1 = require(\"next/router\");\n\nvar App =\n/*#__PURE__*/\nfunction (_react_1$Component) {\n  (0, _inherits2.default)(App, _react_1$Component);\n\n  function App() {\n    (0, _classCallCheck2.default)(this, App);\n    return (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(App).apply(this, arguments));\n  }\n\n  (0, _createClass2.default)(App, [{\n    key: \"getChildContext\",\n    value: function getChildContext() {\n      return {\n        router: router_1.makePublicRouterInstance(this.props.router)\n      };\n    } // Kept here for backwards compatibility.\n    // When someone ended App they could call `super.componentDidCatch`. This is now deprecated.\n\n  }, {\n    key: \"componentDidCatch\",\n    value: function componentDidCatch(err) {\n      throw err;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          router = _this$props.router,\n          Component = _this$props.Component,\n          pageProps = _this$props.pageProps;\n      var url = createUrl(router);\n      return react_1.default.createElement(Container, null, react_1.default.createElement(Component, (0, _assign.default)({}, pageProps, {\n        url: url\n      })));\n    }\n  }], [{\n    key: \"getInitialProps\",\n    value: function (_ref) {\n      var Component = _ref.Component,\n          router = _ref.router,\n          ctx = _ref.ctx;\n\n      try {\n        return _promise.default.resolve(utils_1.loadGetInitialProps(Component, ctx)).then(function (pageProps) {\n          return {\n            pageProps: pageProps\n          };\n        });\n      } catch (e) {\n        return _promise.default.reject(e);\n      }\n    }\n  }]);\n  return App;\n}(react_1.Component);\n\nApp.childContextTypes = {\n  router: prop_types_1.default.object\n};\nexports.default = App;\n\nvar Container =\n/*#__PURE__*/\nfunction (_react_1$Component2) {\n  (0, _inherits2.default)(Container, _react_1$Component2);\n\n  function Container() {\n    (0, _classCallCheck2.default)(this, Container);\n    return (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(Container).apply(this, arguments));\n  }\n\n  (0, _createClass2.default)(Container, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.scrollToHash();\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate() {\n      this.scrollToHash();\n    }\n  }, {\n    key: \"scrollToHash\",\n    value: function scrollToHash() {\n      var hash = window.location.hash;\n      hash = hash ? hash.substring(1) : false;\n      if (!hash) return;\n      var el = document.getElementById(hash);\n      if (!el) return; // If we call scrollIntoView() in here without a setTimeout\n      // it won't scroll properly.\n\n      setTimeout(function () {\n        return el.scrollIntoView();\n      }, 0);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return this.props.children;\n    }\n  }]);\n  return Container;\n}(react_1.Component);\n\nexports.Container = Container;\nvar warnUrl = utils_1.execOnce(function () {\n  if (process.env.NODE_ENV !== 'production') {\n    console.error(\"Warning: the 'url' property is deprecated. https://err.sh/zeit/next.js/url-deprecated\");\n  }\n});\n\nfunction createUrl(router) {\n  // This is to make sure we don't references the router object at call time\n  var pathname = router.pathname,\n      asPath = router.asPath,\n      query = router.query;\n  return {\n    get query() {\n      warnUrl();\n      return query;\n    },\n\n    get pathname() {\n      warnUrl();\n      return pathname;\n    },\n\n    get asPath() {\n      warnUrl();\n      return asPath;\n    },\n\n    back: function back() {\n      warnUrl();\n      router.back();\n    },\n    push: function push(url, as) {\n      warnUrl();\n      return router.push(url, as);\n    },\n    pushTo: function pushTo(href, as) {\n      warnUrl();\n      var pushRoute = as ? href : null;\n      var pushUrl = as || href;\n      return router.push(pushRoute, pushUrl);\n    },\n    replace: function replace(url, as) {\n      warnUrl();\n      return router.replace(url, as);\n    },\n    replaceTo: function replaceTo(href, as) {\n      warnUrl();\n      var replaceRoute = as ? href : null;\n      var replaceUrl = as || href;\n      return router.replace(replaceRoute, replaceUrl);\n    }\n  };\n}\n\nexports.createUrl = createUrl;","module.exports = require(\"core-js/library/fn/object/get-prototype-of\");","module.exports = require(\"antd\");","module.exports = require(\"core-js/library/fn/get-iterator\");","module.exports = require(\"next-redux-wrapper\");","function _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nmodule.exports = _assertThisInitialized;","function _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nmodule.exports = _interopRequireDefault;","import produce from 'immer';\r\n\r\n/* const dummyUser = {\r\n    nickname: '제로초',\r\n    Post: [],\r\n    followings: [],\r\n    followers: [],\r\n    id: 1,\r\n}; */\r\n\r\n/* redux state */\r\nexport const initialState = {\r\n    isLoggingOut: false,          // 로그아웃 시도 중\r\n    isLogginIn: false,            // 로그인 시도 중 \r\n    logInErrorReason: '',         // 로그인 에러 사유\r\n\r\n    signedUp: false,              // 회원가입 성공\r\n    isSignedUp: false,            // 회원가입 시도 중\r\n    signUpErrorReason: '',        // 회원가입 에러 사유\r\n\r\n    me: null,                     // 내 정보\r\n    followingList: [],\r\n    followerList: [],              \r\n    userInfo: null,               // 남의 정보 \r\n\r\n    isEditingNickname: false,     // 닉네임 변경 중 \r\n    editNicknameErrorReason: '',  // 닉네임 변경 실패 사유 \r\n\r\n    hasMoreFollower: false,       // 더보기 버튼을 존재시킬지\r\n    hasMoreFollowing: false,      // 더보기 버튼을 존재시킬지\r\n};\r\n\r\n/* Action의 이름 */\r\nexport const SIGN_UP_REQUEST = 'SIGN_UP_REQUEST';\r\nexport const SIGN_UP_SUCCESS = 'SIGN_UP_SUCCESS';\r\nexport const SIGN_UP_FAILURE = 'SIGN_UP_FAILURE';\r\n\r\nexport const LOG_IN_REQUEST = 'LOG_IN_REQUEST';\r\nexport const LOG_IN_SUCCESS = 'LOG_IN_SUCCESS';\r\nexport const LOG_IN_FAILURE = 'LOG_IN_FAILURE';\r\n\r\nexport const LOG_OUT_REQUEST = 'LOG_OUT_REQUEST';\r\nexport const LOG_OUT_SUCCESS = 'LOG_OUT_SUCCESS';\r\nexport const LOG_OUT_FAILURE = 'LOG_OUT_FAILURE';\r\n\r\nexport const LOAD_USER_REQUEST = 'LOAD_USER_REQUEST';               // 사용자 불러오기 \r\nexport const LOAD_USER_SUCCESS = 'LOAD_USER_SUCCESS';\r\nexport const LOAD_USER_FAILURE = 'LOAD_USER_FAILURE';\r\n\r\nexport const LOAD_FOLLOWERS_REQUEST = 'LOAD_FOLLOWERS_REQUEST';\r\nexport const LOAD_FOLLOWERS_SUCCESS = 'LOAD_FOLLOWERS_SUCCESS';\r\nexport const LOAD_FOLLOWERS_FAILURE = 'LOAD_FOLLOWERS_FAILURE';\r\n\r\nexport const LOAD_FOLLOWINGS_REQUEST = 'LOAD_FOLLOWINGS_REQUEST';\r\nexport const LOAD_FOLLOWINGS_SUCCESS = 'LOAD_FOLLOWINGS_SUCCESS';\r\nexport const LOAD_FOLLOWINGS_FAILURE = 'LOAD_FOLLOWINGS_FAILURE';\r\n\r\nexport const FOLLOW_USER_REQUEST = 'FOLLOW_USER_REQUEST';           // 팔로우 액션\r\nexport const FOLLOW_USER_SUCCESS = 'FOLLOW_USER_SUCCESS';\r\nexport const FOLLOW_USER_FAILURE = 'FOLLOW_USER_FAILURE';\r\n\r\nexport const UNFOLLOW_USER_REQUEST = 'UNFOLLOW_USER_REQUEST';       // 언팔 액션\r\nexport const UNFOLLOW_USER_SUCCESS = 'UNFOLLOW_USER_SUCCESS';\r\nexport const UNFOLLOW_USER_FAILURE = 'UNFOLLOW_USER_FAILURE';\r\n\r\nexport const REMOVE_FOLLOWER_REQUEST = 'REMOVE_FOLLOWER_REQUEST';   // 팔로워 제거 \r\nexport const REMOVE_FOLLOWER_SUCCESS = 'REMOVE_FOLLOWER_SUCCESS';\r\nexport const REMOVE_FOLLOWER_FAILURE = 'REMOVE_FOLLOWER_FAILURE';\r\n\r\nexport const EDIT_NICKNAME_REQUEST = 'EDIT_NICKNAME_REQUEST';\r\nexport const EDIT_NICKNAME_SUCCESS = 'EDIT_NICKNAME_SUCCESS';\r\nexport const EDIT_NICKNAME_FAILURE = 'EDIT_NICKNAME_FAILURE';\r\n\r\nexport const ADD_POST_TO_ME = 'ADD_POST_TO_ME';                    \r\nexport const REMOVE_POST_OF_ME = 'REMOVE_POST_OF_ME';\r\n\r\n/* 실제 Action */\r\n// ...\r\n\r\n/* Reducer */\r\nconst reducer = (state = initialState, action) => {\r\n    /* immer */\r\n    return produce(state, (draft) => {      // immer에게 불변성을 맡기고, 우리는 draft만 자유롭게 변경해주면 된다.\r\n      switch (action.type) {\r\n        case LOG_IN_REQUEST: {\r\n            draft.isLoggingIn = true;\r\n            draft.isLoggedIn = false;\r\n            draft.logInErrorReason = '';\r\n            break;\r\n            /* return {\r\n                ...state,\r\n                isLoggingIn: true,\r\n                isLoggedIn: false,\r\n                logInErrorReason: '',\r\n            }; */\r\n        }\r\n        case LOG_IN_SUCCESS: {\r\n            draft.isLoggingIn = false;\r\n            draft.me = action.data;\r\n            break;\r\n            /* return {\r\n                ...state,\r\n                isLoggingIn: false,\r\n                me: action.data,\r\n                isLoading: false,\r\n            }; */\r\n        }\r\n        case LOG_IN_FAILURE: {\r\n            draft.isLoggingIn = false;\r\n            draft.logInErrorReason = action.error;\r\n            draft.me = null;\r\n            break;\r\n            /* return {\r\n                ...state,\r\n                isLoggingIn: false,\r\n                logInErrorReason: action.error,\r\n                me: null,\r\n            }; */\r\n        }\r\n        case LOG_OUT_REQUEST: {\r\n            draft.isLoggingOut = true;\r\n            break;\r\n            /* return {\r\n              ...state,\r\n              isLoggingOut: true,\r\n            }; */\r\n        }\r\n        case LOG_OUT_SUCCESS: {\r\n            draft.isLoggingOut = false;\r\n            draft.me = null;\r\n            break;\r\n            /* return {\r\n              ...state,\r\n              isLoggingOut: false,\r\n              me: null,\r\n            }; */\r\n        }\r\n        case SIGN_UP_REQUEST: {\r\n            draft.isSigningUp = true;\r\n            draft.isSignedUp = false;\r\n            draft.signUpErrorReason = '';\r\n            break;\r\n            /* return {\r\n                ...state,\r\n                isSigningUp: true,\r\n                isSignedUp: false,\r\n                signUpErrorReason: '',\r\n            }; */\r\n        }\r\n        case SIGN_UP_SUCCESS: {\r\n            alert('회원가입 성공!'); \r\n            draft.isSigningUp = false;\r\n            draft.isSignedUp = true;\r\n            break;\r\n            /* return {\r\n                isSigningUp: false,\r\n                isSignedUp: true,\r\n            }; */\r\n        }\r\n        case SIGN_UP_FAILURE: {\r\n            draft.isSigningUp = false;\r\n            draft.signUpErrorReason = action.error;\r\n            break;\r\n            /* return {\r\n                isSigningUp: false,\r\n                signUpErrorReason: action.error,\r\n            }; */\r\n        }\r\n        case LOAD_USER_REQUEST: {\r\n            break;\r\n            /* return {\r\n              ...state,\r\n            }; */\r\n        }\r\n        case LOAD_USER_SUCCESS: {\r\n            if (action.isThisMe) {\r\n              draft.me = action.data;\r\n              break;\r\n            } else {\r\n              draft.userInfo = action.data;\r\n              break;\r\n            }\r\n            /* if (action.isThisMe) {    // (sagas/user.js)의 function*loadUser() 에서 put으로 넘겨준것이 바로, action.me\r\n                return {\r\n                    ...state,\r\n                    me: action.data,\r\n                  };\r\n            } else {\r\n                return {\r\n                    ...state,\r\n                    userInfo: action.data,\r\n                  };\r\n            } */\r\n        }\r\n        case LOAD_USER_FAILURE: {\r\n            break;\r\n            /* return {\r\n              ...state,\r\n            }; */\r\n        }\r\n        case FOLLOW_USER_REQUEST: {\r\n            break;\r\n            /* return {\r\n              ...state,\r\n            }; */\r\n        }\r\n        case FOLLOW_USER_SUCCESS: {\r\n            draft.me.Followings.unshift({ id: action.data });\r\n            break;\r\n            /* return {\r\n              ...state,\r\n              me: {\r\n                ...state.me,\r\n                Followings: [{ id: action.data }, ...state.me.Followings],\r\n              },\r\n            }; */\r\n        }\r\n        case FOLLOW_USER_FAILURE: {\r\n            break;\r\n            /* return {\r\n              ...state,\r\n            }; */\r\n        }\r\n        case UNFOLLOW_USER_REQUEST: {\r\n            break;\r\n            /* return {\r\n              ...state,\r\n            }; */\r\n        }\r\n        case UNFOLLOW_USER_SUCCESS: {\r\n            const userIndex1 = draft.me.Followings.findIndex(v => v.id === action.data);\r\n            draft.me.Followings.splice(userIndex1, 1);\r\n            const userIndex2 = draft.me.FollowingList.findIndex(v => v.id === action.data);\r\n            draft.followingList.splice(userIndex2, 1);\r\n            break;\r\n            /* return {\r\n              ...state,\r\n              me: {\r\n                ...state.me,\r\n                Followings: state.me.Followings.filter(v => v.id !== action.data),\r\n              },\r\n              followingList: state.followingList.filter(v => v.id !== action.data),\r\n            }; */\r\n        }\r\n        case UNFOLLOW_USER_FAILURE: { \r\n            break;\r\n            /* return {\r\n              ...state,\r\n            }; */\r\n        }\r\n        case ADD_POST_TO_ME: {\r\n            draft.me.Posts.unshift({ id: action.data });\r\n            break;\r\n            /* return {\r\n              ...state,\r\n              me: {\r\n                ...state.me,\r\n                Posts: [{ id: action.data }, ...state.me.Posts],    // 작성한 게시글을, user정보안의 게시글 정보에 넣어주기 \r\n              },\r\n            }; */\r\n        }\r\n        case LOAD_FOLLOWERS_REQUEST: {\r\n            draft.followerList = !action.offset ? [] : draft.followerList;      // offset이 없는 경우, followerList = []\r\n                                                                                // 이렇게 해줘야 2번씩 로딩 안됨 \r\n            break;\r\n            /* return {\r\n              ...state,\r\n              //hasMoreFollower: action.offset ? state.hasMoreFollower : true,  // 처음화면 일때는, offset은 0 이므로, false취급을 받아서 true로 넘어간다.(=더보기 버튼을 보여준다.)                                                         \r\n                                                                                // (처음화면일때 offset이 0인것은, router.get('/:id/followers'... 에서 확인가능)      \r\n                                                                                // 여기 없어도 됨 (내 Q&A 답글)\r\n            }; */\r\n        }\r\n        case LOAD_FOLLOWERS_SUCCESS: {\r\n            action.data.forEach((f) => {\r\n              draft.followerList.push(f);\r\n            });\r\n            draft.hasMoreFollower = action.data.length === 3;\r\n            break;\r\n            /* return {\r\n              ...state,\r\n              followerList: state.followerList.concat(action.data), // 기존것을 덮어쓰지 말고, 기존것에 추가 \r\n              hasMoreFollower: action.data.length === 3,            // 방금 로드된 팔로워가 1명 또는 2명이라면, 더보기 버튼을 보여줄 필요가 없다.\r\n                                                                    // 방금 로드된 팔로워가 3명일때만, 더보기 버튼을 보여줄 필요가 있다.\r\n            }; */\r\n        }\r\n        case LOAD_FOLLOWERS_FAILURE: {\r\n            break;\r\n            /* return {\r\n              ...state,\r\n            }; */\r\n        }\r\n        case LOAD_FOLLOWINGS_REQUEST: {\r\n            draft.followingList = !action.offset ? [] : draft.followingList;      // offset이 없는 경우, followerList = []\r\n                                                                                  // 이렇게 해줘야 2번씩 로딩 안됨 \r\n            break;\r\n            /* return {\r\n              ...state,\r\n              //hasMoreFollowing: action.offset ? state.hasMoreFollowing : true,  // 처음화면 일때는, offset은 0 이므로, false취급을 받아서 true로 넘어간다.(=더보기 버튼을 보여준다.)                                                         \r\n                                                                                  // (처음화면일때 offset이 0인것은, router.get('/:id/followings'... 에서 확인가능) \r\n                                                                                  // 여기 없어도 됨 (내 Q&A 답글)      \r\n            }; */\r\n        }\r\n        case LOAD_FOLLOWINGS_SUCCESS: {\r\n            action.data.forEach((f) => {\r\n              draft.followingList.push(f);\r\n            });\r\n            draft.hasMoreFollowing = action.data.length === 3;\r\n            break;\r\n            /* return {\r\n              ...state,\r\n              followingList: state.followingList.concat(action.data),   // 기존것을 덮어쓰지 말고, 기존것에 추가\r\n              hasMoreFollowing: action.data.length === 3,               // 방금 로드된 팔로워가 1명 또는 2명이라면, 더보기 버튼을 보여줄 필요가 없다.\r\n                                                                        // 방금 로드된 팔로워가 3명일때만(=limit은 3이었음), 더보기 버튼을 보여줄 필요가 있다. \r\n            }; */\r\n        }\r\n        case LOAD_FOLLOWINGS_FAILURE: {\r\n            break;\r\n            /* return {\r\n              ...state,\r\n            }; */\r\n        }\r\n        case REMOVE_FOLLOWER_REQUEST: {\r\n            break;\r\n            /* return {\r\n              ...state,\r\n            }; */\r\n        }\r\n        case REMOVE_FOLLOWER_SUCCESS: {\r\n            const userIndex1 = draft.Followers.findIndex(v => v.id === action.data);\r\n            draft.me.Followers.splice(userIndex1, 1);\r\n            const userIndex2 = draft.followerList.findIndex(v => v.id === action.data);\r\n            draft.me.followerList.splice(userIndex2, 1);\r\n            break;\r\n            /* return {\r\n              ...state,\r\n              me: {\r\n                ...state.me,\r\n                Followers: state.me.Followers.filter(v => v.id !== action.data),\r\n              },\r\n              followerList: state.followerList.filter(v => v.id !== action.data),\r\n            }; */\r\n        }\r\n        case REMOVE_FOLLOWER_FAILURE: {\r\n            break;\r\n            /* return {\r\n              ...state,\r\n            }; */\r\n        }\r\n        case EDIT_NICKNAME_REQUEST: {\r\n            draft.isEditingNickname = true;\r\n            draft.editNicknameErrorReason = '';\r\n            break;\r\n            /* return {\r\n              ...state,\r\n              isEditingNickname: true,\r\n              editNicknameErrorReason: '',\r\n            }; */\r\n        }\r\n        case EDIT_NICKNAME_SUCCESS: {\r\n            draft.isEditingNickname = false;\r\n            draft.me.nickname = action.data;\r\n            break;\r\n            /* return {\r\n              ...state,\r\n              isEditingNickname: false,\r\n              me: {\r\n                ...state.me,\r\n                nickname: action.data,\r\n              },\r\n            }; */\r\n        }\r\n        case EDIT_NICKNAME_FAILURE: {\r\n            draft.isEditingNickname = false;\r\n            draft.editNicknameErrorReason = action.error;\r\n            break;\r\n            /* return {\r\n              ...state,\r\n              isEditingNickname: false,\r\n              editNicknameErrorReason: action.error,\r\n            }; */\r\n        }\r\n        case REMOVE_POST_OF_ME: {\r\n            const postIndex = draft.me.Posts.findIndex(v => v.id === action.data);\r\n            draft.me.Posts.splice(postIndex, 1);\r\n            break;\r\n            /* return {\r\n              ...state,\r\n              me: {\r\n                ...state.me,\r\n                Posts: state.me.Posts.filter(v => v.id != action.data),\r\n              }\r\n            }; */\r\n        }\r\n        default: {\r\n            break;\r\n            /* return {\r\n                ...state,\r\n            }; */\r\n        }\r\n      }\r\n    });\r\n};\r\nexport default reducer;\r\n\r\n\r\n/* switch (action.type) {\r\n  case LOG_IN_REQUEST: {\r\n      return {\r\n          ...state,\r\n          isLoggingIn: true,\r\n          isLoggedIn: false,\r\n          logInErrorReason: '',\r\n      };\r\n  }\r\n  case LOG_IN_SUCCESS: {\r\n      return {\r\n          ...state,\r\n          isLoggingIn: false,\r\n          me: action.data,\r\n          isLoading: false,\r\n      };\r\n  }\r\n  case LOG_IN_FAILURE: {\r\n      return {\r\n          ...state,\r\n          isLoggingIn: false,\r\n          logInErrorReason: action.error,\r\n          me: null,\r\n      };\r\n  }\r\n  case LOG_OUT_REQUEST: {\r\n      return {\r\n        ...state,\r\n        isLoggingOut: true,\r\n      };\r\n  }\r\n  case LOG_OUT_SUCCESS: {\r\n      return {\r\n        ...state,\r\n        isLoggingOut: false,\r\n        me: null,\r\n      };\r\n  }\r\n  case SIGN_UP_REQUEST: {\r\n      return {\r\n          ...state,\r\n          isSigningUp: true,\r\n          isSignedUp: false,\r\n          signUpErrorReason: '',\r\n      };\r\n  }\r\n  case SIGN_UP_SUCCESS: {\r\n      alert('회원가입 성공!'); \r\n      return {\r\n          isSigningUp: false,\r\n          isSignedUp: true,\r\n      };\r\n  }\r\n  case SIGN_UP_FAILURE: {\r\n      return {\r\n          isSigningUp: false,\r\n          signUpErrorReason: action.error,\r\n      };\r\n  }\r\n  case LOAD_USER_REQUEST: {\r\n      return {\r\n        ...state,\r\n      };\r\n  }\r\n  case LOAD_USER_SUCCESS: {\r\n      if (action.isThisMe) {    // (sagas/user.js)의 function*loadUser() 에서 put으로 넘겨준것이 바로, action.me\r\n          return {\r\n              ...state,\r\n              me: action.data,\r\n            };\r\n      } else {\r\n          return {\r\n              ...state,\r\n              userInfo: action.data,\r\n            };\r\n      }\r\n      \r\n  }\r\n  case LOAD_USER_FAILURE: {\r\n      return {\r\n        ...state,\r\n      };\r\n  }\r\n  case FOLLOW_USER_REQUEST: {\r\n      return {\r\n        ...state,\r\n      };\r\n  }\r\n  case FOLLOW_USER_SUCCESS: {\r\n      return {\r\n        ...state,\r\n        me: {\r\n          ...state.me,\r\n          Followings: [{ id: action.data }, ...state.me.Followings],\r\n        },\r\n      };\r\n  }\r\n  case FOLLOW_USER_FAILURE: {\r\n      return {\r\n        ...state,\r\n      };\r\n  }\r\n  case UNFOLLOW_USER_REQUEST: {\r\n      return {\r\n        ...state,\r\n      };\r\n  }\r\n  case UNFOLLOW_USER_SUCCESS: {\r\n      return {\r\n        ...state,\r\n        me: {\r\n          ...state.me,\r\n          Followings: state.me.Followings.filter(v => v.id !== action.data),\r\n        },\r\n        followingList: state.followingList.filter(v => v.id !== action.data),\r\n      };\r\n  }\r\n  case UNFOLLOW_USER_FAILURE: {\r\n      return {\r\n        ...state,\r\n      };\r\n  }\r\n  case ADD_POST_TO_ME: {\r\n      return {\r\n        ...state,\r\n        me: {\r\n          ...state.me,\r\n          Posts: [{ id: action.data }, ...state.me.Posts],    // 작성한 게시글을, user정보안의 게시글 정보에 넣어주기 \r\n        },\r\n      };\r\n  }\r\n  case LOAD_FOLLOWERS_REQUEST: {\r\n      return {\r\n        ...state,\r\n        //hasMoreFollower: action.offset ? state.hasMoreFollower : true,  // 처음화면 일때는, offset은 0 이므로, false취급을 받아서 true로 넘어간다.(=더보기 버튼을 보여준다.)                                                         \r\n                                                                          // (처음화면일때 offset이 0인것은, router.get('/:id/followers'... 에서 확인가능)      \r\n                                                                          // 여기 없어도 됨 (내 Q&A 답글)\r\n      };\r\n  }\r\n  case LOAD_FOLLOWERS_SUCCESS: {\r\n      return {\r\n        ...state,\r\n        followerList: state.followerList.concat(action.data), // 기존것을 덮어쓰지 말고, 기존것에 추가 \r\n        hasMoreFollower: action.data.length === 3,            // 방금 로드된 팔로워가 1명 또는 2명이라면, 더보기 버튼을 보여줄 필요가 없다.\r\n                                                              // 방금 로드된 팔로워가 3명일때만, 더보기 버튼을 보여줄 필요가 있다.\r\n      };\r\n  }\r\n  case LOAD_FOLLOWERS_FAILURE: {\r\n      return {\r\n        ...state,\r\n      };\r\n  }\r\n  case LOAD_FOLLOWINGS_REQUEST: {\r\n      return {\r\n        ...state,\r\n        //hasMoreFollowing: action.offset ? state.hasMoreFollowing : true,  // 처음화면 일때는, offset은 0 이므로, false취급을 받아서 true로 넘어간다.(=더보기 버튼을 보여준다.)                                                         \r\n                                                                            // (처음화면일때 offset이 0인것은, router.get('/:id/followings'... 에서 확인가능) \r\n                                                                            // 여기 없어도 됨 (내 Q&A 답글)      \r\n      };\r\n  }\r\n  case LOAD_FOLLOWINGS_SUCCESS: {\r\n      return {\r\n        ...state,\r\n        followingList: state.followingList.concat(action.data),   // 기존것을 덮어쓰지 말고, 기존것에 추가\r\n        hasMoreFollowing: action.data.length === 3,               // 방금 로드된 팔로워가 1명 또는 2명이라면, 더보기 버튼을 보여줄 필요가 없다.\r\n                                                                  // 방금 로드된 팔로워가 3명일때만(=limit은 3이었음), 더보기 버튼을 보여줄 필요가 있다. \r\n      };\r\n  }\r\n  case LOAD_FOLLOWINGS_FAILURE: {\r\n      return {\r\n        ...state,\r\n      };\r\n  }\r\n  case REMOVE_FOLLOWER_REQUEST: {\r\n      return {\r\n        ...state,\r\n      };\r\n  }\r\n  case REMOVE_FOLLOWER_SUCCESS: {\r\n      return {\r\n        ...state,\r\n        me: {\r\n          ...state.me,\r\n          Followers: state.me.Followers.filter(v => v.id !== action.data),\r\n        },\r\n        followerList: state.followerList.filter(v => v.id !== action.data),\r\n      };\r\n  }\r\n  case REMOVE_FOLLOWER_FAILURE: {\r\n      return {\r\n        ...state,\r\n      };\r\n  }\r\n  case EDIT_NICKNAME_REQUEST: {\r\n    return {\r\n      ...state,\r\n      isEditingNickname: true,\r\n      editNicknameErrorReason: '',\r\n    };\r\n  }\r\n  case EDIT_NICKNAME_SUCCESS: {\r\n    return {\r\n      ...state,\r\n      isEditingNickname: false,\r\n      me: {\r\n        ...state.me,\r\n        nickname: action.data,\r\n      },\r\n    };\r\n  }\r\n  case EDIT_NICKNAME_FAILURE: {\r\n    return {\r\n      ...state,\r\n      isEditingNickname: false,\r\n      editNicknameErrorReason: action.error,\r\n    };\r\n  }\r\n  case REMOVE_POST_OF_ME: {\r\n    //const index = draft.me.Posts.findIndex(v => v.id === action.data);\r\n    //draft.me.Posts.splice(index, 1);\r\n    //break;\r\n    return {\r\n      ...state,\r\n      me: {\r\n        ...state.me,\r\n        Posts: state.me.Posts.filter(v => v.id != action.data),\r\n      }\r\n    };\r\n  }\r\n  default: {\r\n      return {\r\n          ...state,\r\n      };\r\n  }\r\n} */","var _Object$create = require(\"../core-js/object/create\");\n\nvar setPrototypeOf = require(\"./setPrototypeOf\");\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = _Object$create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) setPrototypeOf(subClass, superClass);\n}\n\nmodule.exports = _inherits;","import _Promise from \"../../core-js/promise\";\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    _Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new _Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}","module.exports = require(\"core-js/library/fn/array/is-array\");","module.exports = require(\"redux-saga/effects\");","module.exports = require(\"core-js/library/fn/object/create\");","module.exports = require(\"immer\");","module.exports = require(\"core-js/library/fn/object/set-prototype-of\");","module.exports = require(\"core-js/library/fn/object/define-property\");","module.exports = require(\"core-js/library/fn/object/assign\");","var _Object$defineProperty = require(\"../core-js/object/define-property\");\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n\n    _Object$defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nmodule.exports = _createClass;","module.exports = require(\"core-js/library/fn/object/set-prototype-of\");","module.exports = require(\"core-js/library/fn/symbol/iterator\");","module.exports = require(\"core-js/library/fn/get-iterator\");","module.exports = require('./dist/client/link')\n","module.exports = require(\"core-js/library/fn/symbol\");","var _typeof = require(\"../helpers/typeof\");\n\nvar assertThisInitialized = require(\"./assertThisInitialized\");\n\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n\n  return assertThisInitialized(self);\n}\n\nmodule.exports = _possibleConstructorReturn;","module.exports = require(\"core-js/library/fn/promise\");","module.exports = require(\"url\");","module.exports = require(\"react\");","\"use strict\";\n/* global __NEXT_DATA__ */\n\nvar _interopRequireDefault = require(\"@babel/runtime-corejs2/helpers/interopRequireDefault\");\n\nvar _stringify = _interopRequireDefault(require(\"@babel/runtime-corejs2/core-js/json/stringify\"));\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime-corejs2/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime-corejs2/helpers/createClass\"));\n\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime-corejs2/helpers/possibleConstructorReturn\"));\n\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime-corejs2/helpers/getPrototypeOf\"));\n\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime-corejs2/helpers/inherits\"));\n\nvar __importStar = void 0 && (void 0).__importStar || function (mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) {\n    if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\n  }\n  result[\"default\"] = mod;\n  return result;\n};\n\nvar __importDefault = void 0 && (void 0).__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar url_1 = require(\"url\");\n\nvar react_1 = __importStar(require(\"react\"));\n\nvar prop_types_1 = __importDefault(require(\"prop-types\"));\n\nvar router_1 = __importStar(require(\"next/router\"));\n\nvar utils_1 = require(\"next-server/dist/lib/utils\");\n\nfunction isLocal(href) {\n  var url = url_1.parse(href, false, true);\n  var origin = url_1.parse(utils_1.getLocationOrigin(), false, true);\n  return !url.host || url.protocol === origin.protocol && url.host === origin.host;\n}\n\nfunction memoizedFormatUrl(formatFunc) {\n  var lastHref = null;\n  var lastAs = null;\n  var lastResult = null;\n  return function (href, as) {\n    if (href === lastHref && as === lastAs) {\n      return lastResult;\n    }\n\n    var result = formatFunc(href, as);\n    lastHref = href;\n    lastAs = as;\n    lastResult = result;\n    return result;\n  };\n}\n\nfunction formatUrl(url) {\n  return url && typeof url === 'object' ? utils_1.formatWithValidation(url) : url;\n}\n\nvar Link =\n/*#__PURE__*/\nfunction (_react_1$Component) {\n  (0, _inherits2.default)(Link, _react_1$Component);\n\n  function Link() {\n    var _this;\n\n    (0, _classCallCheck2.default)(this, Link);\n    _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(Link).apply(this, arguments)); // The function is memoized so that no extra lifecycles are needed\n    // as per https://reactjs.org/blog/2018/06/07/you-probably-dont-need-derived-state.html\n\n    _this.formatUrls = memoizedFormatUrl(function (href, asHref) {\n      return {\n        href: formatUrl(href),\n        as: formatUrl(asHref, true)\n      };\n    });\n\n    _this.linkClicked = function (e) {\n      var _e$currentTarget = e.currentTarget,\n          nodeName = _e$currentTarget.nodeName,\n          target = _e$currentTarget.target;\n\n      if (nodeName === 'A' && (target && target !== '_self' || e.metaKey || e.ctrlKey || e.shiftKey || e.nativeEvent && e.nativeEvent.which === 2)) {\n        // ignore click for new tab / new window behavior\n        return;\n      }\n\n      var _this$formatUrls = _this.formatUrls(_this.props.href, _this.props.as),\n          href = _this$formatUrls.href,\n          as = _this$formatUrls.as;\n\n      if (!isLocal(href)) {\n        // ignore click if it's outside our scope\n        return;\n      }\n\n      var pathname = window.location.pathname;\n      href = url_1.resolve(pathname, href);\n      as = as ? url_1.resolve(pathname, as) : href;\n      e.preventDefault(); //  avoid scroll for urls with anchor refs\n\n      var scroll = _this.props.scroll;\n\n      if (scroll == null) {\n        scroll = as.indexOf('#') < 0;\n      } // replace state instead of push if prop is present\n\n\n      router_1.default[_this.props.replace ? 'replace' : 'push'](href, as, {\n        shallow: _this.props.shallow\n      }).then(function (success) {\n        if (!success) return;\n\n        if (scroll) {\n          window.scrollTo(0, 0);\n          document.body.focus();\n        }\n      }).catch(function (err) {\n        if (_this.props.onError) _this.props.onError(err);\n      });\n    };\n\n    return _this;\n  }\n\n  (0, _createClass2.default)(Link, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.prefetch();\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps) {\n      if ((0, _stringify.default)(this.props.href) !== (0, _stringify.default)(prevProps.href)) {\n        this.prefetch();\n      }\n    }\n  }, {\n    key: \"prefetch\",\n    value: function prefetch() {\n      if (!this.props.prefetch) return;\n      if (typeof window === 'undefined') return; // Prefetch the JSON page if asked (only in the client)\n\n      var pathname = window.location.pathname;\n\n      var _this$formatUrls2 = this.formatUrls(this.props.href, this.props.as),\n          parsedHref = _this$formatUrls2.href;\n\n      var href = url_1.resolve(pathname, parsedHref);\n      router_1.default.prefetch(href);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var children = this.props.children;\n\n      var _this$formatUrls3 = this.formatUrls(this.props.href, this.props.as),\n          href = _this$formatUrls3.href,\n          as = _this$formatUrls3.as; // Deprecated. Warning shown by propType check. If the childen provided is a string (<Link>example</Link>) we wrap it in an <a> tag\n\n\n      if (typeof children === 'string') {\n        children = react_1.default.createElement(\"a\", null, children);\n      } // This will return the first child, if multiple are provided it will throw an error\n\n\n      var child = react_1.Children.only(children);\n      var props = {\n        onClick: function onClick(e) {\n          if (child.props && typeof child.props.onClick === 'function') {\n            child.props.onClick(e);\n          }\n\n          if (!e.defaultPrevented) {\n            _this2.linkClicked(e);\n          }\n        }\n      }; // If child is an <a> tag and doesn't have a href attribute, or if the 'passHref' property is\n      // defined, we specify the current 'href', so that repetition is not needed by the user\n\n      if (this.props.passHref || child.type === 'a' && !('href' in child.props)) {\n        props.href = as || href;\n      } // Add the ending slash to the paths. So, we can serve the\n      // \"<page>/index.html\" directly.\n\n\n      if (process.env.__NEXT_EXPORT_TRAILING_SLASH) {\n        if (props.href && typeof __NEXT_DATA__ !== 'undefined' && __NEXT_DATA__.nextExport) {\n          props.href = router_1.Router._rewriteUrlForNextExport(props.href);\n        }\n      }\n\n      return react_1.default.cloneElement(child, props);\n    }\n  }]);\n  return Link;\n}(react_1.Component);\n\nif (process.env.NODE_ENV === 'development') {\n  var warn = utils_1.execOnce(console.error); // This module gets removed by webpack.IgnorePlugin\n\n  var exact = require('prop-types-exact');\n\n  Link.propTypes = exact({\n    href: prop_types_1.default.oneOfType([prop_types_1.default.string, prop_types_1.default.object]).isRequired,\n    as: prop_types_1.default.oneOfType([prop_types_1.default.string, prop_types_1.default.object]),\n    prefetch: prop_types_1.default.bool,\n    replace: prop_types_1.default.bool,\n    shallow: prop_types_1.default.bool,\n    passHref: prop_types_1.default.bool,\n    scroll: prop_types_1.default.bool,\n    children: prop_types_1.default.oneOfType([prop_types_1.default.element, function (props, propName) {\n      var value = props[propName];\n\n      if (typeof value === 'string') {\n        warn(\"Warning: You're using a string directly inside <Link>. This usage has been deprecated. Please add an <a> tag as child of <Link>\");\n      }\n\n      return null;\n    }]).isRequired\n  });\n}\n\nexports.default = Link;","module.exports = require(\"regenerator-runtime\");","module.exports = require(\"core-js/library/fn/object/assign\");","import _Array$isArray from \"../../core-js/array/is-array\";\nexport default function _arrayWithHoles(arr) {\n  if (_Array$isArray(arr)) return arr;\n}","import _getIterator from \"../../core-js/get-iterator\";\nexport default function _iterableToArrayLimit(arr, i) {\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = _getIterator(arr), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");\n}","import arrayWithHoles from \"./arrayWithHoles\";\nimport iterableToArrayLimit from \"./iterableToArrayLimit\";\nimport nonIterableRest from \"./nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || nonIterableRest();\n}","module.exports = require(\"core-js/library/fn/promise\");","module.exports = require(\"core-js/library/fn/json/stringify\");","module.exports = require(\"core-js/library/fn/symbol/iterator\");","module.exports = require(\"react-redux\");","module.exports = require(\"core-js/library/fn/object/define-property\");","var _Symbol$iterator = require(\"../core-js/symbol/iterator\");\n\nvar _Symbol = require(\"../core-js/symbol\");\n\nfunction _typeof2(obj) { if (typeof _Symbol === \"function\" && typeof _Symbol$iterator === \"symbol\") { _typeof2 = function _typeof2(obj) { return typeof obj; }; } else { _typeof2 = function _typeof2(obj) { return obj && typeof _Symbol === \"function\" && obj.constructor === _Symbol && obj !== _Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof2(obj); }\n\nfunction _typeof(obj) {\n  if (typeof _Symbol === \"function\" && _typeof2(_Symbol$iterator) === \"symbol\") {\n    module.exports = _typeof = function _typeof(obj) {\n      return _typeof2(obj);\n    };\n  } else {\n    module.exports = _typeof = function _typeof(obj) {\n      return obj && typeof _Symbol === \"function\" && obj.constructor === _Symbol && obj !== _Symbol.prototype ? \"symbol\" : _typeof2(obj);\n    };\n  }\n\n  return _typeof(obj);\n}\n\nmodule.exports = _typeof;","module.exports = require(\"regenerator-runtime\");\n","module.exports = require(\"core-js/library/fn/object/create\");","import produce from 'immer';\r\n\r\n/* redux state */\r\nexport const initialState = {\r\n    mainPosts: [],\r\n    imagePaths: [],             // 미리보기 이미지 경로 \r\n    \r\n    isAddingPost: false,        // 포스트 업로드 중\r\n    addPostErrorReason: '',     // 포스트 업로드 실패 사유 \r\n    postAdded: false,           // 포스트 업로드 성공 여부 (쓰는 이유: 글 작성후, 이게 true가 되면 TextArea 비워주기 위해서)\r\n    \r\n    isAddingComment: false,     // 댓글 업로드 중 \r\n    addCommentErrorReason: '',  // 댓글 업로드 에러 사유 \r\n    commentAdded: false,        // 댓글이 추가되었는지 (쓰는 이유: 댓글 작성후, 이게 true가 되면 TextArea 비워주기 위해서)\r\n    \r\n    addLikeErrorReason: '',\r\n\r\n    hasMorePost: false,         // 스크롤을 더 내려야 할지 \r\n    singlePost: null,\r\n};\r\n\r\n/* Action의 이름 */\r\nexport const LOAD_MAIN_POSTS_REQUEST = 'LOAD_MAIN_POSTS_REQUEST';       // 메인 포스트 로딩 액션\r\nexport const LOAD_MAIN_POSTS_SUCCESS = 'LOAD_MAIN_POSTS_SUCCESS';\r\nexport const LOAD_MAIN_POSTS_FAILURE = 'LOAD_MAIN_POSTS_FAILURE';\r\n\r\nexport const LOAD_HASHTAG_POSTS_REQUEST = 'LOAD_HASHTAG_POSTS_REQUEST'; // 해시태그로 검색했을 때 결과 로딩 액션\r\nexport const LOAD_HASHTAG_POSTS_SUCCESS = 'LOAD_HASHTAG_POSTS_SUCCESS';\r\nexport const LOAD_HASHTAG_POSTS_FAILURE = 'LOAD_HASHTAG_POSTS_FAILURE';\r\n\r\nexport const LOAD_USER_POSTS_REQUEST = 'LOAD_USER_POSTS_REQUEST';       // 사용자가 어떤 게시글을 썼는지 로딩 액션\r\nexport const LOAD_USER_POSTS_SUCCESS = 'LOAD_USER_POSTS_SUCCESS';\r\nexport const LOAD_USER_POSTS_FAILURE = 'LOAD_USER_POSTS_FAILURE';\r\n\r\nexport const UPLOAD_IMAGES_REQUEST = 'UPLOAD_IMAGES_REQUEST';           // 이미지 업로드 액션 \r\nexport const UPLOAD_IMAGES_SUCCESS = 'UPLOAD_IMAGES_SUCCESS';\r\nexport const UPLOAD_IMAGES_FAILURE = 'UPLOAD_IMAGES_FAILURE';\r\n\r\nexport const ADD_POST_REQUEST = 'ADD_POST_REQUEST';                     // 게시글 업로드 액션\r\nexport const ADD_POST_SUCCESS = 'ADD_POST_SUCCESS';\r\nexport const ADD_POST_FAILURE = 'ADD_POST_FAILURE';\r\n\r\nexport const LIKE_POST_REQUEST = 'LIKE_POST_REQUEST';                   // 게시글 좋아요 \r\nexport const LIKE_POST_SUCCESS = 'LIKE_POST_SUCCESS';\r\nexport const LIKE_POST_FAILURE = 'LIKE_POST_FAILURE';\r\n\r\nexport const UNLIKE_POST_REQUEST = 'UNLIKE_POST_REQUEST';               // 게시글 좋아요 취소 \r\nexport const UNLIKE_POST_SUCCESS = 'UNLIKE_POST_SUCCESS';\r\nexport const UNLIKE_POST_FAILURE = 'UNLIKE_POST_FAILURE';\r\n\r\nexport const ADD_COMMENT_REQUEST = 'ADD_COMMENT_REQUEST';\r\nexport const ADD_COMMENT_SUCCESS = 'ADD_COMMENT_SUCCESS';\r\nexport const ADD_COMMENT_FAILURE = 'ADD_COMMENT_FAILURE';\r\n\r\nexport const LOAD_COMMENTS_REQUEST = 'LOAD_COMMENTS_REQUEST';           // 게시글 댓글 불러오기 \r\nexport const LOAD_COMMENTS_SUCCESS = 'LOAD_COMMENTS_SUCCESS';\r\nexport const LOAD_COMMENTS_FAILURE = 'LOAD_COMMENTS_FAILURE';\r\n\r\nexport const RETWEET_REQUEST = 'RETWEET_REQUEST';                       // 리트윗\r\nexport const RETWEET_SUCCESS = 'RETWEET_SUCCESS';\r\nexport const RETWEET_FAILURE = 'RETWEET_FAILURE';\r\n\r\nexport const REMOVE_POST_REQUEST = 'REMOVE_POST_REQUEST';               // 포스트 제거 \r\nexport const REMOVE_POST_SUCCESS = 'REMOVE_POST_SUCCESS';\r\nexport const REMOVE_POST_FAILURE = 'REMOVE_POST_FAILURE';\r\n\r\nexport const REMOVE_IMAGE = 'REMOVE_IMAGE';\r\n\r\nexport const LOAD_POST_REQUEST = 'LOAD_POST_REQUEST';           // 게시글 한개 불러오기 \r\nexport const LOAD_POST_SUCCESS = 'LOAD_POST_SUCCESS';\r\nexport const LOAD_POST_FAILURE = 'LOAD_POST_FAILURE';\r\n\r\n/* 실제 Action */\r\n// ...\r\n\r\n/* Reducer */\r\nconst reducer = (state = initialState, action) => {\r\n    /* immer */\r\n    return produce(state, (draft) => {      // immer에게 불변성을 맡기고, 우리는 draft만 자유롭게 변경해주면 된다.\r\n      switch (action.type) {\r\n        case UPLOAD_IMAGES_REQUEST: {\r\n            break;\r\n            /* return {\r\n              ...state,\r\n            }; */\r\n        }\r\n        case UPLOAD_IMAGES_SUCCESS: {\r\n            action.data.forEach((p) => {    // 이처럼, 더이상 불변성을 유지하지 않아도 된다. (immer에서 draft보고 알아서 불변성 감지해준다.)\r\n              draft.imagePaths.push(p);\r\n            }); \r\n            break; \r\n            /* return {\r\n              ...state,\r\n              imagePaths: [...state.imagePaths, ...action.data],    // 기존 imagePaths배열에 action.data 추가 \r\n            }; */\r\n        }\r\n        case UPLOAD_IMAGES_FAILURE: {\r\n            break;\r\n            /* return {\r\n              ...state,\r\n            }; */\r\n        }\r\n        case REMOVE_IMAGE: {\r\n            const index = draft.imagePaths.findIndex((v, i) => i === action.index);\r\n            draft.imagePaths.splice(index, 1);\r\n            break;\r\n            /* return {\r\n                ...state,\r\n                imagePaths: state.imagePaths.filter((v, i) => i !== action.index),\r\n            }; */\r\n        }\r\n        case LOAD_MAIN_POSTS_REQUEST: \r\n        case LOAD_HASHTAG_POSTS_REQUEST:\r\n        case LOAD_USER_POSTS_REQUEST: {\r\n            draft.mainPosts = !action.lastId ? [] : draft.mainPosts;      // lastId가 없으면, mainPosts = []\r\n            draft.hasMorePost = action.lastId ? draft.hasMorePost : true;\r\n            break;\r\n            /* return {\r\n              ...state,\r\n              mainPosts: action.lastId === 0 ? [] : state.mainPosts,  // lastId가 0 이면(=처음 화면이면): REQUEST시, mainPosts = []  -> 다른데 갔다가 다시 메인화면 올 수 도 있기 때문  \r\n                                                                      // lastId가 0 이 아니라면(=더보기 클릭시): REQUEST시, 기존 mainPosts가져오기 \r\n              hasMorePost: action.lastId ? state.hasMorePost : true,  // 맨 첫 페이지에 게시글 로딩할때, hasMorePost가 true가 되야함. (pages/index.js hasMorePost분기 부분 참조)\r\n            }; */\r\n        }\r\n        case LOAD_MAIN_POSTS_SUCCESS: \r\n        case LOAD_HASHTAG_POSTS_SUCCESS:\r\n        case LOAD_USER_POSTS_SUCCESS: {\r\n            action.data.forEach((p) => {\r\n              draft.mainPosts.push(p);\r\n            });\r\n            break;\r\n            /* return {\r\n              ...state,\r\n              mainPosts: state.mainPosts.concat(action.data),   // 덮어쓰는게 아니라, 이전 게시글에 추가하기\r\n              hasMorePost: action.data.length === 10,           // reducers/user.js에서 hasMoreFollower했던거랑 동일한 원리 !!\r\n            }; */\r\n        }\r\n        case LOAD_MAIN_POSTS_FAILURE: \r\n        case LOAD_HASHTAG_POSTS_FAILURE:\r\n        case LOAD_USER_POSTS_FAILURE: {\r\n            break;\r\n            /* return {\r\n              ...state,\r\n            }; */\r\n        }\r\n        case ADD_POST_REQUEST: {\r\n            draft.isAddingPost = true;\r\n            draft.addPostErrorReason = '';\r\n            draft.postAdded = false;\r\n            break;\r\n            /* return {\r\n                ...state,\r\n                isAddingPost: true,\r\n                addPostErrorReason: '',\r\n                postAdded: false,\r\n            }; */\r\n        }\r\n        case ADD_POST_SUCCESS: {\r\n            draft.isAddingPost = false;\r\n            draft.mainPosts.unshift(action.data);   // 배열 맨 앞에 추가할때는 unshift()\r\n            draft.postAdded = true;\r\n            draft.imagePaths = [];\r\n            break;\r\n            /* return {\r\n                ...state,\r\n                isAddingPost: false,\r\n                mainPosts: [action.data, ...state.mainPosts], // 포스트들 앞에 들어가게 된다.\r\n                postAdded: true,\r\n                imagePaths: [],                               // success하는 순간, imagePaths 비워주기 \r\n            }; */\r\n        }\r\n        case ADD_POST_FAILURE: {\r\n            draft.isAddingPost = false;\r\n            draft.addPostErrorReason = action.error;\r\n            break;\r\n            /* return {\r\n                ...state,\r\n                isAddingPost: false,\r\n                addPostErrorReason: action.error,\r\n            }; */\r\n        }\r\n        case ADD_COMMENT_REQUEST: {\r\n            draft.isAddingComment = true;\r\n            draft.addCommentErrorReason = '';\r\n            draft.commentAdded = false;\r\n            break;\r\n            /* return {\r\n                ...state,\r\n                isAddingComment: true,\r\n                addCommentErrorReason: '',\r\n                commentAdded: false,\r\n            }; */\r\n            \r\n        }\r\n        case ADD_COMMENT_SUCCESS: {\r\n            const postIndex = draft.mainPosts.findIndex(v => v.id === action.data.postId);\r\n            draft.mainPosts[postIndex].Comments.push(action.data.comment);\r\n            draft.isAddingComment = false;\r\n            draft.commentAdded = true;\r\n            break;\r\n            /* const postIndex = state.mainPosts.findIndex(v => v.id === action.data.postId); // 먼저, 여러개의 게시글 중에 해당 게시글의 index를 도출한 후,\r\n            const post = state.mainPosts[postIndex];                  // 해당 게시글을 찾는다\r\n            const Comments = [...post.Comments, action.data.comment]; // 불변성을 확보하면서, 뒤에다가 새 댓글 달아준다 \r\n            const mainPosts = [...state.mainPosts];                   // mainPosts도 불변성을 확보해 줘야한다.\r\n            mainPosts[postIndex] = { ...post, Comments };\r\n            return {\r\n                ...state,\r\n                isAddingComment: false,\r\n                mainPosts, // 여러 게시글 중에 해당하는 게시글에 해당 댓글 달아주기 (불변성 때문에 복잡한 작업)\r\n                commentAdded: true,\r\n            }; */\r\n        }\r\n        case ADD_COMMENT_FAILURE: {\r\n            draft.isAddingComment = false;\r\n            draft.addCommentErrorReason = action.error;\r\n            break;\r\n            /* return {\r\n                ...state,\r\n                isAddingComment: false,\r\n                addCommentErrorReason: action.error,\r\n            }; */\r\n        }\r\n        case LOAD_COMMENTS_SUCCESS: {\r\n            const postIndex = draft.mainPosts.findIndex(v => v.id === action.data.postId);\r\n            draft.mainPosts[postIndex].Comments = action.data.comments;\r\n            break;\r\n            /* const postIndex = state.mainPosts.findIndex(v => v.id === action.data.postId);\r\n            const post = state.mainPosts[postIndex];\r\n            const Comments = action.data.comments;\r\n            const mainPosts = [...state.mainPosts];         // mainPosts도 불변성을 확보해 줘야한다.\r\n            mainPosts[postIndex] = { ...post, Comments };\r\n            return {\r\n              ...state,\r\n              mainPosts,\r\n            }; */\r\n        }\r\n        case LIKE_POST_REQUEST: {\r\n            break;\r\n            /* return {\r\n              ...state,\r\n            }; */\r\n        }\r\n        case LIKE_POST_SUCCESS: {\r\n            const postIndex = draft.mainPosts.findIndex(v => v.id === action.data.postId);\r\n            draft.mainPosts[postIndex].Likers.unshift({ id: action.data.userId });            // 배열 맨 앞에 추가할때는 unshift()\r\n            break;\r\n            /* const postIndex = state.mainPosts.findIndex(v => v.id === action.data.postId);\r\n            const post = state.mainPosts[postIndex];\r\n            const Likers = [{ id: action.data.userId }, ...post.Likers];    // 좋아요 누른 사람들 목록에, 본인 추가 \r\n            const mainPosts = [...state.mainPosts];\r\n            mainPosts[postIndex] = { ...post, Likers };\r\n            return {\r\n              ...state,\r\n              mainPosts,\r\n            }; */\r\n        }\r\n        case LIKE_POST_FAILURE: {\r\n            alert('좋아요 실패!');\r\n            draft.addLikeErrorReason = action.error;\r\n            break;\r\n            /* return {\r\n              ...state,\r\n              addLikeErrorReason: action.error,\r\n            }; */\r\n        }\r\n        case UNLIKE_POST_REQUEST: {\r\n            break;\r\n            /* return {\r\n              ...state,\r\n            }; */\r\n        }\r\n        case UNLIKE_POST_SUCCESS: {\r\n            const postIndex = draft.mainPosts.findIndex(v => v.id === action.data.postId);\r\n            const likerIndex = draft.mainPosts[postIndex].Likers.findIndex(v => v.id === action.data.userId);\r\n            draft.mainPosts[postIndex].Likers.splice(likerIndex, 1);\r\n            break;\r\n            /* const postIndex = state.mainPosts.findIndex(v => v.id === action.data.postId);\r\n            const post = state.mainPosts[postIndex];\r\n            const Likers = post.Likers.filter(v => v.id !== action.data.userId);  // 좋아요 누른 사람들 목록에, 본인 제외  \r\n            const mainPosts = [...state.mainPosts];\r\n            mainPosts[postIndex] = { ...post, Likers };\r\n            return {\r\n              ...state,\r\n              mainPosts,\r\n            }; */\r\n        }\r\n        case UNLIKE_POST_FAILURE: {\r\n            break;\r\n            /* return {\r\n              ...state,\r\n            }; */\r\n        }\r\n        case RETWEET_REQUEST: {\r\n            break;\r\n            /* return {\r\n              ...state,\r\n            }; */\r\n        }\r\n        case RETWEET_SUCCESS: {\r\n            draft.mainPosts.unshift(action.data);\r\n            break;\r\n            /* return {\r\n              ...state,\r\n              mainPosts: [action.data, ...state.mainPosts],     // 기존 게시글의 제일 앞에 추가해준다. \r\n            }; */\r\n        }\r\n        case RETWEET_FAILURE: {\r\n            break;\r\n            /* return {\r\n              ...state,\r\n            }; */\r\n        }\r\n        case REMOVE_POST_REQUEST: {\r\n            break;\r\n            /* return {\r\n              ...state,\r\n            }; */\r\n        }\r\n        case REMOVE_POST_SUCCESS: {\r\n            const index = draft.mainPosts.findIndex(v => v.id === action.data);\r\n            draft.mainPosts.splice(index, 1);\r\n            break;\r\n            /* return {\r\n              ...state,\r\n              mainPosts: state.mainPosts.filter(v => v.id !== action.data),\r\n            }; */\r\n        }\r\n        case REMOVE_POST_FAILURE: {\r\n            break;\r\n            /* return {\r\n              ...state,\r\n            }; */\r\n        }\r\n        case LOAD_POST_SUCCESS: {\r\n          draft.singlePost = action.data;\r\n          break;\r\n        }\r\n        default: {\r\n            break;\r\n            /* return {\r\n              ...state,\r\n            }; */\r\n        }\r\n      }\r\n    });\r\n};\r\nexport default reducer;\r\n\r\n\r\n\r\n/* immer쓰기 전 코드 */\r\n/* switch (action.type) {\r\n  case UPLOAD_IMAGES_REQUEST: {\r\n      return {\r\n        ...state,\r\n      };\r\n  }\r\n  case UPLOAD_IMAGES_SUCCESS: {\r\n      return {\r\n        ...state,\r\n        imagePaths: [...state.imagePaths, ...action.data],    // 기존 imagePaths배열에 action.data 추가 \r\n      };\r\n  }\r\n  case UPLOAD_IMAGES_FAILURE: {\r\n      return {\r\n        ...state,\r\n      };\r\n  }\r\n  case REMOVE_IMAGE: {\r\n      return {\r\n          ...state,\r\n          imagePaths: state.imagePaths.filter((v, i) => i !== action.index),\r\n      };\r\n  }\r\n  case LOAD_MAIN_POSTS_REQUEST: \r\n  case LOAD_HASHTAG_POSTS_REQUEST:\r\n  case LOAD_USER_POSTS_REQUEST: {\r\n      return {\r\n        ...state,\r\n        mainPosts: action.lastId === 0 ? [] : state.mainPosts,  // lastId가 0 이면(=처음 화면이면): REQUEST시, mainPosts = []  -> 다른데 갔다가 다시 메인화면 올 수 도 있기 때문  \r\n                                                                // lastId가 0 이 아니라면(=더보기 클릭시): REQUEST시, 기존 mainPosts가져오기 \r\n        hasMorePost: action.lastId ? state.hasMorePost : true,  // 맨 첫 페이지에 게시글 로딩할때, hasMorePost가 true가 되야함. (pages/index.js hasMorePost분기 부분 참조)\r\n      };\r\n  }\r\n  case LOAD_MAIN_POSTS_SUCCESS: \r\n  case LOAD_HASHTAG_POSTS_SUCCESS:\r\n  case LOAD_USER_POSTS_SUCCESS: {\r\n      return {\r\n        ...state,\r\n        mainPosts: state.mainPosts.concat(action.data),   // 덮어쓰는게 아니라, 이전 게시글에 추가하기\r\n        hasMorePost: action.data.length === 10,           // reducers/user.js에서 hasMoreFollower했던거랑 동일한 원리 !!\r\n      };\r\n  }\r\n  case LOAD_MAIN_POSTS_FAILURE: \r\n  case LOAD_HASHTAG_POSTS_FAILURE:\r\n  case LOAD_USER_POSTS_FAILURE: {\r\n      return {\r\n        ...state,\r\n      };\r\n  }\r\n  case ADD_POST_REQUEST: {\r\n      return {\r\n          ...state,\r\n          isAddingPost: true,\r\n          addPostErrorReason: '',\r\n          postAdded: false,\r\n      };\r\n  }\r\n  case ADD_POST_SUCCESS: {\r\n      return {\r\n          ...state,\r\n          isAddingPost: false,\r\n          mainPosts: [action.data, ...state.mainPosts], // 포스트들 앞에 들어가게 된다.\r\n          postAdded: true,\r\n          imagePaths: [],                               // success하는 순간, imagePaths 비워주기 \r\n      };\r\n  }\r\n  case ADD_POST_FAILURE: {\r\n      return {\r\n          ...state,\r\n          isAddingPost: false,\r\n          addPostErrorReason: action.error,\r\n      };\r\n  }\r\n  case ADD_COMMENT_REQUEST: {\r\n      return {\r\n          ...state,\r\n          isAddingComment: true,\r\n          addCommentErrorReason: '',\r\n          commentAdded: false,\r\n      };\r\n  }\r\n  case ADD_COMMENT_SUCCESS: {\r\n      // 항상 불변성을 조심해야 된다. \r\n      // 바뀔 객체만 새로 만들어 줘야된다. \r\n      const postIndex = state.mainPosts.findIndex(v => v.id === action.data.postId); // 먼저, 여러개의 게시글 중에 해당 게시글의 index를 도출한 후,\r\n      const post = state.mainPosts[postIndex]; // 해당 게시글을 찾는다\r\n      const Comments = [...post.Comments, action.data.comment]; // 불변성을 확보하면서, 뒤에다가 새 댓글 달아준다 \r\n      const mainPosts = [...state.mainPosts]; // mainPosts도 불변성을 확보해 줘야한다.\r\n      mainPosts[postIndex] = { ...post, Comments };\r\n\r\n      return {\r\n          ...state,\r\n          isAddingComment: false,\r\n          mainPosts, // 여러 게시글 중에 해당하는 게시글에 해당 댓글 달아주기 (불변성 때문에 복잡한 작업)\r\n          commentAdded: true,\r\n      };\r\n  }\r\n  case ADD_COMMENT_FAILURE: {\r\n      return {\r\n          ...state,\r\n          isAddingComment: false,\r\n          addCommentErrorReason: action.error,\r\n      };\r\n  }\r\n  case LOAD_COMMENTS_SUCCESS: {\r\n      // 항상 불변성을 조심해야 된다. \r\n      // 바뀔 객체만 새로 만들어 줘야된다. \r\n      const postIndex = state.mainPosts.findIndex(v => v.id === action.data.postId);\r\n      const post = state.mainPosts[postIndex];\r\n      const Comments = action.data.comments;\r\n      const mainPosts = [...state.mainPosts];\r\n      mainPosts[postIndex] = { ...post, Comments };\r\n\r\n      return {\r\n        ...state,\r\n        mainPosts,\r\n      };\r\n  }\r\n  case LIKE_POST_REQUEST: {\r\n      return {\r\n        ...state,\r\n      };\r\n  }\r\n  case LIKE_POST_SUCCESS: {\r\n      // 항상 불변성을 조심해야 된다. \r\n      // 바뀔 객체만 새로 만들어 줘야된다. \r\n      const postIndex = state.mainPosts.findIndex(v => v.id === action.data.postId);\r\n      const post = state.mainPosts[postIndex];\r\n      const Likers = [{ id: action.data.userId }, ...post.Likers];    // 좋아요 누른 사람들 목록에, 본인 추가 \r\n      const mainPosts = [...state.mainPosts];\r\n      mainPosts[postIndex] = { ...post, Likers };\r\n\r\n      return {\r\n        ...state,\r\n        mainPosts,\r\n      };\r\n  }\r\n  case LIKE_POST_FAILURE: {\r\n      alert('좋아요 실패!');\r\n      return {\r\n        ...state,\r\n        addLikeErrorReason: action.error,\r\n      };\r\n  }\r\n  case UNLIKE_POST_REQUEST: {\r\n      return {\r\n        ...state,\r\n      };\r\n  }\r\n  case UNLIKE_POST_SUCCESS: {\r\n      const postIndex = state.mainPosts.findIndex(v => v.id === action.data.postId);\r\n      const post = state.mainPosts[postIndex];\r\n      const Likers = post.Likers.filter(v => v.id !== action.data.userId);  // 좋아요 누른 사람들 목록에, 본인 제외  \r\n      const mainPosts = [...state.mainPosts];\r\n      mainPosts[postIndex] = { ...post, Likers };\r\n\r\n      return {\r\n        ...state,\r\n        mainPosts,\r\n      };\r\n  }\r\n  case UNLIKE_POST_FAILURE: {\r\n      return {\r\n        ...state,\r\n      };\r\n  }\r\n  case RETWEET_REQUEST: {\r\n      return {\r\n        ...state,\r\n      };\r\n  }\r\n  case RETWEET_SUCCESS: {\r\n      return {\r\n        ...state,\r\n        mainPosts: [action.data, ...state.mainPosts],     // 기존 게시글의 제일 앞에 추가해준다. \r\n      };\r\n  }\r\n  case RETWEET_FAILURE: {\r\n      return {\r\n        ...state,\r\n      };\r\n  }\r\n  case REMOVE_POST_REQUEST: {\r\n      return {\r\n        ...state,\r\n      };\r\n  }\r\n  case REMOVE_POST_SUCCESS: {\r\n      //const index = draft.mainPosts.findIndex(v => v.id === action.data);\r\n      //draft.mainPosts.splice(index, 1);\r\n      //break;\r\n      return {\r\n        ...state,\r\n        mainPosts: state.mainPosts.filter(v => v.id !== action.data),\r\n      };\r\n  }\r\n  case REMOVE_POST_FAILURE: {\r\n      return {\r\n        ...state,\r\n      };\r\n  }\r\n  default: {\r\n      return {\r\n          ...state,\r\n      };\r\n  }\r\n} */","module.exports = require(\"core-js/library/fn/array/is-array\");","module.exports = require(\"next-server/dist/lib/utils\");","module.exports = require(\"next-redux-saga\");","module.exports = require(\"redux\");","module.exports = require(\"prop-types\");","import React, { useState, useCallback, useEffect } from 'react';\r\nimport { Form, Input, Checkbox, Button } from 'antd';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport Router from 'next/router';\r\n\r\nimport { SIGN_UP_REQUEST } from '../reducers/user';\r\n\r\n// 중복되는 로직의 이벤트 처리 -> 커스텀 훅\r\n// export해놓으면 다른곳에서 모듈처럼 사용가능 !\r\nexport const useInput = (initValue = null) => {     \r\n    const [value, setter] = useState(initValue);\r\n    const handler = useCallback((e) =>{\r\n        setter(e.target.value);\r\n    }, []);\r\n    return [value, handler];\r\n};\r\n\r\nconst Signup = () => {\r\n    const [passwordCheck, setPasswordCheck] = useState('');\r\n    const [term, setTerm] = useState(false);\r\n    const [passwordError, setPasswordError] = useState(false);\r\n    const [termError, setTermError] = useState(false);\r\n    \r\n\r\n    const [id, onChangeId] = useInput('');\r\n    const [nick, onChangeNick] = useInput('');\r\n    const [password, onChangePassword] = useInput('');\r\n\r\n    const dispatch = useDispatch();\r\n    const { isSigningUp, me } = useSelector(state => state.user);\r\n\r\n    // 회원가입 창에서 로그인 해버리는 경우, 메인페이지로 redirect\r\n    useEffect(() => {\r\n        if (me) {\r\n            alert('로그인 되었습니다. 메인페이지로 이동합니다.')\r\n            Router.push('/');\r\n        }\r\n    }, [me && me.id]);\r\n\r\n    const onSubmit = useCallback((e) =>{\r\n        e.preventDefault();\r\n        if (password !== passwordCheck) {\r\n            return setPasswordError(true);\r\n        }\r\n        if (!term) {\r\n            return setTermError(true);\r\n        }\r\n        return dispatch({   // front/sagas/user.js의 sighUp함수의 매개변수인 aciton에 data객체가 담긴다.\r\n            type: SIGN_UP_REQUEST,\r\n            data: {\r\n                userId: id,\r\n                password,\r\n                nickname: nick,\r\n            },\r\n        });\r\n    }, [id, nick, password, passwordCheck, term]);\r\n\r\n    const onChangePasswordCheck = useCallback((e) => {\r\n        setPasswordError(e.target.value !== password); // 비밀번호 확인 칠때마다, 비밀번호와 같은지 확인\r\n        setPasswordCheck(e.target.value);\r\n    }, [password]);\r\n\r\n    const onChangeTerm = useCallback((e) => {\r\n        setTermError(false);\r\n        setTerm(e.target.checked);\r\n    }, []);\r\n\r\n    if (me) {\r\n        return null;    // 내가 로그인한 상태면, 회원가입 화면을 아예 안보여준다. \r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Form onSubmit={onSubmit} style={{ padding: 50 }}>\r\n                <div>\r\n                    <label htmlFor=\"user-id\">아이디</label>\r\n                    <br />\r\n                    <Input name=\"user-id\" value={id} required onChange={onChangeId} />\r\n                </div>\r\n                <div>\r\n                    <label htmlFor=\"user-nick\">닉네임</label>\r\n                    <br />\r\n                    <Input name=\"user-nick\" value={nick} required onChange={onChangeNick} />\r\n                </div>\r\n                <div>\r\n                    <label htmlFor=\"user-password\">비밀번호</label>\r\n                    <br />\r\n                    <Input name=\"user-password\" type=\"password\" value={password} required onChange={onChangePassword} />\r\n                </div>\r\n                <div>\r\n                    <label htmlFor=\"user-password-check\">비밀번호 확인</label>\r\n                    <br />\r\n                    <Input name=\"user-password-check\" type=\"password\" value={passwordCheck} required onChange={onChangePasswordCheck} />\r\n                    {passwordError && <div style={{ color: 'red' }}>비밀번호가 일치하지 않습니다.</div>}\r\n                </div>\r\n                <div>\r\n                    <Checkbox name=\"user-term\" checked={term} onChange={onChangeTerm}>\r\n                        OOO 약관에 동의합니다.\r\n                    </Checkbox>\r\n                    {termError && <div style={{ color: 'red' }}>약관에 동의하셔야 합니다.</div>}\r\n                </div>\r\n                <div style={{ maringTop: 10 }}>\r\n                    <Button type=\"primary\" htmlType=\"submit\" loading={isSigningUp}>가입하기</Button>\r\n                </div>\r\n            </Form>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Signup;","var _Object$setPrototypeOf = require(\"../core-js/object/set-prototype-of\");\n\nfunction _setPrototypeOf(o, p) {\n  module.exports = _setPrototypeOf = _Object$setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}\n\nmodule.exports = _setPrototypeOf;","module.exports = require(\"core-js/library/fn/symbol\");","module.exports = require(\"next/head\");","module.exports = require(\"react-helmet\");","module.exports = require(\"axios\");"],"sourceRoot":""}